<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>wenke</title>
  
  <subtitle>个人博客</subtitle>
  <link href="https://wenkex.gitee.io/atom.xml" rel="self"/>
  
  <link href="https://wenkex.gitee.io/"/>
  <updated>2022-10-19T10:20:41.598Z</updated>
  <id>https://wenkex.gitee.io/</id>
  
  <author>
    <name>wenke</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>蓝桥杯准备</title>
    <link href="https://wenkex.gitee.io/2022/101963206.html"/>
    <id>https://wenkex.gitee.io/2022/101963206.html</id>
    <published>2022-10-19T10:20:35.000Z</published>
    <updated>2022-10-19T10:20:41.598Z</updated>
    
    <content type="html"><![CDATA[<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>JDK 1.8<br>Eclipse-java-2020-06<br>API 帮助文档</p><h2 id="Eclipse-java-2020-06"><a href="#Eclipse-java-2020-06" class="headerlink" title="Eclipse-java-2020-06"></a>Eclipse-java-2020-06</h2><table><thead><tr><th>快捷键</th><th>描述</th></tr></thead><tbody><tr><td>Ctrl+1</td><td>快速修复(最经典的快捷键,就不用多说了)</td></tr><tr><td>Ctrl+D:</td><td>删除当前行</td></tr><tr><td>Ctrl+Alt+↓</td><td>复制当前行到下一行(复制增加)</td></tr><tr><td>Ctrl+Alt+↑</td><td>复制当前行到上一行(复制增加)</td></tr><tr><td>Alt+↓</td><td>当前行和下面一行交换位置(特别实用,可以省去先剪切,再粘贴了)</td></tr><tr><td>Alt+↑</td><td>当前行和上面一行交换位置(同上)</td></tr><tr><td>Alt+←</td><td>前一个编辑的页面</td></tr><tr><td>Alt+→</td><td>下一个编辑的页面(当然是针对上面那条来说了)</td></tr><tr><td>Alt+Enter</td><td>显示当前选择资源(工程,or 文件 or文件)的属性</td></tr><tr><td>Alt+/</td><td>补全当前所输入代码</td></tr><tr><td>Shift+Enter</td><td>在当前行的下一行插入空行(这时鼠标可以在当前行的任一位置,不一定是最后)</td></tr><tr><td>Shift+Ctrl+Enter</td><td>在当前行插入空行(原理同上条)</td></tr><tr><td>Ctrl+Q</td><td>定位到最后编辑的地方</td></tr><tr><td>Ctrl+L</td><td>定位在某行 (对于程序超过100的人就有福音了)</td></tr><tr><td>Ctrl+M</td><td>最大化当前的Edit或View (再按则反之)</td></tr><tr><td>Ctrl+/</td><td>注释当前行,再按则取消注释</td></tr><tr><td>Ctrl+O</td><td>快速显示 OutLine</td></tr><tr><td>Ctrl+T</td><td>快速显示当前类的继承结构</td></tr><tr><td>Ctrl+W</td><td>关闭当前Editer</td></tr></tbody></table><h3 id="设置工作空间编码格式"><a href="#设置工作空间编码格式" class="headerlink" title="设置工作空间编码格式"></a>设置工作空间编码格式</h3><p>在Window–Preferences–General–Workspace下，面板Text file encoding 选择UTF-8格式</p><h3 id="代码提示和自动补全"><a href="#代码提示和自动补全" class="headerlink" title="代码提示和自动补全"></a>代码提示和自动补全</h3><p>eclipse代码里面的代码提示功能默认是关闭的，只有输入“.”的时候才会提示功能<br>开启代码自动提示功能打开 Window -&gt; Perferences -&gt; Java -&gt;Editor -&gt; Content Assist<br>在右边最下面一栏找到 auto-Activation ，下面有三个选项，找到第二个“Auto activation triggers for Java：”选项在其后的文本框中会看到一个“.”存在。这表示：只有输入“.”之后才会有代码提示和自动补全，我们要修改的地方就是这。把该文本框中的“.”换掉，换成“abcdefghijklmnopqrstuvwxyz.”，这样，你在Eclipse里面写Java代码就可以做到按“abcdefghijklmnopqrstuvwxyz.”中的任意一个字符都会有代码提示。</p><h3 id="代码自动保存"><a href="#代码自动保存" class="headerlink" title="代码自动保存"></a>代码自动保存</h3><p>1.window-&gt; Perferences-&gt; General-&gt;WorkPlace -&gt; build :勾选Save automatically before manual build</p><p>2.window-&gt; Perferences-&gt;Run/Debug -&gt; Launching:在Save required dirty…下勾选always</p><h3 id="代码模板"><a href="#代码模板" class="headerlink" title="代码模板"></a>代码模板</h3><p>syso<br>main<br>for</p><h3 id="调试的相关快捷键"><a href="#调试的相关快捷键" class="headerlink" title="调试的相关快捷键"></a>调试的相关快捷键</h3><p>F5    单步跳入<br>F6    单步跳过<br>F7    单步返回<br>F8    继续<br>Ctrl+Shift+D    显示变量的值<br>Ctrl+Shift+B    在当前行设置或者去掉断点<br>Ctrl+R    运行至行(超好用，可以节省好多的断点)</p><h2 id="温馨提示："><a href="#温馨提示：" class="headerlink" title="温馨提示："></a>温馨提示：</h2><p>Java 选手请务必不要使用 package 语句，并且确保自己的主类名称为 Main，否则会导致评测系统运行时找不到主类而得 0 分。Java 选手如果程序中引用了类库，在提交时必须将 import 语句与程序的其他部分同时提交。只允许使用 Java 自带的类库.</p><h2 id="填空题"><a href="#填空题" class="headerlink" title="填空题"></a>填空题</h2><p>顾名思义，你只需要填出正确结果就行。如果能使用代码算出来就用代码，如果实在不会写代码，就用手算！对，没错，只要你能手算出来就是对的！</p><p>对于结果填空题，题目保证只有唯一解，选手的结果只有和解完全相同才得分，出现格式错误或有多余内容时不得分.</p><h2 id="大题："><a href="#大题：" class="headerlink" title="大题："></a>大题：</h2><p>大题肯定要写代码啦，这个逃不掉的，所以建议你跟着我的规划每天刷题，不要偷懒，拿个省一和国奖不是问题！</p><p>对于编程大题，评测系统将使用多个评测数据来测试程序。每个评测数据有对应的分数。选手所提交的程序将分别用每个评测数据作为输入来运行。对于某个评测数据，如果选手程序的输出与正确答案是匹配的，则选手获得该评测数据的分数.</p><p>我的建议是，不管你用什么方法，只要能算出结果就行，不要管是不是暴力求解，比赛的时候做出来就行，官方没有要求你做优化，只需要你把题解出来就行</p><h2 id="建议技巧"><a href="#建议技巧" class="headerlink" title="建议技巧"></a>建议技巧</h2><p>官方规则中说到，全部是机器评分！ 所以评分是只看结果的！所以你懂的…如果实在不会还能骗几分！ 对于大题，比如你能手算出结果是什么，但是你不会写代码，你可以强行写一个简单的demo和结果输出，也许能骗几分，当然这是最最最后的办法，希望你还是要平时多练题。科学刷题！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;环境&quot;&gt;&lt;a href=&quot;#环境&quot; class=&quot;headerlink&quot; title=&quot;环境&quot;&gt;&lt;/a&gt;环境&lt;/h2&gt;&lt;p&gt;JDK 1.8&lt;br&gt;Eclipse-java-2020-06&lt;br&gt;API 帮助文档&lt;/p&gt;
&lt;h2 id=&quot;Eclipse-java-2</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://wenkex.gitee.io/2022/10190.html"/>
    <id>https://wenkex.gitee.io/2022/10190.html</id>
    <published>2022-10-19T09:08:06.139Z</published>
    <updated>2022-10-19T09:08:09.235Z</updated>
    
    <content type="html"><![CDATA[<h1 id="抓包"><a href="#抓包" class="headerlink" title="抓包"></a>抓包</h1><p>通过对APP的网络传输协议进行抓包，可以了解到APP向服务器发送了什么、服务器向客户端下放了哪些数据。有了这些网络数据，我们可以知道APP都收集了哪些设备信息、个人信息（个人隐私检测？）；可以知道服务器在下放数据的时候，是否发送了多余的他人信息（敏感信息泄露）、是否下放了付费数据特权数据（破解付费VIP关键）；</p><h1 id="Fiddler"><a href="#Fiddler" class="headerlink" title="Fiddler"></a>Fiddler</h1><p><a href="https://www.telerik.com/download">https://www.telerik.com/download</a><br>Fiddler Classic（经典版），这个版本是免费的，不过只能在Windows上使用。</p><p>Fiddler Everywhere可以在所有平台使用，并且相当于Fiddler Classic+postman，但是是收费的。</p><h2 id="Fiddler简介"><a href="#Fiddler简介" class="headerlink" title="Fiddler简介"></a>Fiddler简介</h2><p>Fiddler是最强大最好用的Web调试工具之一， 它能记录所有客户端和服务器的http和https请求。允许你监视、设置断点、甚至修改输入输出数据。Fiddler包含了一个强大的基于事件脚本的子系统，并且能使用.net语言进行扩展。换言之，你对HTTP 协议越了解，你就能越掌握Fiddler的使用方法。你越使用Fiddler，就越能帮助你了解HTTP协议。</p><h2 id="Fiddler的工作原理"><a href="#Fiddler的工作原理" class="headerlink" title="Fiddler的工作原理"></a>Fiddler的工作原理</h2><p>Fiddler 是以代理web服务器的形式工作的，它使用代理地址:127.0.0.1，端口:8888。 当Fiddler退出的时候它会自动注销， 这样就不会影响别的程序。不过如果Fiddler非正常退出，这时候因为Fiddler没有自动注销，会造成网页无法访问。 解决的办法是重新启动下Fiddler。</p><p>个人理解：fiddler是一个抓包工具，当浏览器访问服务器会形成一个请求，此时，fiddler就处于请求之间，当浏览器发送请求，会先经过fiddler，然后在到服务器；当服务器有返回数据给浏览器显示时，也会先经过fiddler，然后数据才到浏览器中显示，这样一个过程，fiddler就抓取到了请求和响应的整个过程。</p><h2 id="Fiddler开启https"><a href="#Fiddler开启https" class="headerlink" title="Fiddler开启https"></a>Fiddler开启https</h2><p>默认Fiddler只能抓取http协议的数据报文<br>如何抓取https=http+ss安全通道协议的报文<br>tool-option 勾选两个捕获<br>tool-option-Action 重置根证书</p><p>允许外部电脑连接到fiddler</p><h1 id="app抓包"><a href="#app抓包" class="headerlink" title="app抓包"></a>app抓包</h1><p><a href="https://mp.weixin.qq.com/s/CbCPJuX1h2uphwQkAystMw">https://mp.weixin.qq.com/s/CbCPJuX1h2uphwQkAystMw</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;抓包&quot;&gt;&lt;a href=&quot;#抓包&quot; class=&quot;headerlink&quot; title=&quot;抓包&quot;&gt;&lt;/a&gt;抓包&lt;/h1&gt;&lt;p&gt;通过对APP的网络传输协议进行抓包，可以了解到APP向服务器发送了什么、服务器向客户端下放了哪些数据。有了这些网络数据，我们可以知道APP都</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Git使用</title>
    <link href="https://wenkex.gitee.io/2022/101954372.html"/>
    <id>https://wenkex.gitee.io/2022/101954372.html</id>
    <published>2022-10-19T09:06:04.000Z</published>
    <updated>2022-10-19T09:06:08.603Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-git使用"><a href="#1-git使用" class="headerlink" title="1. git使用"></a>1. git使用</h1><h2 id="1-1-安装git"><a href="#1-1-安装git" class="headerlink" title="1.1. 安装git"></a>1.1. 安装git</h2><p>Git是一个分布式代码管理工具，可以在本地提交，不需要依赖网络，并且会将每次提交自动备份到本地。每个开发者都可以把远程仓库clone一份到本地，并会把提交历史一并拿过来。</p><a class="btn-beautify " href="/%3Chttps:/git-scm.com/downloads" title="官网下载"><i class="larger>"></i><span>官网下载</span></a><p>按照安装向导来安装Git，相关参数勾选为默认即可</p><p>安装完成后，右键菜单栏会出现Git GUI和Git Bash</p><h2 id="1-2-git-bash使用"><a href="#1-2-git-bash使用" class="headerlink" title="1.2. git bash使用"></a>1.2. git bash使用</h2><p> 复制 ctrl + insert<br> 粘贴 shift + insert</p><h2 id="1-3-git设置http全局代理"><a href="#1-3-git设置http全局代理" class="headerlink" title="1.3. git设置http全局代理"></a>1.3. git设置http全局代理</h2><p>由于国内访问github困难，在克隆Github仓库时，git无法连接GitHub。因此需要git设置http全局代理</p><p>将下方命令的端口填入clash的端口7890,并在命令行中输入，git即可顺利连接GitHub</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">git设置全局http代理和https代理</span></span><br><span class="line">git config --global http.proxy 127.0.0.1:端口</span><br><span class="line">git config --global https.proxy 127.0.0.1:端口</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">取消这两个全局代理</span></span><br><span class="line">git config --global --unset http.proxy</span><br><span class="line">git config --global --unset https.proxy</span><br></pre></td></tr></tbody></table></figure><p>此时要使用git,要先打开clash</p><h2 id="1-4-联系多个仓库"><a href="#1-4-联系多个仓库" class="headerlink" title="1.4. 联系多个仓库"></a>1.4. 联系多个仓库</h2><p>要想与多个远程仓库的分支建立联系，可以使用 git remote add 指令添加其他的远程仓库，取个与origin不一样的别名就可以啦</p><h2 id="1-5-git工作区域"><a href="#1-5-git工作区域" class="headerlink" title="1.5. git工作区域"></a>1.5. git工作区域</h2><p>Git有四个工作区域</p><p>工作区（Working Directory)：就是你平时存放项目代码的地方</p><p>暂存区(Stage/Index)：用于临时存放你的改动，事实上是一个保存即将提交到文件列表信息的文件<code>git add .</code></p><p>本地仓库(Repository或Git Directory)：就是安全存放数据的位置，这里面有你提交到所有版本的数据，其中HEAD指向最新放入仓库的版本</p><p>远程仓库(Remote Directory)：托管代码的服务器</p><h2 id="1-6-关联本地项目与远程仓库并推送"><a href="#1-6-关联本地项目与远程仓库并推送" class="headerlink" title="1.6. 关联本地项目与远程仓库并推送"></a>1.6. 关联本地项目与远程仓库并推送</h2><ul><li>https</li></ul><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#在本地文件夹中进入终端，克隆仓库</span></span><br><span class="line"><span class="comment">#git clone [url]</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/wenkexia/AI.git</span><br></pre></td></tr></tbody></table></figure><ul><li>选择ssh方式关联仓库<br>Git支持多种协议，包括https，但通过ssh支持的原生git协议速度最快。</li></ul><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">git init   <span class="comment">#创建一个本地仓库</span></span><br><span class="line"></span><br><span class="line">touch READ.md  <span class="comment"># 一定要创建</span></span><br><span class="line"><span class="comment"># git remote add origin [SSH key]</span></span><br><span class="line">git remote add origin git@github.com:PanXF-HUST/test.git   <span class="comment">#关联远程仓库</span></span><br><span class="line"></span><br><span class="line">git remote -v      <span class="comment">#命令查看关联状况</span></span><br></pre></td></tr></tbody></table></figure><h2 id="1-7-git命令"><a href="#1-7-git命令" class="headerlink" title="1.7. git命令"></a>1.7. git命令</h2><p>git管理的文件有三种状态：已修改（modified）、已暂存（staged）、已提交（committed）</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">'first'</span></span><br><span class="line">git push -u origin main</span><br></pre></td></tr></tbody></table></figure><p>使用git bash操作</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">git config -l  <span class="comment">#查看系统配置</span></span><br><span class="line"></span><br><span class="line">git status  <span class="comment">#查看所有文件状态</span></span><br><span class="line">git status [filename]  <span class="comment">#查看指定文件状态</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">git <span class="built_in">log</span>  <span class="comment">#查看提交的详细信息</span></span><br><span class="line">git add .   <span class="comment">#暂存当前分支所有本地修改的文件</span></span><br><span class="line">git commit -m <span class="string">'logs'</span> <span class="comment">#提交暂存区到本地git仓库中 logs：本次修改的描述</span></span><br><span class="line"></span><br><span class="line">git show id <span class="comment">#在推送(push)操作之前，如想要检查文件代码变化，指定提交ID来查看具体的变化。</span></span><br><span class="line"><span class="comment">#如果对上面的提交修改没有疑义，则我们就可以将文件代码推送到远程存储库中</span></span><br><span class="line">git push -u origin <span class="string">"分支"</span>    <span class="comment">#将本地修改内容提交至远程，-u设置默认分支</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#git fetch + git merge 更安全，等价于git push origin "分支" </span></span><br><span class="line">git fetch origin master <span class="comment">#先抓取远程仓库的更新到本地,如果有冲突就要解决冲突后再合并</span></span><br><span class="line">git merge origin FETCH_HEAD  <span class="comment">#然后与你的本地仓库合并</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h3 id="1-7-1-git-push命令详解"><a href="#1-7-1-git-push命令详解" class="headerlink" title="1.7.1. git push命令详解"></a>1.7.1. git push命令详解</h3><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">git pull &lt;远程主机名&gt; &lt;远程分支名&gt;:&lt;本地分支名&gt;</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">将远程主机 origin 的 master 分支拉取过来，与本地的 brantest 分支合并。</span></span><br><span class="line">git pull origin master:brantest</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">如果远程分支是与当前分支合并，则冒号后面的部分可以省略。</span></span><br><span class="line">git pull origin master</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 把本地库的内容推送到远程，第一次使用加上了-u参数，是推送内容并关联分支。</span></span><br><span class="line">git push -u origin main</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">git push -f origin main  #强制更新</span><br><span class="line">git push -f  或者 git push --force  分支名 #利用强覆盖方式用你本地的代码替代git仓库内的内容</span><br></pre></td></tr></tbody></table></figure><h3 id="1-7-2-分支相关"><a href="#1-7-2-分支相关" class="headerlink" title="1.7.2. 分支相关"></a>1.7.2. 分支相关</h3><p>分支允许您创建原始主要工作项目的新的、独立的版本。您可以创建一个分支来编辑它以进行更改、添加新功能或在尝试修复错误时编写测试。一个新的分支可以让你在不以任何方式影响主代码的情况下做到这一点。</p><p>总而言之 - 分支让您可以在不影响核心代码的情况下更改代码库，直到您完全准备好实施这些更改。</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">git branch  <span class="comment">#查看本地分支 </span></span><br><span class="line">git branch -a <span class="comment">#查看全部分支(包含本地和远程</span></span><br><span class="line"></span><br><span class="line">git checkout branch_name  <span class="comment">#切换分支</span></span><br><span class="line"></span><br><span class="line">git branch -d  local_branch_name <span class="comment">#删除本地分支，如果分支包含未合并的更改和未推送的提交，则不允许删除</span></span><br><span class="line">git branch -D local_branch_name <span class="comment">#强制删除本地分支</span></span><br><span class="line"></span><br><span class="line">git push origin --delete <span class="string">"分支名称"</span>  <span class="comment">#删除远程分支</span></span><br><span class="line"></span><br><span class="line">git branch [branchname] <span class="comment">#创建分支 </span></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h3 id="1-7-3-git重新关联远程分支"><a href="#1-7-3-git重新关联远程分支" class="headerlink" title="1.7.3. git重新关联远程分支"></a>1.7.3. git重新关联远程分支</h3><p>取消与当前远程仓库的关联</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">// 查看远程仓库</span><br><span class="line">git remote show origin</span><br><span class="line"></span><br><span class="line">// 查看当前分支关联的远程分支</span><br><span class="line">git branch -vv</span><br><span class="line"></span><br><span class="line">// 取消与远程仓库关联</span><br><span class="line">git remote remove origin</span><br></pre></td></tr></tbody></table></figure><p>(2) 重新添加需要关联的远程仓库</p><p><code>git remote add origin git@xxxxx:xxx/xxx.git</code><br>(3) 提交到远程分支</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">// 首先pull一下</span><br><span class="line">git pull origin develop</span><br><span class="line"></span><br><span class="line">// 然后提交至远程分支</span><br><span class="line">git push --set-upstream origin develop</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h3 id="1-7-4-撤销命令"><a href="#1-7-4-撤销命令" class="headerlink" title="1.7.4. 撤销命令"></a>1.7.4. 撤销命令</h3><p>运行git reflog命令查看你的历史变更记录</p><p>2.然后用git reset –hard HEAD@{n}，（n是你要回退到的引用位置）回退。</p><p>比如上图可运行 git reset –hard 40a9a83</p><h3 id="1-7-5-git-clone"><a href="#1-7-5-git-clone" class="headerlink" title="1.7.5. git clone"></a>1.7.5. git clone</h3><h2 id="1-8-忽略文件"><a href="#1-8-忽略文件" class="headerlink" title="1.8. 忽略文件"></a>1.8. 忽略文件</h2><p>有些时候我们不想把某些文件纳入版本控制中，比如数据库文件，临时文件，设计文件等</p><p>在主目录下建立”.gitignore”文件，此文件有如下规则：</p><p>1.忽略文件中的空行或以井号(#)开始的行将会被忽略。<br>2.可以使用Liux通配符。例如：星号(*)代表任意多个字符，问号(？)代表一个字符，方括号([abc])代表可选字符范围，<br>大括号({string1,string2})代表可选的字符串等。<br>3.如果名称的最前面有一个感叹号(！)，表示例外规则，将不被忽略。<br>4.如果名称的最前面是一个路径分隔符(/)，表示要忽略的文件在此目录下，而子目录中的文件不忽略。<br>5.如果名称的最后面是一个路径分隔符(/)，表示要忽略的是此目录下该名称的子目录，而非文件（默认文件或目录都忽略）。</p><h2 id="1-9-vscode使用git"><a href="#1-9-vscode使用git" class="headerlink" title="1.9. vscode使用git"></a>1.9. vscode使用git</h2><p><strong>git-commit-plugin</strong>：自动生成规范 git 提交信息的插件。</p><p>使用组合键 ctrl + Shift + P 呼出 指令行，并键入指令 show git commit template 或者点击 git 插件栏上的小图标唤醒插件界面。</p><p><strong>GitLens</strong> 增强了VS Code 中的 Git，并解锁了每个存储库中未开发的知识。它可以帮助您通过 Git 责备注释和 CodeLens直观地可视化代码作者身份，无缝导航和探索Git 存储库，通过丰富的可视化和强大的比较命令获得有价值的见解等等。</p><h2 id="1-10-Idea使用git"><a href="#1-10-Idea使用git" class="headerlink" title="1.10. Idea使用git"></a>1.10. Idea使用git</h2><h2 id="1-11-出现的问题"><a href="#1-11-出现的问题" class="headerlink" title="1.11. 出现的问题"></a>1.11. 出现的问题</h2><h3 id="1-11-1-问题一"><a href="#1-11-1-问题一" class="headerlink" title="1.11.1. 问题一"></a>1.11.1. 问题一</h3><p><a href="https://blog.csdn.net/u010483897/article/details/87799685">https://blog.csdn.net/u010483897/article/details/87799685</a><br>在提交更改时出现<code>commit or discard the untracked or modified content in submodules</code><br>原因是有个别文件夹内还有.git文件，删除就可以了</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1-git使用&quot;&gt;&lt;a href=&quot;#1-git使用&quot; class=&quot;headerlink&quot; title=&quot;1. git使用&quot;&gt;&lt;/a&gt;1. git使用&lt;/h1&gt;&lt;h2 id=&quot;1-1-安装git&quot;&gt;&lt;a href=&quot;#1-1-安装git&quot; class=&quot;head</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Github使用</title>
    <link href="https://wenkex.gitee.io/2022/101960077.html"/>
    <id>https://wenkex.gitee.io/2022/101960077.html</id>
    <published>2022-10-19T09:05:27.000Z</published>
    <updated>2022-10-19T09:05:47.434Z</updated>
    
    <content type="html"><![CDATA[<h1 id="2-github使用"><a href="#2-github使用" class="headerlink" title="2. github使用"></a>2. github使用</h1><p><a href="https://docs.github.com/cn">github文档</a><br><a href="https://www.w3cschool.cn/githubcn/">GitHub 中文教程</a></p><h2 id="2-1-键盘快捷键"><a href="#2-1-键盘快捷键" class="headerlink" title="2.1. 键盘快捷键"></a>2.1. 键盘快捷键</h2><p>shift + ？:查看快捷键<br>. ： 打开网络编辑器</p><h2 id="2-2-GitHub鏡像站"><a href="#2-2-GitHub鏡像站" class="headerlink" title="2.2. GitHub鏡像站"></a>2.2. GitHub鏡像站</h2><p><a href="https://www.library.ac.cn/">https://www.library.ac.cn/</a><br><a href="https://hub.fastgit.xyz/">https://hub.fastgit.xyz/</a><br><a href="https://raw.hellogithub.com/">https://raw.hellogithub.com/</a><br><a href="https://hub.gitfast.tk/">https://hub.gitfast.tk</a><br><a href="https://hub.gitslow.tk/">https://hub.gitslow.tk</a><br><a href="https://hub.verge.tk/">https://hub.verge.tk</a><br><a href="https://raw.gitfast.tk/">https://raw.gitfast.tk</a><br><a href="https://raw.gitslow.tk/">https://raw.gitslow.tk</a><br><a href="https://raw.verge.tk/">https://raw.verge.tk</a></p><h2 id="2-3-GitHub加速下载"><a href="#2-3-GitHub加速下载" class="headerlink" title="2.3. GitHub加速下载"></a>2.3. GitHub加速下载</h2><p><a href="https://hub.fastgit.org/">https://hub.fastgit.org/</a><br><a href="https://ghproxy.com/">https://ghproxy.com/</a></p><h2 id="2-4-加速访问GitHub"><a href="#2-4-加速访问GitHub" class="headerlink" title="2.4. 加速访问GitHub"></a>2.4. 加速访问GitHub</h2><p><a href="https://mp.weixin.qq.com/s/ykN7Swxvbl-PinwrssHiOQ">参考文章</a><br><a href="https://mp.weixin.qq.com/s/C5XUgzL3_KGIga2X-LHJuw">参考</a><br><a href="https://zhuanlan.zhihu.com/p/364453651">https://zhuanlan.zhihu.com/p/364453651</a></p><h3 id="2-4-1-修改本地hosts"><a href="#2-4-1-修改本地hosts" class="headerlink" title="2.4.1. 修改本地hosts"></a>2.4.1. 修改本地hosts</h3><h4 id="2-4-1-1-host文件作用"><a href="#2-4-1-1-host文件作用" class="headerlink" title="2.4.1.1. host文件作用"></a>2.4.1.1. host文件作用</h4><p>1.它可以屏蔽网站</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">在Windows系统中，</span><br><span class="line">约定 127.0.0.1为本地计算机的IP地址, 0.0.0.0是错误的IP地址。</span><br><span class="line"></span><br><span class="line">例如，我们在Hosts中，输入以下内容：</span><br><span class="line">举个例子：</span><br><span class="line">127.0.0.1 www.pc280.com # 这个网站影响我孩子的健康成长，我要屏蔽他</span><br><span class="line">这样，计算机解析域名 www.pc280.com 时，就解析到本机IP或错误的IP，达到了屏蔽不健康网站的目的。</span><br><span class="line"></span><br><span class="line">对于现在某些病毒、恶意程序有一大部分会修改我们的host文件，导致我们无法访问某些网站；这时候，当我们发现某些网站不能访问时，我们可以进入Host文件进行观察，如果是因为Host文件造成的网站无法访问，那么我们可以找到并删除病毒所添加的语句，就可以对网站进行正常访问了。</span><br></pre></td></tr></tbody></table></figure><p>2.它可以加快域名解析</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">对于要经常访问的网站，我们可以通过在Hosts中配置域名和IP的映射关系，</span><br><span class="line">提高域名解析速度。由于有了映射关系，当我们输入域名计算机就能很快解析出IP，</span><br><span class="line">而不用请求网络上的DNS服务器。</span><br><span class="line">例如：Host文件中添加一条：222.73.44.198 blog.itful.com</span><br><span class="line">（IP与域名中间要有空格，IP地址一定要输入正确，不然就访问不了该网站了）</span><br><span class="line">——可以通过运行CMD，输入“ping 网站域名” 来获得网站的IP地址！</span><br><span class="line">这样访问侠客岛速度就会略快一点啦，因为他不需要经过DNS域名服务器进行IP地址的解析！</span><br></pre></td></tr></tbody></table></figure><p>3.它可以方便局域网用户</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">在很多单位的局域网中，会有服务器提供给用户使用。</span><br><span class="line">但由于局域网中一般很少架设DNS服务器，</span><br><span class="line">访问这些服务器时，要输入难记的IP地址。</span><br><span class="line">这对不少人来说相当麻烦。</span><br><span class="line">现在可以分别给这些服务器取个容易记住的名字，</span><br><span class="line">然后在Hosts中建立IP映射，这样以后访问的时候，</span><br><span class="line">只要输入这个服务器的名字就行了。</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h4 id="2-4-1-2-手动修改host"><a href="#2-4-1-2-手动修改host" class="headerlink" title="2.4.1.2. 手动修改host"></a>2.4.1.2. 手动修改host</h4><ul><li>DNS能帮你在访问域名的时候查到实际的IP地址<br>Github 在全球各地都有服务器，而在国内，DNS解析服务基本上都是把域名解析到了美国的服务器，所以访问起来会比较慢<br>但我们可以通过修改本地 hosts 文件来绕过公共DNS解析，直接访问 Github 在韩国、日本等的服务器，从而达到加速访问的目的</li><li>hosts 文件就相当于本地通讯录，你的通讯录里面记了公司的电话。</li></ul><p>1.打开本地host文件<br>C:\Windows\System32\drivers\etc<br>在这个项目<a href="https://github.com/521xueweihan/GitHub520">https://github.com/521xueweihan/GitHub520</a><br>复制添加内容到本地host<br>2.更新DNS缓存  </p><h4 id="2-4-1-3-自动更新host"><a href="#2-4-1-3-自动更新host" class="headerlink" title="2.4.1.3. 自动更新host"></a>2.4.1.3. 自动更新host</h4><p>SwitchHosts<br>Hosts文件路径为：C:\Windows\System32\drivers\etc</p><p>1.这个工具来实现自动更新 hosts 中的IP地址<br>2.我们先到 SwitchHosts 官网下载这款管理工具：<a href="https://swh.app/zh/">https://swh.app/zh/</a><br>3.下载安装好SwitchHosts之后标题随意取，URL地址填这个：<a href="https://raw.hellogithub.com/hosts">https://raw.hellogithub.com/hosts</a><br>4.自动刷新最好建议选1小时<br>5.点击确认后，还要手动启用一下，接着稍等片刻本地 hosts 即会更新</p><h4 id="2-4-1-4-UsbEAm-Hosts-Editor"><a href="#2-4-1-4-UsbEAm-Hosts-Editor" class="headerlink" title="2.4.1.4. UsbEAm Hosts Editor"></a>2.4.1.4. UsbEAm Hosts Editor</h4><p><a href="https://www.dogfight360.com/blog/475/">羽翼城博客下载</a></p><h3 id="2-4-2-反向代理"><a href="#2-4-2-反向代理" class="headerlink" title="2.4.2. 反向代理"></a>2.4.2. 反向代理</h3><h4 id="2-4-2-1-steamcommunity-302（WIN）"><a href="#2-4-2-1-steamcommunity-302（WIN）" class="headerlink" title="2.4.2.1. steamcommunity 302（WIN）"></a>2.4.2.1. steamcommunity 302（WIN）</h4><p>羽翼城大佬后来又开发的 steamcommunity 302 就是通过反代来加速访问 Github 等网站</p><p>软件可以到这里下载：<a href="https://www.dogfight360.com/blog/686/">https://www.dogfight360.com/blog/686/</a><br>比较棘手的是可能会出现80／443端口被占用的情况，这个需要关闭对应监听端口的进程／服务来解决，具体教程可见羽翼城大佬在下载页面做出的说明</p><h4 id="2-4-2-2-FastGithub（WIN／Mac／Linux）"><a href="#2-4-2-2-FastGithub（WIN／Mac／Linux）" class="headerlink" title="2.4.2.2. FastGithub（WIN／Mac／Linux）"></a>2.4.2.2. FastGithub（WIN／Mac／Linux）</h4><p>FastGithub 则是另一款同样基于反代来加速 Gtihub 访问的工具，支持WIN／Mac／Linux三端，还能在docker上一键部署：<br>  FastGithub 除了可以加速访问 Gtihub ，最大的优势是它顺便还能助你直连V2EX<br>  提供域名的纯净IP解析；<br>  提供IP测速并选择最快的IP；<br>  提供域名的tls连接自定义配置；<br>  Google的CDN资源替换，解决大量国外网站无法加载js和css的问题；</p><p><a href="https://github.com/dotnetcore/FastGithub">https://github.com/dotnetcore/FastGithub</a><br>清华网盘：<a href="https://cloud.tsinghua.edu.cn/d/df482a15afb64dfeaff8/">https://cloud.tsinghua.edu.cn/d/df482a15afb64dfeaff8/</a></p><p>Windows端的话，下载后双击即可运行</p><h4 id="2-4-2-3-dev-sidecar（WIN／Mac／Ubuntu／Linux）"><a href="#2-4-2-3-dev-sidecar（WIN／Mac／Ubuntu／Linux）" class="headerlink" title="2.4.2.3. dev-sidecar（WIN／Mac／Ubuntu／Linux）"></a>2.4.2.3. dev-sidecar（WIN／Mac／Ubuntu／Linux）</h4><p>dev-sidecar 这个项目命名取自service-mesh的service-sidecar，意为为开发者打辅助的边车工具，主要就是用于解决 Github 访问的问题：<br><a href="https://gitee.com/docmirror/dev-sidecar">https://gitee.com/docmirror/dev-sidecar</a></p><p>下载后首次运行前会需要让你安装过一个证书，跟着教程安装即可</p><h3 id="2-4-3-加速软件"><a href="#2-4-3-加速软件" class="headerlink" title="2.4.3. 加速软件"></a>2.4.3. 加速软件</h3><p>Steam++（WIN／Mac／Linux／Android）<br>比较稳定的长期可用加速软件Steam++：<a href="https://steampp.net/">https://steampp.net/</a></p><p>这个原本主要是用于加速访问Steam相关网站、社区的</p><p>但软件开发到后面，现在已经支持加速诸多平台了<br>目前支持以下平台的加速：<br>  Steam<br>  Discord<br>  Twitch<br>  Origin<br>  Uplay<br>  国外验证码平台：Google Recaptcha、hCaptcha、Arkoselabs<br>  Github<br>  Microsoft Store<br>  网盘服务：OneDrive、MEGA、Dropbox<br>  其他网站：Nyaa、Pinteres、P站、V2EX等</p><h2 id="2-5-Github学生开发包"><a href="#2-5-Github学生开发包" class="headerlink" title="2.5. Github学生开发包"></a>2.5. Github学生开发包</h2><p>1、申请地址<br>网址：<a href="https://education.github.com/">https://education.github.com/</a></p><p>受到 GitHub 支持的证明材料有：<br>  你的学校的录取通知书（大一新生用，比如我）<br>  你的学生证（手写也行，但是得有照片和钢印）<br>  你的学校教务系统的课表（学习通的也行）<br>  你的成绩单（电子版也可）<br>  或者其他任何可以证明你是在读学生的材料（已经毕业的材料提交无效）</p><p><strong>申请理由</strong><br>I am a junior student from China, and I used Github to share my code with my classmates and friends since I entered university.</p><p>4、Github学生开发者包可用工具<br>具体可以看这里：<a href="https://education.github.com/pack">https://education.github.com/pack</a></p><h3 id="2-5-1-（云服务商和域名篇）"><a href="#2-5-1-（云服务商和域名篇）" class="headerlink" title="2.5.1. （云服务商和域名篇）"></a>2.5.1. （云服务商和域名篇）</h3><p><a href="https://zhuanlan.zhihu.com/p/422851915">https://zhuanlan.zhihu.com/p/422851915</a>#:~:</p><h3 id="2-5-2-DIgitalOcean"><a href="#2-5-2-DIgitalOcean" class="headerlink" title="2.5.2. DIgitalOcean"></a>2.5.2. DIgitalOcean</h3><p><a href="https://link.zhihu.com/?target=https://www.digitalocean.com/">https://link.zhihu.com/?target=https%3A//www.digitalocean.com/</a><br>是云服务商，提供服务器部署等开发服务。Github学生包可以为学生用户提供50美元的额度,仅有一年有效期</p><p>使用方法：需要走一遍完整账号注册流程，在promo code中输入兑换码，注册过程中需要验证支付方式且预支付（支付完毕就充值到账号余额里了），所以实际花费最小为5美元。</p><h3 id="2-5-3-netwise"><a href="#2-5-3-netwise" class="headerlink" title="2.5.3. netwise"></a>2.5.3. netwise</h3><p>是英国的基础设施供应商。Github学生包可为学生提供12个月的免费服务器托管。</p><h3 id="2-5-4-EducationHost"><a href="#2-5-4-EducationHost" class="headerlink" title="2.5.4. EducationHost"></a>2.5.4. EducationHost</h3><p>EducationHost(<a href="https://link.zhihu.com/?target=https://educationhost.co.uk/)%E6%98%AF%E7%94%B1%E8%8B%B1%E5%9B%BD%E5%85%AC%E5%8F%B8EducationHost%E6%8F%90%E4%BE%9B%E7%9A%84%E8%99%9A%E6%8B%9F%E4%B8%BB%E6%9C%BA%E8%B5%84%E6%BA%90%E3%80%82Github%E5%AD%A6%E7%94%9F%E5%8C%85%E5%8F%AF%E4%B8%BA%E5%AD%A6%E7%94%9F%E6%8F%90%E4%BE%9B1%E5%B9%B4%E7%9A%84%E8%AE%BE%E8%AE%A1%E8%80%85%E5%A5%97%E8%A3%85%EF%BC%8C%E5%8C%85%E5%90%AB%E4%BB%A5%E4%B8%8B%E5%86%85%E5%AE%B9%EF%BC%9A">https://link.zhihu.com/?target=https%3A//educationhost.co.uk/)是由英国公司EducationHost提供的虚拟主机资源。Github学生包可为学生提供1年的设计者套装，包含以下内容：</a></p><p>1G带宽<br>免费二级域名(*.educationhost.cloud等)<br>一键部署<br>MySQL数据库<br>LetsEncrypt提供的SSL<br>可升级</p><h3 id="2-5-5-New-Relic"><a href="#2-5-5-New-Relic" class="headerlink" title="2.5.5. New Relic"></a>2.5.5. New Relic</h3><p>主要提供服务器的性能监控功能。Github学生包可为学生提供价值300美元/月的学生期间功能全部免费服务。<br>使用方法：根据官方文档（<a href="https://developer.newrelic.com/students/%EF%BC%89%E6%89%80%E8%BF%B0%EF%BC%8C%E5%8F%AA%E9%9C%80%E6%B3%A8%E5%86%8C%E5%85%8D%E8%B4%B9%E8%B4%A6%E6%88%B7%EF%BC%8C%E5%B9%B6%E5%8D%87%E7%BA%A7%E4%B8%BAStudent">https://developer.newrelic.com/students/）所述，只需注册免费账户，并升级为Student</a> Plan即可。</p><h3 id="2-5-6-Namecheap"><a href="#2-5-6-Namecheap" class="headerlink" title="2.5.6. Namecheap"></a>2.5.6. Namecheap</h3><p><a href="https://www.namecheap.com/">https://www.namecheap.com/</a><br>Namecheap 也是一家综合服务商，提供域名注册、主机管理等服务。Github学生包可以为学生用户提供一年SSL免费证书和.me域名的注册（一年）。</p><p>使用方法：在付款时使用Offer code</p><p>使用方法：绑定Github账户</p><h3 id="2-5-7-Name-com"><a href="#2-5-7-Name-com" class="headerlink" title="2.5.7. Name.com"></a>2.5.7. Name.com</h3><p><a href="https://www.name.com/zh-cn/">https://www.name.com/zh-cn/</a><br>是一家典型的云服务商，提供域名注册、主机托管等服务。Github可以为学生用户提供一年期的免费域名及其安全防护。</p><h3 id="2-5-8-tech"><a href="#2-5-8-tech" class="headerlink" title="2.5.8. .tech"></a>2.5.8. .tech</h3><p><a href="https://get.tech/">https://get.tech/</a><br>是个看上去很有技术感的域名，在这里 你可以拥有一个，让你变得高大上起来。Github为你提供了1年的免费.tech域名，加上2个100MB容量的免费邮箱账号。</p><h2 id="2-6-Github-Actions"><a href="#2-6-Github-Actions" class="headerlink" title="2.6. Github Actions"></a>2.6. Github Actions</h2><p>GitHub Actions 是一个 CI/CD（持续集成/持续部署）工具</p><p>GitHub Actions 的工作原理：当我们提前设置好需要自动化执行的任务脚本（.github/workflows 下的 .yml 文件）后，GitHub Actions 监控当前仓库的某一个操作（如：push），一旦有此操作，就会分配一个虚拟主机来自动化执行这些任务。</p><p>我们设置的任务即为 Action ，它存放在项目根目录的 .github/workflows 文件下，后缀为 .yml。一个 Action 相当于是一个工作流 workflow，一个工作流则可以有多个任务 job，而每个任务又能分成几个步骤 step。任务、步骤会依次执行。</p><p><a href="https://github.com/marketplace?type=actions">官方市场</a><br><a href="https://github.com/sdras/awesome-actions">awesome actions</a></p><h3 id="2-6-1-基本概念"><a href="#2-6-1-基本概念" class="headerlink" title="2.6.1. 基本概念"></a>2.6.1. 基本概念</h3><p>GitHub Actions 有一些自己的术语。</p><p>（1）workflow （工作流程）：持续集成一次运行的过程，就是一个 workflow。</p><p>（2）job （任务）：一个 workflow 由一个或多个 jobs 构成，含义是一次持续集成的运行，可以完成多个任务。</p><p>（3）step（步骤）：每个 job 由多个 step 构成，一步步完成。</p><p>（4）action （动作）：每个 step 可以依次执行一个或多个命令（action）。</p><h3 id="2-6-2-模板"><a href="#2-6-2-模板" class="headerlink" title="2.6.2. 模板"></a>2.6.2. 模板</h3><figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">build:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">uses:</span> <span class="string">actions/checkout@v2</span>  <span class="comment">#实现 Checkout 一个 git 仓库到容器。</span></span><br><span class="line">      <span class="comment"># Checkout 第三方仓库 git@github.com:sanonz/hexo-theme-concise.git 的 master 分支到容器 themes/concise 目录。</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">with:</span></span><br><span class="line">          <span class="attr">repository:</span> <span class="string">sanonz/hexo-theme-concise</span></span><br><span class="line">          <span class="attr">ref:</span> <span class="string">master</span></span><br><span class="line">          <span class="attr">path:</span> <span class="string">themes/concise</span></span><br></pre></td></tr></tbody></table></figure><h3 id="2-6-3-act工具"><a href="#2-6-3-act工具" class="headerlink" title="2.6.3. act工具"></a>2.6.3. act工具</h3><p>如果每次都要修改代码后推到远端才能测试新的或修改后的 GitHub Actions 代码的话，效率就太低了，最好能在本地调试 GitHub Actions 代码以便快速验证。</p><p><a href="https://github.com/nektos/act">act</a><br>用 act 本地运行 Github Actions，快速验证调试,极大地方便了我们调试代码。</p><p>注意：act 使用有一个前提条件是必需安装 docker。</p><h4 id="2-6-3-1-安装"><a href="#2-6-3-1-安装" class="headerlink" title="2.6.3.1. 安装"></a>2.6.3.1. 安装</h4><p>choco  uninstall act-cli</p><p>安装在C:\ProgramData\chocolatey\lib\act-cli</p><p>现状：成功安装，还不会用</p><h4 id="2-6-3-2-工作原理"><a href="#2-6-3-2-工作原理" class="headerlink" title="2.6.3.2. 工作原理"></a>2.6.3.2. 工作原理</h4><p>act 实际上是通过读取本地的.github/workflows 目录里边定义的actions，使用docker api pull 或者构建需要的镜像</p><p>然后按需执行，当然实际上不同阶段还会包含一些中间结果的，这个也是act 解决的</p><h4 id="2-6-3-3-Act使用的一些参数"><a href="#2-6-3-3-Act使用的一些参数" class="headerlink" title="2.6.3.3. Act使用的一些参数"></a>2.6.3.3. Act使用的一些参数</h4><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">act -l  #列出当前目录下的所有 actions</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>–bind . 是把本地的目录绑定到 docker 容器，可以提高效率（比如，可以省掉每次运行重新安装 npm 依赖的时间）</p><p>github action可以读取保存在repo中的secret ，但是我们使用act的时候不能读取到这些secret<br>我们可以在本地创建一个名为act_secret_file保存密码(这里名称你可以自己定义)，格式为键值对就行。</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SERVER_IP="xxxxxx"</span><br><span class="line">SSH_PRIVATE_KEY="xxxxxx"</span><br></pre></td></tr></tbody></table></figure><p>在运行的时候我们带上文件路径<br><code>act --secret-file /Users/wl/act_secret_file</code>action中的secret就可以正常被读取了</p><p>直接运行act命令有时候不能执行到最新的代码，我们可以添加 rebuild 参数,这样确保我们运行的是最新的代码<br><code>act --rebuild --secret-file /Users/wl/act_secret_file</code></p><h3 id="2-6-4-使用SSH连接Github-Action服务器"><a href="#2-6-4-使用SSH连接Github-Action服务器" class="headerlink" title="2.6.4. 使用SSH连接Github Action服务器"></a>2.6.4. 使用SSH连接Github Action服务器</h3><p><a href="https://zhuanlan.zhihu.com/p/387389708">https://zhuanlan.zhihu.com/p/387389708</a></p><h2 id="2-7-gists"><a href="#2-7-gists" class="headerlink" title="2.7. gists"></a>2.7. gists</h2><p>gist类似挂在网上的记事本，把平时的脚本或函数直接分享在平台上供人搜索。</p><p>Gist是一种与其他人共享代码片段和粘贴的简单方法。 当您需要与同事或朋友共享示例代码或技术时，可以使用它。<br>GitHub提供了一个平台，可以作为团队（私人仓库）或整个世界（公共仓库）的回购共享整个项目。<br>Gist就是小型代码片段的分享. 类似的服务还有如 Pastebin 和 Pastie, 但明显出生于Github的Gist更有优势了。<br>Gist可以用来写一些东西，然后可以分享，类似笔记软件<br>每个Gist都是一个Git库，有版本历史，可以被fork或clone<br>Gist有两种：公开的和私有的，私有的不会在你的Gist主页显示，也无法用搜索引擎搜索到，但这个链接是人人都能访问的<br>Gist可以搜索、下载、嵌入到网页</p><h3 id="2-7-1-创建新Gist-编辑修改Gist"><a href="#2-7-1-创建新Gist-编辑修改Gist" class="headerlink" title="2.7.1. 创建新Gist, 编辑修改Gist"></a>2.7.1. 创建新Gist, 编辑修改Gist</h3><ul><li><p><a href="https://gist.github.com/">https://gist.github.com/</a> , 直接填写内容或者在自己的Gist 右上角上点击 New gist即可</p></li><li><p>可以一个Gist多个文件, 使用 Add file 添加即可.</p></li><li><p>可以设置indent为空格space还是tab, tab长度, 是否行缩进.</p></li><li><p>点 Create secret gist 创建私有代码, Create public gist 创建开放的gist. 前者可以不被搜索到.</p></li><li><p>创建Gist后,点选自己的某个Gist, 进去后右上角可进行网上的编辑/修改: Edit, 编辑; Delete, 删除; Star, 标星. 旁边还有举报 . 修改后下方的Update public/secret gist即可保存修改.</p></li><li><p>编辑时上方的Make Secret可以转为私有库.</p></li></ul><h3 id="2-7-2-浏览Gist"><a href="#2-7-2-浏览Gist" class="headerlink" title="2.7.2. 浏览Gist"></a>2.7.2. 浏览Gist</h3><p>左上角可以看到列出自己最近的gist, 右上角See all of your gists可以查看所有自己的Gist.私有gist会显示SECRET标签.<br>搜索框可以进行代码搜索(开放gist), 可能搜出相关的代码片段<br>点All Gists可以到Discover gists模式, 查看最近发布或被fork的gists(或者别的排序方式). 参考意义不大.<br>在浏览Gist时点击右上GithubGist图标或者左上头像选Your Gists即可返回<br>在浏览Gist文件时, 点Raw可以看文字的纯代码.</p><h3 id="2-7-3-分享"><a href="#2-7-3-分享" class="headerlink" title="2.7.3. 分享"></a>2.7.3. 分享</h3><p>点击一个gist进去, , 在 Edit菜单下方有几个选项:</p><ul><li>分享 (可选方式框,代码/地址, 复制到黏贴板),<br>Embed 是HTML嵌入代码,<br>Share是分享链接,<br>Clone via HTTPS是https克隆<br>Clone via SSH是ssh克隆</li><li>下载下来使用Github Desktop打开管理,</li><li>Download Zip(下载全部内容并打包).</li></ul><h3 id="2-7-4-gist-id"><a href="#2-7-4-gist-id" class="headerlink" title="2.7.4. gist id"></a>2.7.4. gist id</h3><p>你打开一个gist后，地址栏的最后一部分就是你这个gist文件的id<br><a href="https://gist.github.com/wenkexia/gistid">https://gist.github.com/wenkexia/gistid</a></p><h2 id="2-8-Fork-使用"><a href="#2-8-Fork-使用" class="headerlink" title="2.8. Fork 使用"></a>2.8. Fork 使用</h2><p>一般来说，forks 被用于去更改别人的项目（贡献代码给已经开源的项目）或者使用别人的项目作为你自己想法的初始开发点。</p><p>提出更改别人的项目</p><p>使用 forks 提出改变的一个很好的例子是漏洞修复。与其记录一个你发现的问题，比如：</p><p>●Fork 这个仓库</p><p>●进行修复</p><p>●向这个项目的拥有者提交一个 pull requset</p><p>如果这个项目的拥有者认同你的成果，他们可能会将你的修复更新到原始的仓库中！</p><p>使用别人的项目作为你自己想法的初始开发点</p><p>开源的核心是共享代码，我们可以制作更好、更可靠的软件。</p><p>事实上，当你在 GitHub 上创建一个仓库时，你可以选择自动包含一个许可文件，这个文件决定你是否希望将你的项目分享给其他人。</p><h1 id="3-git与github账号绑定"><a href="#3-git与github账号绑定" class="headerlink" title="3. git与github账号绑定"></a>3. git与github账号绑定</h1><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 配置git用户和邮箱</span></span><br><span class="line">git config --global user.name <span class="string">"xxxx"</span>  </span><br><span class="line">git config --global user.email <span class="string">"xxxxx@qq.com"</span> </span><br><span class="line"></span><br><span class="line">git config --global --list  <span class="comment">#查看配置的结果   </span></span><br><span class="line"><span class="comment"># 本机生成SSH公钥，实现免密登录    </span></span><br><span class="line">ssh-keygen -t rsa</span><br></pre></td></tr></tbody></table></figure><h2 id="3-1-将公钥添加到Github管理平台"><a href="#3-1-将公钥添加到Github管理平台" class="headerlink" title="3.1. 将公钥添加到Github管理平台"></a>3.1. 将公钥添加到Github管理平台</h2><p>我的目录是：C:\Users\wenke.ssh\ id_rsa.pub<br>将ssh文件夹中的公钥添加到GitHub管理平台中，进入github设置setting-》ssh and GPG keys-》new ssh key</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">ssh -T git@github.com <span class="comment">#验证是否绑定成功</span></span><br></pre></td></tr></tbody></table></figure><h1 id="4-gitee"><a href="#4-gitee" class="headerlink" title="4. gitee"></a>4. gitee</h1><p><a href="https://github.com/marketplace/actions/gitee-pages-action">Gitee Pages Action</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;2-github使用&quot;&gt;&lt;a href=&quot;#2-github使用&quot; class=&quot;headerlink&quot; title=&quot;2. github使用&quot;&gt;&lt;/a&gt;2. github使用&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://docs.github.com/cn&quot;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Joplin全平台同步笔记</title>
    <link href="https://wenkex.gitee.io/2022/101913972.html"/>
    <id>https://wenkex.gitee.io/2022/101913972.html</id>
    <published>2022-10-19T07:56:14.000Z</published>
    <updated>2022-10-19T08:48:45.235Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-搭建Joplin-Cloud同步服务器"><a href="#1-搭建Joplin-Cloud同步服务器" class="headerlink" title="1. 搭建Joplin Cloud同步服务器"></a>1. 搭建Joplin Cloud同步服务器</h2><p>为什么需要自建Joplin Cloud：效率更高，更稳定。</p><h3 id="1-1-docker-compose搭建"><a href="#1-1-docker-compose搭建" class="headerlink" title="1.1. docker-compose搭建"></a>1.1. docker-compose搭建</h3><p>参考：(<a href="https://blog.laoda.de/archives/docker-compose-install-joplin-server#%E5%89%8D%E8%A8%80">https://blog.laoda.de/archives/docker-compose-install-joplin-server#%E5%89%8D%E8%A8%80</a>)</p><p>GitHub原项目地址（感谢作者的付出）：<a href="https://github.com/laurent22/joplin">https://github.com/laurent22/joplin</a></p><p>Docker镜像地址：<a href="https://hub.docker.com/r/joplin/server">https://hub.docker.com/r/joplin/server</a></p><p>官网地址：<a href="https://joplinapp.org/">https://joplinapp.org/</a></p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /app/joplin &amp;&amp; cd /app/joplin</span><br><span class="line"></span><br><span class="line">vim docker-compose.yml</span><br></pre></td></tr></tbody></table></figure><p>编写 docker-compose.yml文件</p><figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="attr">version:</span> <span class="string">'3'</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">    <span class="attr">db:</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">postgres:13</span></span><br><span class="line">        <span class="attr">volumes:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">./data/postgres:/var/lib/postgresql/data</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">"端口号:5432"</span>  <span class="comment"># 左边的端口可以更换，右边不要动！</span></span><br><span class="line">        <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br><span class="line">        <span class="attr">environment:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">POSTGRES_PASSWORD=</span> <span class="comment"># 改成你自己的密码</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">POSTGRES_USER=</span> <span class="comment"># 改成你自己的用户名</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">POSTGRES_DB=joplindb</span></span><br><span class="line">    <span class="attr">app:</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">joplin/server:latest</span></span><br><span class="line">        <span class="attr">depends_on:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">db</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">"端口号:22300"</span> <span class="comment"># 左边的端口可以更换，右边不要动！</span></span><br><span class="line">        <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br><span class="line">        <span class="attr">environment:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">APP_PORT=22300</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">APP_BASE_URL=https://joplin.wenkex.top</span> <span class="comment"># 改成反代的域名</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">DB_CLIENT=pg</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">POSTGRES_PASSWORD=</span> <span class="comment"># 与上面的密码对应！</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">POSTGRES_DATABASE=joplindb</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">POSTGRES_USER=arts</span>  <span class="comment"># 与上面的用户名对应！</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">POSTGRES_PORT=5432</span> <span class="comment"># 与上面左边的对应！</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">POSTGRES_HOST=db</span></span><br></pre></td></tr></tbody></table></figure><p>打开数据库防火墙端口,数据库端口设置所有ip可见</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">启动容器</span></span><br><span class="line">docker-compose up -d  </span><br></pre></td></tr></tbody></table></figure><h3 id="1-2-设置反向代理"><a href="#1-2-设置反向代理" class="headerlink" title="1.2. 设置反向代理"></a>1.2. 设置反向代理</h3><p>1.到你购买域名的供应商控制台，将域名解析到你的服务器ip。</p><p>2.在宝塔的网站配置文件中设置反代<br>删除默认的两段location块，并加入以下location块</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># Reverse Porxy For </span><br><span class="line">    location / {</span><br><span class="line">        proxy_pass http://127.0.0.1:端口号/;</span><br><span class="line">        proxy_redirect off;</span><br><span class="line">        proxy_set_header Host $host;</span><br><span class="line">        proxy_set_header Range $http_range;</span><br><span class="line">        proxy_set_header If-Range $http_if_range;</span><br><span class="line">        proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">        proxy_set_header X-Forwarded-Proto $scheme;</span><br><span class="line">        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">        client_max_body_size 20000m;</span><br><span class="line">        proxy_connect_timeout 600; #代理的连接超时时间（单位：毫秒）</span><br><span class="line">        proxy_read_timeout 600; #代理的读取资源超时时间（单位：毫秒）</span><br><span class="line">    }</span><br></pre></td></tr></tbody></table></figure><p>3.申请Let’s Encrypt免费证书</p><h3 id="1-3-服务端使用"><a href="#1-3-服务端使用" class="headerlink" title="1.3. 服务端使用"></a>1.3. 服务端使用</h3><p>默认账号：admin@localhost</p><p>默认密码：admin</p><h2 id="2-window客户端"><a href="#2-window客户端" class="headerlink" title="2. window客户端"></a>2. window客户端</h2><p>Joplin的数据默认是存储在C:\Users\Username.config\joplin-desktop下的。但是存储位置是无法更改的、<br>带参启动joplin快捷方式：</p><p>找好你想存放东西的目录，这里以D:\Notes为例；<br>把原本存储在C:\Users\Username.config\joplin-desktop下的数据（这里是我的电脑上Joplin的默认存储路径，记得将Username代入成自己的用户名。），全部转移到D:\Notes下来；<br>（这一步本质是带参启动Joplin，这里我们假设你桌面上有一个Joplin的快捷方式，如果没有的话，带参启动即可）在Joplin的快捷方式上右键，点击属性。在目标后面加上<br>–profile D:\Notes即可（注意–两个横杠前面还有一个空格）<br>从桌面右下角任务栏里面把Joplin完全退出<br>点击你刚刚修改过的快捷方式 （或者带参启动Joplin）and Enjoy!<br>–profile D:\data\joplin-desktop</p><h3 id="2-1-使用外部编辑器"><a href="#2-1-使用外部编辑器" class="headerlink" title="2.1. 使用外部编辑器"></a>2.1. 使用外部编辑器</h3><p>打开Joplin，然后点击菜单栏的工具，在弹出的菜单中选择选项。在弹出的界面中如下填写</p><p>文本编辑器路径<br>参数填-n</p><p>打开Joplin，并且打开我们想要编辑和浏览的笔记，然后使用快捷键“CTRL+E”便可以呼出Typora，并且你会发现我们选中的笔记正显示在打开的Typora中，这时候Joplin的格式菜单栏会显示“正在监控变化”</p><p>当我们操作完成（修改的笔记一定要保存）并关闭外部编辑器后，记得点击“正在监控变化”按钮取消外部编辑模式。</p><h2 id="安卓端"><a href="#安卓端" class="headerlink" title="安卓端"></a>安卓端</h2><p>没有大纲，跳转很不方便，每次想要编辑内容要慢慢找<br>不能安装插件</p><h2 id="3-参考"><a href="#3-参考" class="headerlink" title="3. 参考"></a>3. 参考</h2><p><a href="https://lightzhan.xyz/index.php/category/software-installation-and-use/joplin/">https://lightzhan.xyz/index.php/category/software-installation-and-use/joplin/</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-搭建Joplin-Cloud同步服务器&quot;&gt;&lt;a href=&quot;#1-搭建Joplin-Cloud同步服务器&quot; class=&quot;headerlink&quot; title=&quot;1. 搭建Joplin Cloud同步服务器&quot;&gt;&lt;/a&gt;1. 搭建Joplin Cloud同步服务器</summary>
      
    
    
    
    <category term="博客相关" scheme="https://wenkex.gitee.io/categories/%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3/"/>
    
    
  </entry>
  
  <entry>
    <title>搭建LInux环境</title>
    <link href="https://wenkex.gitee.io/2022/1019421.html"/>
    <id>https://wenkex.gitee.io/2022/1019421.html</id>
    <published>2022-10-19T07:31:02.000Z</published>
    <updated>2022-10-19T08:48:45.236Z</updated>
    
    <content type="html"><![CDATA[<h1 id="VMware搭建linux"><a href="#VMware搭建linux" class="headerlink" title="VMware搭建linux"></a>VMware搭建linux</h1><p>从原理上来说，VMware 虚拟化是直接在计算机硬件或主机操作系统上面插入一个精简的软件层。该软件层包含一个以动态和透明方式分配硬件资源的虚拟机监视器（或称“管理程序VMM”）。多个操作系统可以同时运行在单台物理机上，彼此之间共享硬件资源。由于是将整台计算机（包括 CPU、内存、操作系统和网络设备）封装起来，因此虚拟机可与所有标准的 x86 操作系统、应用程序和设备驱动程序完全兼容。可以同时在单台计算机上安全运行多个操作系统和应用程序，每个操作系统和应用程序都可以在需要时访问其所需的资源。</p><h2 id="如何让-VMWare-和-Hyper-V-共存？"><a href="#如何让-VMWare-和-Hyper-V-共存？" class="headerlink" title="如何让 VMWare 和 Hyper-V 共存？"></a>如何让 VMWare 和 Hyper-V 共存？</h2><p>将 Windows 版本升级到 Windows 10 20H1 或更高版本。<br>将 VMWare Workstation/Player 升级到 15.5.5 或更高版本，本文以 VMWare Player 为例。注意，在安装时，需要在兼容的设置这一步勾选“自动安装 Windows Hypervisor Platform (WHP)”。</p><h2 id="配置虚拟机"><a href="#配置虚拟机" class="headerlink" title="配置虚拟机"></a>配置虚拟机</h2><h2 id="安装Vmware-Tools工具"><a href="#安装Vmware-Tools工具" class="headerlink" title="安装Vmware Tools工具"></a>安装Vmware Tools工具</h2><p>可以为虚拟机提供更好的显卡性能（游戏玩家最爱的）<br>同步物理主机时间<br>自动捕获和释放鼠标光标（不用按下Ctrl + Alt键来释放鼠标）<br>实现物理主机和虚拟机或者虚拟机和虚拟机之间进行复制和粘贴操作（文件传输）<br>点击Vmware Workstation 菜单栏的“虚拟机”点击“安装 Vmware Tools（T）</p><p><strong>设置虚拟机快照。</strong><br>虚拟机的快照可以把当前虚拟机的状态保存下来，方便以后可以还原到这个状态，理论上快照可以设置很多个，但是设置过多的快照会影响虚拟机的性能，并在会增大物理磁盘的存储空间，快照的常见的应用是：安装大型专业软件时，害怕安装失败，那么在安装之前设置一个快照，方面以后还原虚拟机的状态，重新测试安装软件，或者是在虚拟机设置一系列很复杂的系统配置，担心设置不成功，那么在设置之前可以做一个快照，万一配置系统不顺，可以还原到快照之前的状态，重新做配置。</p><p><strong>虚拟机网络的使用网络模式：</strong><br><strong>映射网络驱动器</strong></p><p><strong>通过Vmware导出虚拟机</strong><br>有时候，我们设置好的虚拟机需要在其他电脑上面使用，那么可以使用虚拟机迁移功能，把自己电脑的虚拟机，导出，再到其他电脑上面使用Vmware Workstation进行导入（版本最好一致） 在菜单栏点击“文件”》点击“导出为OVF（E）…”</p><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p><strong>虚拟机VMware中的CentOS字符命令界面和图形界面切换</strong><br>ctrl+alt+f1   ctrl+alt+f2</p><h3 id="VMWare和Hyper-V-共存"><a href="#VMWare和Hyper-V-共存" class="headerlink" title="VMWare和Hyper-V 共存"></a>VMWare和Hyper-V 共存</h3><p>将 Windows 版本升级到 Windows 10 20H1 或更高版本。<br>将 VMWare Workstation/Player 升级到 15.5.5 或更高版本<br>在安装时，勾选“自动安装 Windows Hypervisor Platform (WHP)”。<br>打开虚拟机的设置选项，找到“处理器”，去掉如图所示的三个选项前面的钩，点击“确定”</p><h2 id="克隆"><a href="#克隆" class="headerlink" title="克隆"></a>克隆</h2><p>克隆虚拟机可以把一个虚拟机复制成多个虚拟机，那么就不用重新安装虚拟机了，克隆虚拟机需要在虚拟机关机的状态下进行，在虚拟机关机的情况下，右键虚拟机》管理》克隆</p><h3 id="完整克隆（Full-Clone）"><a href="#完整克隆（Full-Clone）" class="headerlink" title="完整克隆（Full Clone）"></a>完整克隆（Full Clone）</h3><p>完全克隆的虚拟机不依赖源虚拟机，是完全独立的虚拟机，它的性能与被克隆虚拟机相同。</p><p>由于完整克隆不与父虚拟机共享虚拟磁盘，所以创建完整克隆所需的时间比链接克隆更长。如果涉及的文件较大，完整克隆可能需要数分钟才能创建完成。完整克隆只复制克隆操作时的虚拟机状态，因此无法访问父虚拟机的快照。</p><h3 id="链接克隆（Linked-Clone）"><a href="#链接克隆（Linked-Clone）" class="headerlink" title="链接克隆（Linked Clone）"></a>链接克隆（Linked Clone）</h3><p>依赖于源虚拟机（称为父虚拟机）。由于链接克隆是通过父虚拟机的快照创建而成，因此节省了磁盘空间，而且克隆速度非常快，但是克隆后的虚拟机性能能会有所下降。</p><p>对父虚拟机的虚拟磁盘进行的更改不会影响链接克隆，对链接克隆磁盘所做的更改也不会影响父虚拟机。但是如果父虚拟机损坏或快照点删除，链接克隆的虚拟机也不能使用；如果父虚拟机移动位置，需要重新指定父虚拟机的位置，再启动链接克隆虚拟机。</p><h2 id="网络配置"><a href="#网络配置" class="headerlink" title="网络配置"></a>网络配置</h2><p><a href="https://blog.csdn.net/collection4u/article/details/14127671">https://blog.csdn.net/collection4u/article/details/14127671</a></p><p>VMware虚拟机有三种网络模式，分别是Bridged(桥接模式)、NAT(网络地址转换模式)、Host-only(主机模式)。</p><p>VMware workstation安装好之后会多出两个网络连接，分别是VMware Network Adapter VMnet1和VMware Network Adapter VMnet8，这两个是可以在主机的网络连接中可以查看到的，<br>还有一个是VMnet0，可以在virtual network editor中看到。</p><p>这三个虚拟网络都是VMware安装好之后自动生成的，不需要手动修改。其中VMnet0用于Bridged模式，VMnet1用于Host-only模式，Vmnet8用于NAT模式。VMnet8和VMnet1提供DHCP服务，VMnet0默认则不提供。</p><h3 id="Bridged-桥接模式"><a href="#Bridged-桥接模式" class="headerlink" title="Bridged(桥接模式)"></a>Bridged(桥接模式)</h3><p> 将虚拟机直接连接到到外部网络</p><p> 在这种模式下，VMWare虚拟出来的操作系统就像是局域网中的一台独立的主机，它可以访问网内任何一台机器，你需要手工为虚拟系统配置IP地址、子网掩码，而且还要和宿主机器处于同一网段，这样虚拟系统才能和宿主机器进行通信，虚拟系统和宿主机器的关系，就像连接在同一个Hub上的两台电脑。从网络技术上理解相当于在宿主机前端加设了一个虚拟交换机，然后宿主机和所有虚拟机共享这个交换机。</p><p>如果你想利用VMWare在局域网内新建一个虚拟服务器，为局域网用户提供网络服务，就应该选择桥接模式。</p><h3 id="NAT-网络地址转换模式"><a href="#NAT-网络地址转换模式" class="headerlink" title="NAT(网络地址转换模式)"></a>NAT(网络地址转换模式)</h3><p>虚拟机共享主机的IP地址</p><p>使用NAT模式，就是让虚拟系统借助NAT的功能，通过宿主机所在的网络来访问公网。在这种模式下宿主机成为双网卡主机，同时参与现有的宿主局域网和新建的虚拟局域网，但由于加设了一个虚拟的NAT服务器，使得虚拟局域网内的虚拟机在对外访问时，使用的则是宿主机的IP地址，这样从外部网络来看，只能看到宿主机，完全看不到新建的虚拟局域网。</p><p>采用NAT模式最大的优势是虚拟系统接入互联网非常简单，你不需要进行任何其他的配置，只需要宿主机器能访问互联网即可。</p><p>如果你想利用VMWare安装一个新的虚拟系统，在虚拟系统中不用进行任何手工配置就能直接访问互联网，建议你采用NAT模式。</p><h4 id="宿主机网络适配器"><a href="#宿主机网络适配器" class="headerlink" title="宿主机网络适配器"></a>宿主机网络适配器</h4><p>检查宿主机的VMware DHCP Service 和VMwareNAT Service两个服务是否启动：</p><h4 id="Virtual-Network-Editor设置"><a href="#Virtual-Network-Editor设置" class="headerlink" title="Virtual Network Editor设置"></a>Virtual Network Editor设置</h4><p>VMware安装后之后可以点击菜单栏的Edit中的Virtual Network Editor对虚拟的网卡进行配置修改。</p><h4 id="虚拟机中网络配置"><a href="#虚拟机中网络配置" class="headerlink" title="虚拟机中网络配置"></a>虚拟机中网络配置</h4><p>在centos虚拟机中修改网络配置主要在/etc/sysconfig/network-scripts/ifcfg-eth33</p><h3 id="Host-only-主机模式"><a href="#Host-only-主机模式" class="headerlink" title="Host-only(主机模式)"></a>Host-only(主机模式)</h3><p>可以在专用网络内连接虚拟机</p><h2 id="设置固定ip"><a href="#设置固定ip" class="headerlink" title="设置固定ip"></a>设置固定ip</h2><h3 id="进入vmware设置NAT模式"><a href="#进入vmware设置NAT模式" class="headerlink" title="进入vmware设置NAT模式"></a>进入vmware设置NAT模式</h3><p>1.右键虚拟机→设置→网络适配器→选择NAT模式</p><p>2.编辑→虚拟网络编辑器→更改设置<br>点击“Vmnet8 NAT模式”→取消勾选“使用本地DHCP服务将IP地址分配给虚拟机”<br>子网ip设置192.168.88.0<br>→NAT设置→网关IP(192.168.88.2)<br>子网掩码固定：255.255.255.0</p><h3 id="centos7配置静态ip"><a href="#centos7配置静态ip" class="headerlink" title="centos7配置静态ip"></a>centos7配置静态ip</h3><p>进去centos7系统，修改网络配置文件</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ifconfig   #查看网络</span><br><span class="line">vim /etc/sysconfig/network-scripts/ifcfg-ens33    #编辑网卡配置文件</span><br></pre></td></tr></tbody></table></figure><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">DEFROUTE="yes"</span><br><span class="line">IPV4_FAILURE_FATAL="no"</span><br><span class="line">IPV6INIT="yes"</span><br><span class="line">IPV6_AUTOCONF="yes"</span><br><span class="line">IPV6_DEFROUTE="yes"</span><br><span class="line">IPV6_FAILURE_FATAL="no"</span><br><span class="line">IPV6_ADDR_GEN_MODE="stable-privacy"</span><br><span class="line">NAME="ens33"</span><br><span class="line">UUID="f59f2104-66d4-42a3-9302-996c5b8c261b"</span><br><span class="line">DEVICE="ens33"</span><br><span class="line">ONBOOT="yes"</span><br><span class="line">TYPE="Ethernet"</span><br><span class="line">PROXY_METHOD="none"</span><br><span class="line">BROWSER_ONLY="no"</span><br><span class="line">BOOTPROTO="static"       #static表示静态IP</span><br><span class="line">IPADDR=192.168.88.130   #配置IP地址 </span><br><span class="line">NETMASK=255.255.255.0    #配置子网掩码</span><br><span class="line">GATEWAY=192.168.88.2     #配置网关,一般是ip地址最后一位改为2</span><br><span class="line">DNS1=8.8.8.8             #配置DNS服务器地址，8.8.8.8是谷歌免费的DNS服务器</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p><code>service network restart  #重启网络服务</code></p><h2 id="虚拟化引擎"><a href="#虚拟化引擎" class="headerlink" title="虚拟化引擎"></a>虚拟化引擎</h2><h3 id="虚拟化Intel-VT-x-EPT和AMD-V-RVI-V"><a href="#虚拟化Intel-VT-x-EPT和AMD-V-RVI-V" class="headerlink" title="虚拟化Intel VT-x/EPT和AMD-V/RVI(V)"></a>虚拟化Intel VT-x/EPT和AMD-V/RVI(V)</h3><p>Intel VT-X技术实现的功能是减少虚拟机运行时虚拟机和物理机得到双重系统调用所产生的高Context Switch。也就是说，虚拟机的进程在要先从虚拟机ring3转到ring0，再从物理机的ring3转到ring0，性能有很大损失，而Intel VT-X就是为了解决这一问题而产生的技术。<br>Intel RPT技术则是为了解决虚拟机的虚拟内存映射问题。虚拟机的虚拟内存要映射到虚拟机的物理内存上面，而虚拟机的物理内存相当于物理机的虚拟内存，物理机的虚拟内存也是要映射到物理机的物理内存上面的，所以这双重转换会造成很大的资源消耗，RPT技术就是减小这个消耗的。<br>AMD实现的功能和Intel的功能类似</p><h3 id="虚拟化cpu性能计数器"><a href="#虚拟化cpu性能计数器" class="headerlink" title="虚拟化cpu性能计数器"></a>虚拟化cpu性能计数器</h3><p>CPU 性能监控计数器 (PMC) 为软件提供了一种监控和衡量处理器性能的方法。这些计数器通常由诸如软件探查器等工具使用。从具有 ESX 5.1 及更高版本兼容性（硬件软件 9）的虚拟机开始，可以启用虚拟性能监控计数器 (vPMC) 功能以允许在虚拟机中运行的软件访问此性能信息，如在物理机中运行一样。<br>启用虚拟 CPU 性能监控计数器后，以下 MSR 会虚拟化并可用于客户机操作系统。</p><h1 id="WSL2搭建Linux"><a href="#WSL2搭建Linux" class="headerlink" title="WSL2搭建Linux"></a>WSL2搭建Linux</h1><p><a href="https://docs.microsoft.com/zh-cn/windows/wsl/">官方文档</a><br>WSL2采用在Hyper-V虚拟机中运行的方案,实现了与 windows 的高度集成,wsl2 的开启速度有了非常明显的提升，几乎无需等待。</p><p>启用适用于 Linux 的 Windows 子系统</p><p><code>dism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart</code></p><p>启用虚拟机平台功能</p><p><code>dism.exe /online /enable-feature /featurename:VirtualMachinePlatform /all /norestart</code></p><p>以管理者模式进入cmd安装<br><code>wsl --install</code></p><p>切换WSL的默认版本为WSL2。<br><code>wsl --set-default-version 2</code></p><p>以管理者cmd进行更新操作<br><code>wsl --update</code></p><p>重启，更新才能生效<br><code>wsl --shutdown</code></p><p>Microsoft Store 中找一个 Linux 发行版进行安装</p><p>查看系统版本<br><code>wsl -l -v</code></p><h3 id="修改默认安装目录"><a href="#修改默认安装目录" class="headerlink" title="修改默认安装目录"></a>修改默认安装目录</h3><p>命令格式：wsl –import <distributionname>  &lt;文件位置&gt; &lt;安装位置&gt;  </distributionname></p><ol><li>查看已安装的linux发行版本<br> <code>wsl -l --all -v</code></li><li>导出分发版为tar文件到d盘<br><code>wsl --export Ubuntu-20.04 D:\data\WSL2\Ubuntu-20.04.tar</code></li><li>注销当前分发版<br><code>wsl --unregister Ubuntu-20.04</code></li><li>重新导入并安装WSL在D盘<br><code>wsl --import Ubuntu-20.04 D:\data\WSL2\Ubuntu-20.04 D:\data\WSL2\Ubuntu-20.04.tar --version 2</code></li><li>设置默认登陆用户为安装时用户名<br><code>ubuntu config --default-user USERNAME</code></li><li>删除wsl-ubuntu20.04.tar<br><code>del d:\wsl-ubuntu.tar</code></li></ol><h3 id="设置-Linux-用户名和密码"><a href="#设置-Linux-用户名和密码" class="headerlink" title="设置 Linux 用户名和密码"></a>设置 Linux 用户名和密码</h3><p>若要更改或重置密码，请打开 Linux 发行版并输入命令：<code>passwd</code><br>如果忘记了 Linux 分发版的密码：<br>1.请打开 PowerShell，并使用以下命令进入默认 WSL 分发版的根目录：wsl -u root</p><p>如果需要在非默认分发版中更新忘记的密码，请使用命令：wsl -d Debian -u root，并将 Debian 替换为目标分发版的名称。</p><p>2.在 PowerShell 内的根级别打开 WSL 发行版后，可使用此命令更新密码：passwd <username>，其中 <username> 是发行版中帐户的用户名，而你忘记了它的密码。</username></username></p><h3 id="关闭WSL2"><a href="#关闭WSL2" class="headerlink" title="关闭WSL2"></a>关闭WSL2</h3><p>WSL2实际上是在虚拟机中运行。我们一旦进入WSL2 Linux的命令行，虚拟机会自动启动运行。如果我们查看任务管理器，会发现一个Vmmem进程,它比较占内存。不使用WSL2的时候我们可以关闭它以节省内存。关闭WSL2 Linux的方法如下。使用管理员打开CMD，运行：<code>wsl --shutdown</code></p><h3 id="为发行版linux更换国内源"><a href="#为发行版linux更换国内源" class="headerlink" title="为发行版linux更换国内源"></a>为发行版linux更换国内源</h3><p><a href="https://blog.csdn.net/weixin_41529012/article/details/117226884">https://blog.csdn.net/weixin_41529012/article/details/117226884</a></p><p>打开\wsl.localhost\Ubuntu\etc\apt地址下的sources.list文件，更改镜像源</p><p>vim /etc/apt/sources.list</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">deb https://mirrors.ustc.edu.cn/ubuntu/ bionic main restricted universe multiverse</span><br><span class="line">deb-src https://mirrors.ustc.edu.cn/ubuntu/ bionic main restricted universe multiverse</span><br><span class="line">deb https://mirrors.ustc.edu.cn/ubuntu/ bionic-updates main restricted universe multiverse</span><br><span class="line">deb-src https://mirrors.ustc.edu.cn/ubuntu/ bionic-updates main restricted universe multiverse</span><br><span class="line">deb https://mirrors.ustc.edu.cn/ubuntu/ bionic-backports main restricted universe multiverse</span><br><span class="line">deb-src https://mirrors.ustc.edu.cn/ubuntu/ bionic-backports main restricted universe multiverse</span><br><span class="line">deb https://mirrors.ustc.edu.cn/ubuntu/ bionic-security main restricted universe multiverse</span><br><span class="line">deb-src https://mirrors.ustc.edu.cn/ubuntu/ bionic-security main restricted universe multiverse</span><br><span class="line">deb https://mirrors.ustc.edu.cn/ubuntu/ bionic-proposed main restricted universe multiverse</span><br><span class="line">deb-src https://mirrors.ustc.edu.cn/ubuntu/ bionic-proposed main restricted universe multiverse</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">sudo apt update &amp;&amp; sudo apt upgrade  #更新镜像源列表</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h3 id="wsl网络"><a href="#wsl网络" class="headerlink" title="wsl网络"></a>wsl网络</h3><p>在18945之后的版本中, 微软改进了WSL2, 使我们可以使用localhost, 访问WSL的网络服务</p><h3 id="容器服务"><a href="#容器服务" class="headerlink" title="容器服务"></a>容器服务</h3><p>安装docker-desktop, 即Windows版的docker, WSL2会自动连接到Windows的Docker 服务中.</p><p>此时启动的容器使用的端口和Windows的端口是”相通”的,完全不需要配置端口转发!</p><p>1.下载 <a href="https://docs.docker.com/desktop/windows/wsl/">Docker Desktop</a> 并按照安装说明进行操作。</p><p>2.安装后，从 Windows 开始菜单启动 Docker Desktop，然后从任务栏的隐藏图标菜单中选择 Docker 图标。 右键单击该图标以显示 Docker 命令菜单，然后选择“设置”。</p><p>3.确保在“设置”“常规”中选中“使用基于 WSL 2 的引擎”。</p><p>4.通过转到“设置”“资源”“WSL 集成”，从要启用 Docker 集成的已安装 WSL 2 发行版中进行选择。</p><p>5.若要确认已安装 Docker，请打开 WSL 发行版（例如 Ubuntu），并通过输入 docker –version 来显示版本和内部版本号</p><h2 id="网络配置-1"><a href="#网络配置-1" class="headerlink" title="网络配置"></a>网络配置</h2><h3 id="设置静态ip"><a href="#设置静态ip" class="headerlink" title="设置静态ip"></a>设置静态ip</h3><p><a href="https://blog.csdn.net/yjk13703623757/article/details/122646521?spm=1001.2101.3001.6650.1&amp;utm_medium=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~Rate-1-122646521-blog-118100683.pc_relevant_multi_platform_whitelistv3&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~Rate-1-122646521-blog-118100683.pc_relevant_multi_platform_whitelistv3&amp;utm_relevant_index=1">https://blog.csdn.net/yjk13703623757/article/details/122646521?spm=1001.2101.3001.6650.1&amp;utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-1-122646521-blog-118100683.pc_relevant_multi_platform_whitelistv3&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-1-122646521-blog-118100683.pc_relevant_multi_platform_whitelistv3&amp;utm_relevant_index=1</a><br>我们知道wsl2是基于hyper-v的虚拟机，每次重新启动的时候，都会重新拉一个新的hyper-v虚拟机实例，然后虚拟网卡的IP是dhcp随机分配的，如果作为开发系统用，就会比较烦每次都要换一个IP。</p><h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>问题：WSL2 不能访问宿主机，但是宿主机可以访问 WSL2。所以很可能就是宿主机的防火墙拦截了 WSL2 对宿主机的访问。还有一种情况就是防火墙规则里面默认禁用了 ICMP 的应答(ping 的实现就是基于 ICMP 协议)。<br>    小提示：<br>    禁用 ICMP 的应答是一种最简单也是最常见的隐藏网络主机的方式。对于桌面版的 Windows 通常默认是没有禁用的，但是你如果安装了“XX安全管家、XX安全卫士”加固过电脑的话，大概率就会将 ICMP 的回显给禁用掉。<br>    对于操作系统的 防火墙 通常都会对入网方向进行严格的限制，即禁止外部主机随便的访问我提供的服务。所以当出现外部主机无法访问本机提供的对外服务的时候就要考虑是不是主机的防火墙限制了访问。<br>宿主机的网络防火墙拦截了 wsl2 的数据流量</p><p><a href="https://blog.csdn.net/Cypher_X/article/details/123011200">https://blog.csdn.net/Cypher_X/article/details/123011200</a></p><h1 id="centos7"><a href="#centos7" class="headerlink" title="centos7"></a>centos7</h1><h2 id="centos搭建dhcp服务器"><a href="#centos搭建dhcp服务器" class="headerlink" title="centos搭建dhcp服务器"></a>centos搭建dhcp服务器</h2><p>DHCP是一种局域网协议，当我们搭建好DHCP服务器后，它可以自动分发IP地址和网关给客户机</p><p>1.准备两台虚拟机就可以，一台做服务器，一台做客户机·。</p><p>2.开始配置服务器，右击打开终端。进入管理员模式（命令为su root），先安装DHCP服务器的软件包（虚拟机要联网），用 yum install dhcp -y 命令安装（-y 表示接下来系统弹出是请求都默认是yes）dhcp-4.2.5-83.el7.centos.1.x86_64 这个软件包一定要有。里面有默认的配置文件。</p><p>然后用vim /etc/dhcp/dhcpd.conf命令进入默认的主配置文件， 复制/usr/share/doc/dhcp*/dhcpd.conf.example这个路径<br>cp /usr/share/doc/dhcp*/dhcpd.conf.example /etc/dhcp/dhcpd.conf</p><h2 id="CentOS7配置本地yum源"><a href="#CentOS7配置本地yum源" class="headerlink" title="CentOS7配置本地yum源"></a>CentOS7配置本地yum源</h2><h3 id="脚本配置本地源"><a href="#脚本配置本地源" class="headerlink" title="脚本配置本地源"></a>脚本配置本地源</h3><p>vim /root/auto_source.sh #创建脚本文件,编辑内容如下</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 创建本地源文件夹,作为光盘的挂载点</span></span><br><span class="line">mkdir -p /media/centos/</span><br><span class="line"><span class="meta">#</span><span class="bash"> 挂载镜像文件至指定的目录</span></span><br><span class="line">mount /dev/cdrom /media/centos</span><br><span class="line"><span class="meta">#</span><span class="bash"> 备份原本地源</span></span><br><span class="line">cp -rf /etc/yum.repos.d  /etc/yum.repos.d_$(date '+%Y%m%d_%H%M%S')</span><br><span class="line"><span class="meta">#</span><span class="bash"> 删除默认原本地源</span></span><br><span class="line">rm -rf /etc/yum.repos.d/*</span><br><span class="line"><span class="meta">#</span><span class="bash"> 配置本地源,创建Media.repo文件,并配置如下内容</span></span><br><span class="line">cd /etc/yum.repos.d/</span><br><span class="line"><span class="meta">&gt;</span><span class="bash">Media.repo</span></span><br><span class="line">echo '[iso]'                            &gt;&gt; Media.repo</span><br><span class="line">echo 'name=Media'                       &gt;&gt; Media.repo</span><br><span class="line"><span class="meta">#</span><span class="bash">地址为你自己的光盘挂载地址</span></span><br><span class="line">echo 'baseurl=file:///media/centos/'    &gt;&gt; Media.repo</span><br><span class="line">echo 'gpgcheck=0'                       &gt;&gt; Media.repo</span><br><span class="line"><span class="meta">#</span><span class="bash">enabled=1, 让这个yum源配置文件生效</span></span><br><span class="line">echo 'enabled=1'                        &gt;&gt; Media.repo</span><br><span class="line"><span class="meta">#</span><span class="bash"> 清除yum缓存</span></span><br><span class="line">yum clean all</span><br><span class="line"><span class="meta">#</span><span class="bash"> 缓存本地yum源</span></span><br><span class="line">yum makecache</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>chmod +x /root/auto_source.sh # 赋予脚本可执行的权限<br>/root/auto_source.sh   #执行脚本文件，即可</p><h2 id="搭建ftp服务器"><a href="#搭建ftp服务器" class="headerlink" title="搭建ftp服务器"></a>搭建ftp服务器</h2><p>用来传输文件的协议，FTP 是File Transfer Protocol（文件传输协议）的英文简称，而中文简称为“文传协议”。用于Internet上的控制文件的双向传输。同时，它也是一个应用程序（Application）。基于不同的操作系统有不同的FTP应用程序，而所有这些应用程序都遵守同一种协议以传输文件。在FTP的使用当中，用户经常遇到两个概念：”下载”（Download）和”上传”（Upload）。</p><h3 id="FTP服务使用的端口"><a href="#FTP服务使用的端口" class="headerlink" title="FTP服务使用的端口"></a>FTP服务使用的端口</h3><p>FTP服务器默认使用TCP协议的20、21端口与客户端进行通信<br>20端口用于建立数据连接，并传输文件数据<br>21端口用于建立控制连接，并传输FTP控制命令</p><h3 id="FTP服务数据连接方式"><a href="#FTP服务数据连接方式" class="headerlink" title="FTP服务数据连接方式"></a>FTP服务数据连接方式</h3><p>FTP数据连接分为主动模式和被动模式<br>主动模式:服务器主动发起数据连接<br>被动模式:服务器被动等待数据连接</p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y vsftpd   </span><br></pre></td></tr></tbody></table></figure><h3 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h3><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl start vsftpd &amp;&amp; sudo systemctl enable vsftpd # 启动vsftpd并加入开机自启</span><br><span class="line"></span><br><span class="line">pgrep vsftpd  #查看进程 vsftp 是否存在</span><br><span class="line"></span><br><span class="line">service vsftpd status   #查看情况</span><br><span class="line">systemctl stop firewalld.service  #关闭防火墙</span><br><span class="line">systemctl status firewalld.service</span><br><span class="line">sudo systemctl restart vsftpd  #重启</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h3 id="设置匿名用户访问的FTP服务（最大权限）"><a href="#设置匿名用户访问的FTP服务（最大权限）" class="headerlink" title="设置匿名用户访问的FTP服务（最大权限）"></a>设置匿名用户访问的FTP服务（最大权限）</h3><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> vim /etc/vsftpd/vsftpd.conf   <span class="comment">#修改配置文件</span></span></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">anonymous_enable=YES    #开启匿名用户访问。默认已开启</span><br><span class="line">write_enable=YES     #开放服务器的写权限(若要上传，必须开启)。默认已开启</span><br><span class="line">anon_umask=022      #设置匿名用户所上传数据的权限掩码(反掩码)，需手动添加</span><br><span class="line">anon_upload_enable=YES    #允许匿名用户.上传文件。默认已注释，需取消注释</span><br><span class="line">anon_mkdir_write_enable=YES   #允许匿名用户创建(上传)目录。默认已注释，需取消注释</span><br><span class="line">anon_other_write_enable=YES   #允许删除、重命名、覆盖等操作。需添加</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop firewalld.service  #关闭防火墙</span><br><span class="line"> chmod 777 /var/ftp/pub/  #设置pub子目录权限</span><br></pre></td></tr></tbody></table></figure><p><a href="https://blog.csdn.net/weixin_45551608/article/details/116903931">https://blog.csdn.net/weixin_45551608/article/details/116903931</a></p><h2 id="网络配置-2"><a href="#网络配置-2" class="headerlink" title="网络配置"></a>网络配置</h2><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ifconfig     #查看网络IP等信息</span><br><span class="line"> </span><br><span class="line">ping    #测试主机之间网络连通性</span><br></pre></td></tr></tbody></table></figure><h3 id="关闭防火墙-centos7"><a href="#关闭防火墙-centos7" class="headerlink" title="关闭防火墙-centos7"></a>关闭防火墙-centos7</h3><p>（所有虚拟机都要操作）</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --state  #查看防火墙信息</span><br><span class="line">systemctl stop firewalld    #关闭防火墙</span><br><span class="line">systemctl disable firewalld   #关闭防火墙开机启动</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">systemctl start firewalld  #开启防火墙</span><br><span class="line">systemctl enable firewalld  #开启防火墙开机启动</span><br></pre></td></tr></tbody></table></figure><h3 id="配置主机名"><a href="#配置主机名" class="headerlink" title="配置主机名"></a>配置主机名</h3><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">hostname   #查看当前服务器的主机名</span><br><span class="line"></span><br><span class="line">vim /etc/hostname    #修改主机名称配置文件</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 修改配置文件后，需要重启服务器才能生效，如果想实时生效修改主机名可以使用下面的命令。</span></span><br><span class="line">hostnamectl set- hostname 新主机名</span><br><span class="line"></span><br><span class="line">vim /etc/hosts     #修改host映射文件</span><br></pre></td></tr></tbody></table></figure><h2 id="配置服务"><a href="#配置服务" class="headerlink" title="配置服务"></a>配置服务</h2><p>Linux服务管理有两种方式service和systemctl，从 Centos 7.x 开始，CentOS 开始使用 systemd 服务来代替 service服务（daemon），原来管理系统启动和管理系统服务的相关命令全部由 systemctl命令来代替。<br>命令文件的目录</p><p>/usr/lib/systemd/system</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">systemctl status 服务名    #查看服务状态</span><br><span class="line"></span><br><span class="line">systemctl start 服务名    #开启服务</span><br><span class="line"></span><br><span class="line">systemctl stop 服务名    #关闭服务</span><br><span class="line"></span><br><span class="line">systemctl restart 服务名    #重启服务</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">systemctl list-unit-files  #查看服务开机启动状态</span><br><span class="line"></span><br><span class="line">systemctl enable 服务名  #开启指定服务的自动启动</span><br><span class="line"></span><br><span class="line">systemctl disable 服务名  #关闭指定服务的自动启动</span><br></pre></td></tr></tbody></table></figure><h1 id="ubuntu"><a href="#ubuntu" class="headerlink" title="ubuntu"></a>ubuntu</h1><h2 id="设置固定ip地址"><a href="#设置固定ip地址" class="headerlink" title="设置固定ip地址"></a>设置固定ip地址</h2><p><strong>不同发行版静态网卡配置不一样</strong><br>Ubuntu 18.04使用netplan配置网络，其配置文件是yaml格式的。安装好Ubuntu 18.04之后，在 /etc/netplan/01-network-manager-all.yaml，我们通过VIM修改它：</p><p>1.子网掩码 ：和你的网络设置有关的，在设置静态IP之前，你要先通过 ifconfig看一下你自己的子网掩码是多少<br>2.网关使用 route -n 查看当前的网关Gateway</p><p>3.dns server：这个要记住之前的dns,我用常用的公共dns不可以</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ifconfig  #查看网卡信息</span><br><span class="line"></span><br><span class="line">sudo vim /etc/netplan/01-network-manager-all.yaml  #打开配置文件</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>配置文件修改如下：</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">network:</span></span><br><span class="line">  <span class="attr">version:</span> <span class="number">2</span></span><br><span class="line">  <span class="attr">renderer:</span> <span class="string">NetworkManager</span></span><br><span class="line">  <span class="attr">ethernets:</span></span><br><span class="line">    <span class="attr">ens33:</span>   <span class="comment">#配置的网卡名称</span></span><br><span class="line">      <span class="attr">dhcp4:</span> <span class="literal">no</span>    <span class="comment">#dhcp4关闭</span></span><br><span class="line">      <span class="attr">dhcp6:</span> <span class="literal">no</span>    <span class="comment">#dhcp6关闭</span></span><br><span class="line">      <span class="attr">addresses:</span> [<span class="number">192.168</span><span class="number">.212</span><span class="number">.130</span><span class="string">/24</span>]   <span class="comment">#设置本机IP及掩码</span></span><br><span class="line">      <span class="attr">gateway4:</span> <span class="number">192.168</span><span class="number">.212</span><span class="number">.2</span>  <span class="comment">#设置网关 </span></span><br><span class="line">      <span class="attr">nameservers:</span></span><br><span class="line">        <span class="attr">addresses:</span> [<span class="number">192.168</span><span class="number">.212</span><span class="number">.2</span>, <span class="number">8.8</span><span class="number">.8</span><span class="number">.8</span>]   <span class="comment">#设置DNS</span></span><br></pre></td></tr></tbody></table></figure><p>无论是ifupdown还是netplan，配置的思路都是一致的，在配置文件里面按照规则填入IP、掩码、网关、DNS等信息。注意yaml是层次结构，需要缩进(一般两个空格)，冒号(:)表示字典，连字符(-)表示列表。</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">重启网络服务使配置生效：</span></span><br><span class="line">sudo netplan apply</span><br></pre></td></tr></tbody></table></figure><h2 id="设置动态ip"><a href="#设置动态ip" class="headerlink" title="设置动态ip"></a>设置动态ip</h2><p><code>sudo vim /etc/netplan/01-network-manager-all.yaml  #打开配置文件</code></p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">network:</span></span><br><span class="line">  <span class="attr">version:</span> <span class="number">2</span></span><br><span class="line">  <span class="attr">renderer:</span> <span class="string">NetworkManager</span></span><br><span class="line">  <span class="attr">ethernets:</span></span><br><span class="line">     <span class="attr">ens33:</span> <span class="comment">#配置的网卡名称,使用ifconfig -a查看得到</span></span><br><span class="line">       <span class="attr">dhcp4:</span> <span class="literal">true</span> <span class="comment">#dhcp4开启</span></span><br><span class="line">       <span class="attr">addresses:</span> [] <span class="comment">#设置本机IP及掩码，空</span></span><br><span class="line">       <span class="attr">optional:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">重启网络服务使配置生效：</span></span><br><span class="line">sudo netplan apply</span><br></pre></td></tr></tbody></table></figure><h2 id="关闭防火墙"><a href="#关闭防火墙" class="headerlink" title="关闭防火墙"></a>关闭防火墙</h2><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo ufw status  #查看当前防火墙状态</span><br><span class="line">sudo ufw enable  #以开启防火墙</span><br><span class="line">sudo ufw disable  #关闭防火墙</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h2 id="安装ftp服务器"><a href="#安装ftp服务器" class="headerlink" title="安装ftp服务器"></a>安装ftp服务器</h2><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install vsftpd  #安装vsftpd软件包</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p><code>sudo vim /etc/vsftpd.conf  #配置FTP服务器配置文件</code></p><p><code>sudo systemctl restart vsftpd  #重启</code></p><p><a href="https://blog.csdn.net/zxw136511485/article/details/79460671">https://blog.csdn.net/zxw136511485/article/details/79460671</a></p><p>正在使用的</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"># 禁止匿名用户登录</span><br><span class="line">anonymous_enable=NO</span><br><span class="line"># 允许系统用户登录</span><br><span class="line">local_enable=YES</span><br><span class="line"># 启用可以修改文件的 FTP 命令</span><br><span class="line">write_enable=YES</span><br><span class="line"># 本地用户创建文件的 umask 值</span><br><span class="line">local_umask=022</span><br><span class="line"># 允许为目录配置显示信息,显示每个目录下面的message_file文件的内容</span><br><span class="line">dirmessage_enable=YES</span><br><span class="line"># 开启日记功能 </span><br><span class="line">xferlog_enable=YES</span><br><span class="line"># 使用标准的20端口来连接ftp </span><br><span class="line">connect_from_port_20=YES</span><br><span class="line"># 使用标准日志格式 </span><br><span class="line">xferlog_std_format=YES</span><br><span class="line"></span><br><span class="line"># 如果启动这项功能，则所有列在chroot_list_file之中的使用者不能更改根目录</span><br><span class="line">chroot_list_enable=YES</span><br><span class="line"># 指定限制的用户文件</span><br><span class="line">chroot_list_file=/etc/vsftpd.chroot_list</span><br><span class="line"></span><br><span class="line"># ftp服务器将处于独立启动模式</span><br><span class="line">listen=YES</span><br><span class="line"># 设置一个本地用户登录后进入到的目录</span><br><span class="line">local_root=/home/wenke</span><br><span class="line"># 设置PAM认证服务的配置文件名称，该文件保存在“/etc/pam.d/”目录下</span><br><span class="line">pam_service_name=vsftpd</span><br><span class="line"></span><br><span class="line"># ftp将检查userlist_file设置文件中指定的用户是否可以访问vsftpd服务器</span><br><span class="line">userlist_enable=YES</span><br><span class="line"># 只允许user_list文件中记录的ftp用户能登录vsftp服务，其他的ftp用户都不可以登录。</span><br><span class="line">userlist_deny=NO</span><br><span class="line"># 定义限制/允许用户登录的文件</span><br><span class="line">userlist_file=/etc/vsftpd.user_list</span><br><span class="line"></span><br><span class="line"># ftp服务器将使用tcp_wrappers作为主机访问控制模式</span><br><span class="line">tcp_wrappers=YES</span><br><span class="line"># 连接ftp服务费使用的端口</span><br><span class="line">listen_port=21</span><br><span class="line"></span><br><span class="line"># ftp工具连接成功提示</span><br><span class="line">ftpd_banner=Welcome to Arts FTP service  </span><br><span class="line"></span><br><span class="line">listen=YES</span><br><span class="line">listen_ipv6=No</span><br><span class="line">use_localtime=YES</span><br><span class="line">#默认情况下，VSFTPD使用主动模式。 要使用被动模式，请设置端口的最小和最大范围</span><br><span class="line">#FTP客户端在所选范围内的随机端口上打开与服务器的连接。</span><br><span class="line">#pasv_min_port=10000</span><br><span class="line">#pasv_max_port=10100</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h3 id="开启-UFW防火墙允许FTP流量"><a href="#开启-UFW防火墙允许FTP流量" class="headerlink" title="开启 UFW防火墙允许FTP流量"></a>开启 UFW防火墙允许FTP流量</h3><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 打开端口21（FTP命令端口），端口20（FTP数据端口）和30000-31000（被动端口范围）</span></span><br><span class="line">sudo ufw allow 20:21/tcp</span><br><span class="line">sudo ufw allow 10000:10100/tcp</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 通过禁用和重新启用UFW来重新加载UFW规则：</span></span><br><span class="line">sudo ufw disable</span><br><span class="line">sudo ufw enable</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sudo ufw status  #验证更改：</span><br></pre></td></tr></tbody></table></figure><h3 id="添加vsftpd-登录用户"><a href="#添加vsftpd-登录用户" class="headerlink" title="添加vsftpd 登录用户"></a>添加vsftpd 登录用户</h3><p>我们的ftp服务器已经搭建好啦~ 所以现在我们要开始创建一个新的用户账号了，然后用这个账号来连接FTP服务。<br>如果你设置了匿名用户也可以登录上传的话～这个可以省了<br>安装完毕后，/srv 下会增加一个 ftp 目录。同时系统会增加一个名为 ftp 的用户组，可以用<code>sudo cat  /etc/shadow</code> 查看，</p><p>1.增加用户 keke 并设置其目录为 /home/keke<br><code>sudo useradd -g ftp -s /bin/bash -d /home/ftpuser -m ftpuser</code><br>sudo useradd -g ftp -s /bin/bash -d /home/wenke -m wenke<br>-m创建该用户文件夹，-d指定该用户文件夹</p><p>(注：G：用户所在的组 d：表示创建用户的自己目录的位置给予指定  M：不建立默认的自家目录，也就是说在 /home 下没有自己的目录)</p><p>2.设置用户口令 <code>sudo passwd ftpuser</code></p><p>3.设置权限:sudo chmod 755 /home/ftpuser</p><p><strong>注意：</strong><br><a href="https://blog.csdn.net/bluishglc/article/details/42399439">https://blog.csdn.net/bluishglc/article/details/42399439</a><br>sudo chmod a-w /home/ftpuser  #去除用户主目录的写权限</p><p>4.添加vsftpd 登录用户<br><a href="https://blog.csdn.net/soslinken/article/details/79304076">https://blog.csdn.net/soslinken/article/details/79304076</a></p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">新建文件/etc/vsftpd.user_list，用于存放允许访问ftp的用户：</span></span><br><span class="line">sudo touch /etc/vsftpd.user_list </span><br><span class="line">sudo vim /etc/vsftpd.user_list  #填入用户名</span><br></pre></td></tr></tbody></table></figure><p>修改 vsftpd.conf<code>sudo vim /etc/vsftpd.conf</code></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># ftp将检查userlist_file设置文件中指定的用户是否可以访问vsftpd服务器</span><br><span class="line">userlist_enable=YES</span><br><span class="line"># 只允许user_list文件中记录的ftp用户能登录vsftp服务，其他的ftp用户都不可以登录。</span><br><span class="line">userlist_deny=NO</span><br><span class="line"># 定义限制/允许用户登录的文件</span><br><span class="line">userlist_file=/etc/vsftpd.user_list </span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h3 id="添加vsftpd登录用户对目录树的权限"><a href="#添加vsftpd登录用户对目录树的权限" class="headerlink" title="添加vsftpd登录用户对目录树的权限"></a>添加vsftpd登录用户对目录树的权限</h3><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/vsftpd.chroot_list  #添加编辑 chroot_list 文件:</span><br><span class="line"><span class="meta">#</span><span class="bash"> 添加ftp 用户名，每个用户占一行</span></span><br></pre></td></tr></tbody></table></figure><p>修改 vsftpd.conf<code>sudo vim /etc/vsftpd.conf</code></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"># 如果启动这项功能，则所有列在chroot_list_file之中的使用者不能更改根目录,限制用户在默认目录</span><br><span class="line">chroot_list_enable=YES</span><br><span class="line"># 指定不限制的用户文件,在这个文件里面的用户可以登录FTP，并访问其他目录</span><br><span class="line">chroot_list_file=/etc/vsftpd.chroot_list</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 设置一个本地用户登录后进入到的目录</span><br><span class="line">local_root=/home/ftpuser</span><br></pre></td></tr></tbody></table></figure><h3 id="vsftpd常用命令"><a href="#vsftpd常用命令" class="headerlink" title="vsftpd常用命令"></a>vsftpd常用命令</h3><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">sudo systemctl start vsftpd &amp;&amp; sudo systemctl enable vsftpd # 启动vsftpd并加入开机自启</span><br><span class="line"></span><br><span class="line">pgrep vsftpd  #查看进程 vsftp 是否存在</span><br><span class="line"></span><br><span class="line">service vsftpd status   #查看情况</span><br><span class="line">sudo systemctl restart vsftpd  #重启</span><br></pre></td></tr></tbody></table></figure><h3 id="踩坑"><a href="#踩坑" class="headerlink" title="踩坑"></a>踩坑</h3><p>1.vsftp启动失败，多半都是参数配置的问题吧<br>打开vsftp的配置文件/etc/vsftpd.conf，注释掉listen_ipv6=YES</p><p>2.xftp连接时不要使用被动模式<br>属性-&gt;选项-&gt;传输</p><h2 id="ftp访问"><a href="#ftp访问" class="headerlink" title="ftp访问"></a>ftp访问</h2><p>打开浏览器，在地址栏中输入<a href="ftp://服务器ip/">ftp://服务器IP</a>地址。然后回车。<br>磁盘访问方式首先双击计算机或者我的电脑，打开磁盘对话框，然后在路径栏中输入<a href="ftp://ftp服务器ip/">ftp://FTP服务器IP</a>地址。</p><h1 id="Xmanager-PCX-Server"><a href="#Xmanager-PCX-Server" class="headerlink" title="Xmanager PCX Server"></a>Xmanager PCX Server</h1><p>Xmanager是一个运行于MS Windows平台上的高性能的X window服务器。可以在本地PC上同时运行Linux/UNIX和Windows图形应用程序。</p><p>1、Xbrowser</p><p>Xbrowser使用xdcmp 协议通过图形化桌面远程可以连接到Unix/Linux主机</p><p>2、Xconfig</p><p>xconfig是linux下X Window环境中用于配制的一个工具，和menuconfig相似，但用法更友好方便</p><p>3、Xftp</p><p>Xftp是一个用于MS Windows平台的强大的FTP和SFTP文件传输程序。Xftp让你能安全地在Unix/Linux和Windows PC之间传输文件</p><p>4、Xlpd</p><p>Xlpd是一个用于MS Windows平台的LPD(行式打印机虚拟后台程序)应用程序。安装了Xlpd后，你的带有打印机的本地PC就成为了一个打印服务器，来自不同远程系统的打印任务都能在网络环境中得到请求和处理。</p><p>5、Xmanager - Broadcast</p><p>用于连接远程主机</p><p>6、Xmanager - Passive</p><p>可以选择Xbrowser、Xstart、Xconfig以及Xsound来连接远程</p><p>8、Xstart</p><p>Xstart通过图形化界面连接到Unix/Linux主机</p><h1 id="ssh管理软件"><a href="#ssh管理软件" class="headerlink" title="ssh管理软件"></a>ssh管理软件</h1><h2 id="SSH"><a href="#SSH" class="headerlink" title="SSH"></a>SSH</h2><p>简单介绍下SSH：</p><p>SSH：是一种安全通道协议，主要用来实现字符界面的远程登录，远程复制等功能(使用TCP的22号端口)。SSH协议对通信双方的数据传输进行了加密处理，其中包括用户登录时输入的用户口令。</p><p>在RHEL 5系统中使用的是OpenSSH服务器由openssh，openssh-server等软件包提供的(默认已经安装)，并以将sshd添加为标准的系统服务。</p><p>SSH提供一下两种方式的登录验证：</p><p>1、密码验证：以服务器中本地系统用户的登录名称，密码进行验证。<br>2、秘钥对验证：要求提供相匹配的秘钥信息才能通过验证。通常先在客户机中创建一对秘钥文件(公钥和私钥)，然后将公钥文件放到服务器中的指定位置。</p><p>注意：当密码验证和私钥验证都启用时，服务器将优先使用秘钥验证。</p><p>SSH的配置文件：</p><p>sshd服务的配置文件默认在/etc/ssh/sshd_config，正确调整相关配置项，可以进一步提高sshd远程登录的安全性。</p><p>配置文件的内容可以分为以下三个部分：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">1、常见SSH服务器监听的选项如下：</span><br><span class="line"></span><br><span class="line">Port 22 //监听的端口为22</span><br><span class="line"></span><br><span class="line">Protocol 2 //使用SSH V2协议</span><br><span class="line"></span><br><span class="line">ListenAdderss 0.0.0.0 //监听的地址为所有地址</span><br><span class="line"></span><br><span class="line">UseDNS no //禁止DNS反向解析</span><br><span class="line"></span><br><span class="line">2、常见用户登录控制选项如下：</span><br><span class="line"></span><br><span class="line">PermitRootLogin no //禁止root用户登录</span><br><span class="line"></span><br><span class="line">PermitEmptyPasswords no //禁止空密码用户登录</span><br><span class="line"></span><br><span class="line">LoginGraceTime 2m //登录验证时间为2分钟</span><br><span class="line"></span><br><span class="line">MaxAuthTries 6 //最大重试次数为6</span><br><span class="line"></span><br><span class="line">AllowUsers user //只允许user用户登录，与DenyUsers选项相反</span><br><span class="line"></span><br><span class="line">3、常见登录验证方式如下：</span><br><span class="line"></span><br><span class="line">PasswordAuthentication yes //启用密码验证</span><br><span class="line"></span><br><span class="line">PubkeyAuthentication yes //启用秘钥验证</span><br><span class="line"></span><br><span class="line">AuthorsizedKeysFile .ssh/authorized_keys //指定公钥数据库文件</span><br></pre></td></tr></tbody></table></figure><h2 id="unbuntu开启ssh服务"><a href="#unbuntu开启ssh服务" class="headerlink" title="unbuntu开启ssh服务"></a>unbuntu开启ssh服务</h2><p>因为Ubuntu默认是不安装SSH服务的，所以在安装之前可以查看目前系统是否安装<br>sudo service ssh status<br>sudo apt-get install openssh-server  #安装服务端</p><p>netstat -ntlp|grep 22  #查看22端口是否开启 ，LISTEN，即为开启状态</p><h2 id="Tabby"><a href="#Tabby" class="headerlink" title="Tabby"></a>Tabby</h2><p>github地址：<a href="https://github.com/Eugeny/tabby/releases">https://github.com/Eugeny/tabby/releases</a><br>网页版的Tabby（<a href="https://app.tabby.sh/">https://app.tabby.sh/</a>）</p><h3 id="功能特性"><a href="#功能特性" class="headerlink" title="功能特性"></a>功能特性</h3><p>Tabby 的功能特性大概有：</p><p>支持多平台，Windows、MacOS（Intel 芯片/M1 芯片）、Linux 都有对应的安装包的；</p><p>自带 SFTP 功能，能够与 Linux 系统传输文件；</p><p>炫酷的终端页面，简单易用，以及各种插件支持等</p><h3 id="使用-1"><a href="#使用-1" class="headerlink" title="使用"></a>使用</h3><p>想新建一个连接服务器的终端，要点击「Settings」，进入到配置页面。<br>进入到设置页面后，选择 profiles&amp;connections 这个选项，然后点击「New profile」新建一个终端配置<br>然后选择 ssh connection。<br>随后就会弹出配置 ssh 连接的信息，填上终端名称、IP 地址、端口号、账号密码就可以了。</p><h2 id="xshell"><a href="#xshell" class="headerlink" title="xshell"></a>xshell</h2><p>Xshell是一个用于MS Windows平台的强大的SSH，TELNET，和RLOGIN终端仿真软件。它使得用户能轻松和安全地从Windows PC上访问Unix/Linux主机<br><a href="https://xshell.en.softonic.com/">安装</a><br><a href="https://www.jianshu.com/p/4716cc35750f">参考</a></p><h3 id="远程连接"><a href="#远程连接" class="headerlink" title="远程连接"></a>远程连接</h3><p>选择导航菜单的文件 –&gt; 新建，输入名称和主机IP，协议默认SSH，端口默认22，如果不知道主机IP可以登录虚拟机的Linux系统，输入命令ifconfig查看(inet addr)</p><p>然后在左侧用户身份验证中输入用户名和密码，这样下次就可以直接连接了，当然如果为了安全考虑也可以不输入密码，在每次连接时再输入。</p><h3 id="Xshell怎么与云服务器连接"><a href="#Xshell怎么与云服务器连接" class="headerlink" title="Xshell怎么与云服务器连接"></a>Xshell怎么与云服务器连接</h3><p>打开Xshell，新建一个会话</p><p>主机填服务器ip,点击连接</p><p>用户名默认为root,而不是实例名，也不是你服务器中Linux的用户名；<br>密码则为服务器实例密码</p><h2 id="FinalShell"><a href="#FinalShell" class="headerlink" title="FinalShell"></a>FinalShell</h2><p><a href="http://www.hostbuf.com/">官网</a><br>FinalShell是一体化的的服务器,网络管理软件,不仅是ssh客户端,还是功能强大的开发,运维工具,充分满足开发,运维需求.</p><p>1.多平台支持Windows,Mac OS X,Linux</p><p>2.多标签,批量服务器管理.</p><p>3.支持登录Ssh和Windows远程桌面.</p><p>4.漂亮的平滑字体显示,内置100多个配色方案.</p><p>5.shell,sftp同屏显示,同步切换目录.</p><p>6.命令自动提示,智能匹配,输入更快捷,方便.</p><p>7.sftp支持,通过各种优化技术,加载更快,切换,打开目录无需等待.</p><p>8.服务器网络,性能实时监控,无需安装服务器插件.</p><p>9.内置海外服务器加速,加速远程桌面和ssh连接,操作流畅无卡顿.</p><p>10.双边加速功能,大幅度提高访问服务器速度.</p><p>11.内存,Cpu性能监控,Ping延迟丢包,Trace路由监控.</p><p>12.实时硬盘监控.</p><p>13.进程管理器.</p><p>14.快捷命令面板,可同时显示数十个命令.</p><p>15.内置文本编辑器,支持语法高亮,代码折叠,搜索,替换.</p><p>16.ssh和远程桌面均支持代理服务器.</p><p>17.打包传输,自动压缩解压.</p><p>18.免费内网穿透,无需设置路由器,无需公网ip.</p><h2 id="vscode连接wsl"><a href="#vscode连接wsl" class="headerlink" title="vscode连接wsl"></a>vscode连接wsl</h2><p>vscode的插件Remote-SSH，可以完美的解决在windows下开发linux程序的问题。Remote-SSH配置简单，界面可视化，相当于带IDE的ssh。当然也可以当做一个远程ssh的连接工具来代替putty，xshell。</p><p>在window的vscode上安装Remote Development扩展包<br>包括Remote - SSH ， Remote - Containers ，Remote - WSL扩展</p><p>Remote - WSL 扩展：使你能够打开容器中、远程计算机上或 WSL 中的任何文件夹。</p><h3 id="打开-WSL-项目"><a href="#打开-WSL-项目" class="headerlink" title="打开 WSL 项目"></a>打开 WSL 项目</h3><p>1.从 WSL 发行版打开项目，请打开发行版的命令行并输入：code .</p><p>2.从 VS Code 中打开项目，通过使用 VS Code 中的快捷方式 CTRL+SHIFT+P 调出命令面板，以访问更多 VS Code 远程选项。 如果随后键入 Remote-WSL，将看到可用的 VS Code 远程选项列表，使你可以在远程会话中重新打开文件夹，指定要在哪个发行版中打开，等等。</p><h1 id="在Docker运行Linux镜像"><a href="#在Docker运行Linux镜像" class="headerlink" title="在Docker运行Linux镜像"></a>在Docker运行Linux镜像</h1><p>OS =内核+文件系统/库</p><p>镜像=文件系统/库</p><p>在Docker容器中运行的Ubuntu镜像只是Ubuntu文件系统/库–它不包含Ubuntu内核。这在一定程度上解释了你从Docker容器中获得的效率，它利用了底层主机的内核(以及其他东西)。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;VMware搭建linux&quot;&gt;&lt;a href=&quot;#VMware搭建linux&quot; class=&quot;headerlink&quot; title=&quot;VMware搭建linux&quot;&gt;&lt;/a&gt;VMware搭建linux&lt;/h1&gt;&lt;p&gt;从原理上来说，VMware 虚拟化是直接在计算机硬件</summary>
      
    
    
    
    <category term="操作系统" scheme="https://wenkex.gitee.io/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
    
  </entry>
  
  <entry>
    <title>图床</title>
    <link href="https://wenkex.gitee.io/2022/101961876.html"/>
    <id>https://wenkex.gitee.io/2022/101961876.html</id>
    <published>2022-10-19T05:33:39.000Z</published>
    <updated>2022-10-19T08:48:45.236Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-什么是图床？"><a href="#1-什么是图床？" class="headerlink" title="1. 什么是图床？"></a>1. 什么是图床？</h2><p>图床，也就是专门提供存储图片的地方，我们只要通过图床提供的 API 接口，把图片上传上去，就可以通过外链访问了，根本不用操心图片是怎么存的，硬盘空间不够了，硬盘坏了，访问速度比较慢等等问题，这些图床都会帮我们搞定，他们会用各种技术帮我们做图片相关的优化和服务，比如多机互备、CDN 加速、图片处理、图片鉴黄、文本识别等等。<br>目前图床可以分为两种，一种是公共图床，一种是自建图床。公共图床也就是利用公共服务的图片上传接口，来提供图片外链的服务，比如新浪微博。自建图床，也就是利用各大云服务商提供的存储空间或者自己在 VPS 上使用开源软件来搭建图床，存储图片，生成外链提供访问，比如七牛、Lychee 开源自建图床方案。</p><h2 id="2-chevereto图床"><a href="#2-chevereto图床" class="headerlink" title="2. chevereto图床"></a>2. chevereto图床</h2><p><a href="https://cloud.tencent.com/developer/article/1831170">https://cloud.tencent.com/developer/article/1831170</a></p><p>chevereto图床还是挺好用的，不过免费版少了一些功能，我觉得影响比较大的就是外部储存了，所有文件都只能储存在本机，跑在云服务器上的话，直接访问对带宽压力还是很挺大的，加多一层CDN可能就会好些，不过若访问用户量大，这费用还是有些吃不消的=。=</p><h3 id="2-1-搭建chevereto图床"><a href="#2-1-搭建chevereto图床" class="headerlink" title="2.1. 搭建chevereto图床"></a>2.1. 搭建chevereto图床</h3><p>1.创建chevereto相关目录</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /app/chevereto</span><br><span class="line">mkdir -p /app/chevereto/database</span><br><span class="line">mkdir -p /app/chevereto/chevereto_images </span><br><span class="line">mkdir -p /app/chevereto/conf</span><br><span class="line"><span class="meta">#</span><span class="bash"> 修改相关目录属性，防止chevereto启动时无法写入</span></span><br><span class="line">chmod 777 /app/chevereto/database</span><br><span class="line">chmod 777 /app/chevereto/chevereto_images </span><br><span class="line">chmod 777 /app/chevereto/conf</span><br><span class="line">cd /app/chevereto</span><br></pre></td></tr></tbody></table></figure><p>2.在/app/chevereto目录中创建docker-compose.yaml文件，内容如下：</p><figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">'3'</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">db:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">mariadb</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./database:/var/lib/mysql:rw</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">private</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">MYSQL_ROOT_PASSWORD:</span> <span class="string">chevereto_root</span></span><br><span class="line">      <span class="attr">MYSQL_DATABASE:</span> <span class="string">chevereto</span></span><br><span class="line">      <span class="attr">MYSQL_USER:</span> <span class="string">chevereto</span></span><br><span class="line">      <span class="attr">MYSQL_PASSWORD:</span> <span class="string">chevereto</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">chevereto:</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">db</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">nmtan/chevereto</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">private</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">CHEVERETO_DB_HOST:</span> <span class="string">db</span></span><br><span class="line">      <span class="attr">CHEVERETO_DB_USERNAME:</span> <span class="string">chevereto</span></span><br><span class="line">      <span class="attr">CHEVERETO_DB_PASSWORD:</span> <span class="string">chevereto</span></span><br><span class="line">      <span class="attr">CHEVERETO_DB_NAME:</span> <span class="string">chevereto</span></span><br><span class="line">      <span class="attr">CHEVERETO_DB_PREFIX:</span> <span class="string">chv_</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./chevereto_images:/var/www/html/images:rw</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./conf/php.ini:/usr/local/etc/php/conf.d/php.ini</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">8810</span><span class="string">:80</span></span><br><span class="line"></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line">  <span class="attr">private:</span></span><br></pre></td></tr></tbody></table></figure><p>3.创建php配置文件<br>在/app/chevereto/conf目录中创建php.ini配置文件， 配置最大使用内存和最大上传的图片大小等属性。内容如下：</p><figure class="highlight ini"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">max_execution_time</span> = <span class="number">60</span><span class="comment">;</span></span><br><span class="line"><span class="attr">memory_limit</span> = <span class="number">1024</span>M<span class="comment">;</span></span><br><span class="line"><span class="attr">upload_max_filesize</span> = <span class="number">256</span>M<span class="comment">;</span></span><br><span class="line"><span class="attr">post_max_size</span> = <span class="number">256</span>M<span class="comment">;</span></span><br></pre></td></tr></tbody></table></figure><p>4.启动chevereto</p><p><code>docker-compose up -d</code></p><h3 id="2-2-设置反向代理"><a href="#2-2-设置反向代理" class="headerlink" title="2.2. 设置反向代理"></a>2.2. 设置反向代理</h3><p>1.到你购买域名的供应商控制台，将域名解析到你的服务器ip。</p><p>2.在宝塔的网站配置文件中设置反代<br>删除默认的两段location块，并加入以下location块</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># Reverse Porxy For </span><br><span class="line">    location / {</span><br><span class="line">        proxy_pass http://127.0.0.1:20002/;</span><br><span class="line">        proxy_redirect off;</span><br><span class="line">        proxy_set_header Host $host;</span><br><span class="line">        proxy_set_header Range $http_range;</span><br><span class="line">        proxy_set_header If-Range $http_if_range;</span><br><span class="line">        proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">        proxy_set_header X-Forwarded-Proto $scheme;</span><br><span class="line">        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">        client_max_body_size 20000m;</span><br><span class="line">        proxy_connect_timeout 600; #代理的连接超时时间（单位：毫秒）</span><br><span class="line">        proxy_read_timeout 600; #代理的读取资源超时时间（单位：毫秒）</span><br><span class="line">    }</span><br></pre></td></tr></tbody></table></figure><p>3.申请Let’s Encrypt免费证书</p><h2 id="3-又拍云"><a href="#3-又拍云" class="headerlink" title="3. 又拍云"></a>3. 又拍云</h2><p>百度云加速的优点在于流量给的比较多，每天10G，同时支持HTTPS，最大的问题是免费版不支持移动线路的加速，</p><p>七牛云则提供每月10G的CDN流量和10G存储空间，但其最大的缺点是免费流量不支持HTTPS，</p><p>==又拍云==每月提供10G的存储空间和15G流量，HTTP和HTTPS均可使用，同时支持申请免费证书和上传自有证书，15G流量对于个人小站足够用了。</p><p>点击以下网址进行注册：<a href="https://console.upyun.com/regis">https://console.upyun.com/regis</a></p><p>如何获得更长时间的免费资源呢？这就需要申请加入又拍云联盟了。申请加入需要到这个网址<a href="https://www.upyun.com/league">https://www.upyun.com/league</a></p><h2 id="4-配合utool插件使用"><a href="#4-配合utool插件使用" class="headerlink" title="4. 配合utool插件使用"></a>4. 配合utool插件使用</h2><p>使用utool的图床插件<br>在chevereto的web管理面板中点击用户名-Dashboard-setting-api获取apikey</p><p>上传url为<a href="http://ip/api/1/upload">http://ip/api/1/upload</a><br>API  key</p><h2 id="utool图床插件"><a href="#utool图床插件" class="headerlink" title="utool图床插件"></a>utool图床插件</h2><p>使用utool里的图床插件，picGo还要下载，而utool里还有其他有趣的插件</p><h2 id="使用-PicGo-GitHub图床"><a href="#使用-PicGo-GitHub图床" class="headerlink" title="使用 PicGo+GitHub图床"></a>使用 PicGo+GitHub图床</h2><p><a href="https://yafine-blog.cn/posts/eb3a.html">参考</a></p><h3 id="新建GitHub仓库"><a href="#新建GitHub仓库" class="headerlink" title="新建GitHub仓库"></a>新建GitHub仓库</h3><p>创建是记住分支名，默认是main </p><h3 id="生成一个Token"><a href="#生成一个Token" class="headerlink" title="生成一个Token"></a>生成一个Token</h3><p>在主页依次选择【Settings】-【Developer settings】-【Personal access tokens】-【Generate new token】，填写好描述，勾选【repo】，然后点击【Generate token】生成一个Token，注意这个Token只会显示一次，自己先保存下来，或者等后面配置好PicGo后再关闭此网页</p><p><img src="https://cdn.jsdelivr.net/gh/wenkexia/image/06.jpg"></p><h3 id="配置PicGo"><a href="#配置PicGo" class="headerlink" title="配置PicGo"></a>配置PicGo</h3><p>前往下载PicGo，安装好后开始配置图床<br>设定仓库名：按照【用户名/图床仓库名】的格式填写</p><p>设定分支名：【main】</p><p>设定Token：粘贴之前生成的【Token】</p><p>设定自定义域名：它的作用是，在图片上传后，PicGo 会按照【自定义域名+储存路径+上传的图片名】的方式生成访问链接，并放到粘贴板上，因为我们要使用 jsDelivr 加速访问，所以可以设置为【<a href="https://cdn.jsdelivr.net/gh/%E7%94%A8%E6%88%B7%E5%90%8D/%E5%9B%BE%E5%BA%8A%E4%BB%93%E5%BA%93%E5%90%8D">https://cdn.jsdelivr.net/gh/用户名/图床仓库名</a> 】</p><h2 id="配置Picgo插件"><a href="#配置Picgo插件" class="headerlink" title="配置Picgo插件"></a>配置Picgo插件</h2><h2 id="防盗链"><a href="#防盗链" class="headerlink" title="防盗链"></a>防盗链</h2><p>HTTP Referer是header的一部分，当浏览器向web服务器发送请求的时候，一般会带上Referer，告诉服务器我是从哪个页面链接过来的，服务器籍此可以获得一些信息用于处理。</p><p>比如从我主页上链接到一个朋友那里，他的服务器就能够从HTTP Referer中统计出每天有多少用户点击我主页上的链接访问他的网站。</p><h3 id="绕过防盗链"><a href="#绕过防盗链" class="headerlink" title="绕过防盗链"></a>绕过防盗链</h3><p>使用防盗链也是一种防君子不防小人的做法。</p><p>我们可以伪造请求，假装自己也是和网站运营商是一伙，从而绕开防盗链。</p><p>在请求时给请求头中的referer加上相应的值，即可成功绕开。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-什么是图床？&quot;&gt;&lt;a href=&quot;#1-什么是图床？&quot; class=&quot;headerlink&quot; title=&quot;1. 什么是图床？&quot;&gt;&lt;/a&gt;1. 什么是图床？&lt;/h2&gt;&lt;p&gt;图床，也就是专门提供存储图片的地方，我们只要通过图床提供的 API 接口，把图片上传上去</summary>
      
    
    
    
    <category term="博客相关" scheme="https://wenkex.gitee.io/categories/%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3/"/>
    
    
  </entry>
  
  <entry>
    <title>搭建Halo博客</title>
    <link href="https://wenkex.gitee.io/2022/101947891.html"/>
    <id>https://wenkex.gitee.io/2022/101947891.html</id>
    <published>2022-10-19T05:29:13.000Z</published>
    <updated>2022-10-19T08:48:45.236Z</updated>
    
    <content type="html"><![CDATA[<h2 id="3-2-Halo博客"><a href="#3-2-Halo博客" class="headerlink" title="3.2. Halo博客"></a>3.2. Halo博客</h2><p>优点<br>  1、部署方便（指用Docker）<br>  2、主题也日渐丰富<br>  3、开发者非常友好，有活跃的社区，基本上你碰到任何问题，都能在社区中找到答案（当然先要学习提问的智慧）<br>  4、维护方便（尤其是用了Docker）</p><p>缺点:因为是java写的，比较吃服务器的配置，推荐服务器内存至少1GB,占用内存680m<br><a href="https://github.com/halo-dev/halo">https://github.com/halo-dev/halo</a></p><p>文档：<a href="https://docs.halo.run/getting-started/install/docker">https://docs.halo.run/getting-started/install/docker</a></p><p>论坛：<a href="https://bbs.halo.run/">https://bbs.halo.run/</a></p><h3 id="3-2-1-docker搭建"><a href="#3-2-1-docker搭建" class="headerlink" title="3.2.1. docker搭建"></a>3.2.1. docker搭建</h3><p><a href="https://blog.laoda.de/archives/docker-install-halo">https://blog.laoda.de/archives/docker-install-halo</a></p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 创建 工作目录</span></span><br><span class="line">mkdir /app/.halo &amp;&amp; cd /app/.halo</span><br><span class="line"><span class="meta">#</span><span class="bash">下载示例配置文件到 工作目录</span></span><br><span class="line">wget https://dl.halo.run/config/application-template.yaml -O ./application.yaml</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 编辑配置文件，配置数据库或者端口等</span></span><br><span class="line">vim /app/.halo/application.yaml</span><br><span class="line"></span><br><span class="line">rm -rf /app/.halo/.leveldb</span><br><span class="line"></span><br><span class="line">docker run -it -d --name halo -p 20001:8090 -v /app/.halo:/root/.halo --restart=unless-stopped halohub/halo:latest </span><br></pre></td></tr></tbody></table></figure><p>-it： 开启输入功能并连接伪终端<br>-d： 后台运行容器<br>–name： 为容器指定一个名称<br>-p： 端口映射，格式为 主机(宿主)端口:容器端口 ，可在 application.yaml 配置。<br>-v： 工作目录映射。形式为：-v 宿主机路径:/root/.halo，后者不能修改。<br>–restart： 建议设置为 unless-stopped，在 Docker 启动的时候自动启动 Halo 容器。</p><h3 id="3-2-2-设置反代"><a href="#3-2-2-设置反代" class="headerlink" title="3.2.2. 设置反代"></a>3.2.2. 设置反代</h3><p>在宝塔的网站配置文件中设置反代</p><p>删除默认的location块，并加入以下location块</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># Reverse Porxy For halo</span><br><span class="line">    location / {</span><br><span class="line">        proxy_pass http://127.0.0.1:端口/;</span><br><span class="line">        proxy_redirect off;</span><br><span class="line">        proxy_set_header Host $host;</span><br><span class="line">        proxy_set_header Range $http_range;</span><br><span class="line">        proxy_set_header If-Range $http_if_range;</span><br><span class="line">        proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">        proxy_set_header X-Forwarded-Proto $scheme;</span><br><span class="line">        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">        client_max_body_size 20000m;</span><br><span class="line">        proxy_connect_timeout 600; #代理的连接超时时间（单位：毫秒）</span><br><span class="line">        proxy_read_timeout 600; #代理的读取资源超时时间（单位：毫秒）</span><br><span class="line">    }</span><br></pre></td></tr></tbody></table></figure><p>在域名解析控制台中，域名绑定</p><h3 id="3-2-3-主题推荐"><a href="#3-2-3-主题推荐" class="headerlink" title="3.2.3. 主题推荐"></a>3.2.3. 主题推荐</h3><p>Weicarus   下载：<a href="https://github.com/lin-liem/weicarus">https://github.com/lin-liem/weicarus</a><br>joe2.0下载:<a href="https://github.com/qinhua/halo-theme-joe2.0.git">https://github.com/qinhua/halo-theme-joe2.0.git</a><br><a href="https://github.com/nineya/halo-theme-dream.git">https://github.com/nineya/halo-theme-dream.git</a></p><h3 id="3-2-4-joe主题"><a href="#3-2-4-joe主题" class="headerlink" title="3.2.4. joe主题"></a>3.2.4. joe主题</h3><p>官网：<a href="https://halo.run/">https://halo.run</a><br>文档：<a href="https://docs.halo.run/">https://docs.halo.run</a><br>社区：<a href="https://bbs.halo.run/">https://bbs.halo.run</a><br>主题仓库：<a href="https://halo.run/themes.html">https://halo.run/themes.html</a><br>开源地址：<a href="https://github.com/halo-dev/halo">https://github.com/halo-dev/halo</a></p><p>首页文章不显示问题<br>在halo的web管理端中-主题设置-首页-关闭异步加载文章列表</p><h3 id="3-2-5-记得备份"><a href="#3-2-5-记得备份" class="headerlink" title="3.2.5. 记得备份"></a>3.2.5. 记得备份</h3><p>由于我想更改端口，所以删除了之前的容器后，再执行创建容器，发现站点无法访问<br>于是只好删除了之前的.halo里的所有文件所以一定要==备份==<br>web后台备份.json文件</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;3-2-Halo博客&quot;&gt;&lt;a href=&quot;#3-2-Halo博客&quot; class=&quot;headerlink&quot; title=&quot;3.2. Halo博客&quot;&gt;&lt;/a&gt;3.2. Halo博客&lt;/h2&gt;&lt;p&gt;优点&lt;br&gt;  1、部署方便（指用Docker）&lt;br&gt;  2、主题也日</summary>
      
    
    
    
    <category term="博客相关" scheme="https://wenkex.gitee.io/categories/%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3/"/>
    
    
  </entry>
  
  <entry>
    <title>hexo-butterfly主题</title>
    <link href="https://wenkex.gitee.io/2022/101946574.html"/>
    <id>https://wenkex.gitee.io/2022/101946574.html</id>
    <published>2022-10-19T05:28:59.000Z</published>
    <updated>2022-10-19T08:48:45.235Z</updated>
    
    <content type="html"><![CDATA[<h1 id="butterfly主题配置"><a href="#butterfly主题配置" class="headerlink" title="butterfly主题配置"></a>butterfly主题配置</h1><p><a href="https://butterfly.js.org/">官方文档</a><br><a href="https://butterfly.js.org/">https://butterfly.js.org/</a><br><a href="https://yangchaoyi.vip/">https://yangchaoyi.vip/</a></p><h2 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h2><p>如果你没有 pug 以及 stylus 的渲染器，请下载安装：<br><code>npm install hexo-renderer-pug hexo-renderer-stylus --save</code></p><h2 id="butterfly主题升级"><a href="#butterfly主题升级" class="headerlink" title="butterfly主题升级"></a>butterfly主题升级</h2><p>1.在 hexo 的根目录创建一个文件 _config.butterfly.yml，并把主题目录的 _config.yml 内容复製到 _config.butterfly.yml 去。( 注意: 复製的是主题的 _config.yml ,而不是 hexo 的 _config.yml)<br>2.不要把主题目录的 _config.yml 删掉<br>3.以后只需要在 _config.butterfly.yml进行配置就行。<br>4.Hexo会自动合併主题中的_config.yml和 _config.butterfly.yml里的配置，如果存在同名配置，会使用_config.butterfly.yml的配置，其优先度较高。</p><p>如果你只使用到主题配置文件，那么升级只需对比新版本主题的配置文件，把旧版本主题配置文件改动到新版本主题配置文件中。<br>重新 git clone 新版 Butterfly 主题到 root/themes/</p><p><code>git clone -b dev https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly</code></p><h2 id="Inject"><a href="#Inject" class="headerlink" title="Inject"></a>Inject</h2><p><a href="https://blog.csdn.net/u012208219/article/details/106883001/?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_baidulandingword~default-9.no_search_link&amp;spm=1001.2101.3001.4242.6&amp;utm_relevant_index=12">参考</a><br>打开主题配置文件（butterfly.yml）<br>定位搜索 inject<br>其中head是用来引入css的。bottom是用来引入js的。</p><h3 id="以相对路径引入"><a href="#以相对路径引入" class="headerlink" title="以相对路径引入"></a>以相对路径引入</h3><p>1.将写好的css文件移动到\Butterfly\source\css\目录下。<br>2.然后修改配置文件的引入方式</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">inject:</span></span><br><span class="line">  <span class="attr">head:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;link</span> <span class="string">rel="stylesheet"</span> <span class="string">href="/css/name.css"&gt;</span></span><br><span class="line">  <span class="attr">bottom:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">src="xxxx"&gt;&lt;/script&gt;</span></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h2 id="标签外挂（Tag-Plugins）-推荐"><a href="#标签外挂（Tag-Plugins）-推荐" class="headerlink" title="标签外挂（Tag Plugins）(推荐)"></a>标签外挂（Tag Plugins）(推荐)</h2><p><a href="https://butterfly.js.org/posts/4aa8abbe/#%E6%A8%99%E7%B1%A4%E5%A4%96%E6%8E%9B%EF%BC%88Tag-Plugins%EF%BC%89">参考</a><br><a href="https://blog.ccknbc.cc/posts/introduction-of-plugin-tags-based-on-butterfly/">参考</a><br>标籤外挂是Hexo独有的功能，并不是标準的Markdown格式。</p><p>以下的写法，只适用于Butterfly主题，用在其它主题上不会有效果，甚至可能会报错。使用前请留意</p><h3 id="Tabs"><a href="#Tabs" class="headerlink" title="Tabs"></a>Tabs</h3><p>页面内置小标签<br>使用</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">{% tabs Unique name, [index] %}</span><br><span class="line">&lt;!-- tab [Tab caption] [@icon] --&gt;</span><br><span class="line">Any content (support inline tags too).</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">{% endtabs %}</span><br><span class="line"></span><br><span class="line">Unique name   : Unique name of tabs block tag without comma.</span><br><span class="line"><span class="code">                Will be used in #id's as prefix for each tab with their index numbers.</span></span><br><span class="line"><span class="code">                If there are whitespaces in name, for generate #id all whitespaces will replaced by dashes.</span></span><br><span class="line"><span class="code">                Only for current url of post/page must be unique!</span></span><br><span class="line"><span class="code">[index]       : Index number of active tab.</span></span><br><span class="line"><span class="code">                If not specified, first tab (1) will be selected.</span></span><br><span class="line"><span class="code">                If index is -1, no tab will be selected. It's will be something like spoiler.</span></span><br><span class="line"><span class="code">                Optional parameter.</span></span><br><span class="line"><span class="code">[Tab caption] : Caption of current tab.</span></span><br><span class="line"><span class="code">                If not caption specified, unique name with tab index suffix will be used as caption of tab.</span></span><br><span class="line"><span class="code">                If not caption specified, but specified icon, caption will empty.</span></span><br><span class="line"><span class="code">                Optional parameter.</span></span><br><span class="line"><span class="code">[@icon]       : FontAwesome icon name (full-name, look like 'fas fa-font')</span></span><br><span class="line"><span class="code">                Can be specified with or without space; e.g. 'Tab caption @icon' similar to 'Tab caption@icon'.</span></span><br><span class="line"><span class="code">                Optional parameter.</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">{% tabs test4 %}</span><br><span class="line">&lt;!-- tab 第一个Tab --&gt;</span><br><span class="line"><span class="strong">**tab名字为第一个Tab**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab @fab fa-apple-pay --&gt;</span><br><span class="line"><span class="strong">**只有图标 没有Tab名字**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab 炸弹@fas fa-bomb --&gt;</span><br><span class="line"><span class="strong">**名字+icon**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">{% endtabs %}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><div class="tabs" id="test4"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test4-1">第一个Tab</button></li><li class="tab"><button type="button" data-href="#test4-2"><i class="fab fa-apple-pay" style="text-align: center;"></i></button></li><li class="tab"><button type="button" data-href="#test4-3"><i class="fas fa-bomb"></i>炸弹</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test4-1"><p><strong>tab名字为第一个Tab</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-2"><p><strong>只有图标 没有Tab名字</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-3"><p><strong>名字+icon</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="Button"><a href="#Button" class="headerlink" title="Button"></a>Button</h3><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">{% btn [url],[text],[icon],[color] [style] [layout] [position] [size] %}</span><br><span class="line"></span><br><span class="line">[url]         : 链接</span><br><span class="line">[text]        : 按钮文字</span><br><span class="line">[icon]        : [可选] 图标</span><br><span class="line">[color]       : [可选] 按钮背景顔色(默认style时）</span><br><span class="line"><span class="code">                      按钮字体和边框顔色(outline时)</span></span><br><span class="line"><span class="code">                      default/blue/pink/red/purple/orange/green</span></span><br><span class="line"><span class="code">[style]       : [可选] 按钮样式 默认实心</span></span><br><span class="line"><span class="code">                      outline/留空</span></span><br><span class="line"><span class="code">[layout]      : [可选] 按钮佈局 默认为line</span></span><br><span class="line"><span class="code">                      block/留空</span></span><br><span class="line"><span class="code">[position]    : [可选] 按钮位置 前提是设置了layout为block 默认为左边</span></span><br><span class="line"><span class="code">                      center/right/留空</span></span><br><span class="line"><span class="code">[size]        : [可选] 按钮大小</span></span><br><span class="line"><span class="code">                      larger/留空</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>This is my website, click the button <a class="btn-beautify larger" href="https://butterfly.js.org/" title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a></p><h2 id="gallery-相册图库"><a href="#gallery-相册图库" class="headerlink" title="gallery 相册图库"></a>gallery 相册图库</h2><p><a href="https://dyfa.top/posts/waterfall-flow-photo-album.html#toc-heading-4">参考</a><br><a href="https://butterfly.js.org/posts/dc584b87/#%E5%9C%96%E5%BA%AB">参考</a></p><h3 id="编辑主题导航栏加入相册按钮"><a href="#编辑主题导航栏加入相册按钮" class="headerlink" title="编辑主题导航栏加入相册按钮"></a>编辑主题导航栏加入相册按钮</h3><p>在站点主题_config.yml文件下menu菜单下新增gallery页面。</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line"> <span class="string">相册:</span> <span class="string">/gallery/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-heart</span></span><br></pre></td></tr></tbody></table></figure><h3 id="新建相册页面"><a href="#新建相册页面" class="headerlink" title="新建相册页面"></a>新建相册页面</h3><p>在站点的source文件夹下面新建一个gallery相册页面。<br><code>hexo new page gallery</code><br>打开新建的gallery文件夹，里面会有一个index.md文件，设置index.md文件内容。然后使用标签外挂 galleryGroup，具体用法请查看对应的内容。</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">--- </span><br><span class="line">title: gallery </span><br><span class="line">date: 2020-10-05 12:00:00 </span><br><span class="line">type: "gallery"</span><br><span class="line">layout: "gallery" </span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"gallery-group-main"</span>&gt;</span></span></span><br><span class="line">{% galleryGroup '壁纸' '收藏的一些壁纸' '/Gallery/wallpaper' https://i.loli.net/2019/11/10/T7Mu8Aod3egmC4Q.png %}</span><br><span class="line">{% galleryGroup '漫威' '关于漫威的图片' '/Gallery/marvel' https://i.loli.net/2019/12/25/8t97aVlp4hgyBGu.jpg %}</span><br><span class="line">{% galleryGroup 'OH MY GIRL' '关于OH MY GIRL的图片' '/Gallery/ohmygirl' https://i.loli.net/2019/12/25/hOqbQ3BIwa6KWpo.jpg %}</span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">---</span><br></pre></td></tr></tbody></table></figure><p>name：图库名字<br>description：图库描述<br>link：连接到对应相册的地址<br>img-url：图库封面的地址</p><h3 id="新建相册图片展示页面"><a href="#新建相册图片展示页面" class="headerlink" title="新建相册图片展示页面"></a>新建相册图片展示页面</h3><p>在gallery文件夹（也就是刚才创建的那个文件），可以在里面新建一些文件夹，也就是相册文件夹<br>然后在新建的相册文件夹里，分别在每个文件夹里新建文件index.md ,<br>然后使用标签外挂 gallery，具体用法请查看对应的内容。</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">--- </span><br><span class="line">{% gallery %}</span><br><span class="line">![](https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg)</span><br><span class="line">![](https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg)</span><br><span class="line">![](https://i.loli.net/2019/12/25/gEy5Zc1Ai6VuO4N.jpg)</span><br><span class="line">![](https://i.loli.net/2019/12/25/d6QHbytlSYO4FBG.jpg)</span><br><span class="line">![](https://i.loli.net/2019/12/25/6nepIJ1xTgufatZ.jpg)</span><br><span class="line">![](https://i.loli.net/2019/12/25/E7Jvr4eIPwUNmzq.jpg)</span><br><span class="line">![](https://i.loli.net/2019/12/25/mh19anwBSWIkGlH.jpg)</span><br><span class="line">![](https://i.loli.net/2019/12/25/2tu9JC8ewpBFagv.jpg)</span><br><span class="line">{% endgallery %}</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h2 id="友情链接"><a href="#友情链接" class="headerlink" title="友情链接"></a>友情链接</h2><h3 id="创建友情链接页面"><a href="#创建友情链接页面" class="headerlink" title="创建友情链接页面"></a>创建友情链接页面</h3><p>在博客的根目录输入 <code>hexo new page link</code><br>修改source/link/index.md这个文件</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"> ---</span><br><span class="line">title: 友情链接</span><br><span class="line">date: 2018-06-07 22:17:49</span><br><span class="line"><span class="section">type: "link"</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></tbody></table></figure><h3 id="友情链接添加"><a href="#友情链接添加" class="headerlink" title="友情链接添加"></a>友情链接添加</h3><p>在Hexo博客目录中的source/_data（如果没有 _data 文件夹，请自行创建），创建一个文件link.yml</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">class_name:</span> <span class="string">友情链接</span></span><br><span class="line">  <span class="attr">class_desc:</span> <span class="string">那些人，那些事</span></span><br><span class="line">  <span class="attr">link_list:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Hexo</span></span><br><span class="line">      <span class="attr">link:</span> <span class="string">https://hexo.io/zh-tw/</span></span><br><span class="line">      <span class="attr">avatar:</span> <span class="string">https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg</span></span><br><span class="line">      <span class="attr">descr:</span> <span class="string">快速、简单且强大的网誌框架</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">class_name:</span> <span class="string">网站</span></span><br><span class="line">  <span class="attr">class_desc:</span> <span class="string">值得推荐的网站</span></span><br><span class="line">  <span class="attr">link_list:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Youtube</span></span><br><span class="line">      <span class="attr">link:</span> <span class="string">https://www.youtube.com/</span></span><br><span class="line">      <span class="attr">avatar:</span> <span class="string">https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png</span></span><br><span class="line">      <span class="attr">descr:</span> <span class="string">视频网站</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Weibo</span></span><br><span class="line">      <span class="attr">link:</span> <span class="string">https://www.weibo.com/</span></span><br><span class="line">      <span class="attr">avatar:</span> <span class="string">https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png</span></span><br><span class="line">      <span class="attr">descr:</span> <span class="string">中国最大社交分享平台</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Twitter</span></span><br><span class="line">      <span class="attr">link:</span> <span class="string">https://twitter.com/</span></span><br><span class="line">      <span class="attr">avatar:</span> <span class="string">https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png</span></span><br><span class="line">      <span class="attr">descr:</span> <span class="string">社交分享平台</span></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>class_name和class_desc支持html格式书写，如不需要，也可以留空。</p><h2 id="评论"><a href="#评论" class="headerlink" title="评论"></a>评论</h2><p>开启评论需要在comments-use中填写你需要的评论。</p><p>支持双评论显示，只需要配置两个评论（第一个为默认显示） </p><table><thead><tr><th>参数</th><th>解释</th></tr></thead><tbody><tr><td>use</td><td>使用的评论（填写的评论首字母需要大写。最多支持两个）注意：由于共用 ID,双评论不能是 Disqus 和 Disqusjs</td></tr><tr><td>text</td><td>是否显示评论服务商的名字</td></tr><tr><td>lazyload</td><td>是否为评论开启lazyload，开启后，只有滚动到评论位置时才会加载评论所需要的资源（开启lazyload后，评论数将不显示）</td></tr><tr><td>count</td><td>是否在文章顶部显示评论数livere 和 utterances 不支持评论数显示</td></tr><tr><td>card_post_count</td><td>是否在首页文章卡片显示评论数gitalk、livere 和 utterances不支持评论数显示</td></tr></tbody></table><h2 id="Pjax"><a href="#Pjax" class="headerlink" title="Pjax"></a>Pjax</h2><p>当用户点击链接，通过ajax更新页面需要变化的部分，然后使用HTML5的pushState修改浏览器的URL地址。</p><p>这样可以不用重复加载相同的资源（css/js）， 从而提升网页的加载速度。 </p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">pjax:</span> </span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">exclude:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">/music/</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">/no-pjax/</span></span><br></pre></td></tr></tbody></table></figure><p>对于一些第三方插件，有些并不支持 pjax 。<br>你可以把网页加入到 exclude 里，这个网页会被 pjax 排除在外。<br>点击该网页会重新加载网站</p><p>使用pjax后，一些自己DIY的js可能会无效，跳转页面时需要重新调用，请参考Pjax文档<br>使用pjax后，一些个别页面加载的js/css，将会改为所有页面都加载</p><p>Butterfly的Pjax目前仍有一些问题，请留意</p><h2 id="引用文章"><a href="#引用文章" class="headerlink" title="引用文章"></a>引用文章</h2><p><a href="https://hexo.io/zh-cn/docs/tag-plugins#%E5%BC%95%E7%94%A8%E6%96%87%E7%AB%A0">参考</a><br>以_post为根目录定位文件（md文件会被渲染成html）<br>因为使用了abbrlink生成文章永久链接，所以在GitHub仓库中由md渲染成的HTML文件名是日期加abbrlink数字</p><h3 id="新建一个页面打开文章"><a href="#新建一个页面打开文章" class="headerlink" title="新建一个页面打开文章"></a>新建一个页面打开文章</h3><p><code>&lt;a href="/2021/12184010.html" target="_blank"&gt;显示的文字&lt;/a&gt;</code></p><h3 id="在此页面打开新文章"><a href="#在此页面打开新文章" class="headerlink" title="在此页面打开新文章"></a>在此页面打开新文章</h3><p><code>[显示的文字](/2021/12184010.html)</code><br><code>{% post_link 文章文件名 显示文本 %}</code></p><h2 id="添加-RSS-订阅支持"><a href="#添加-RSS-订阅支持" class="headerlink" title="添加 RSS 订阅支持"></a>添加 RSS 订阅支持</h2><p>本主题中还使用到了 hexo-generator-feed 的 Hexo 插件来做 RSS，安装命令如下：<br><code>npm install hexo-generator-feed --save</code></p><p>执行 hexo clean &amp;&amp; hexo g 重新生成博客文件，然后在 public 文件夹中即可看到 atom.xml 文件，说明已经安装成功了。</p><p>在 Hexo 根目录下的 _config.yml 文件中，新增以下的配置项：</p><figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># RSS订阅</span></span><br><span class="line"><span class="attr">plugin:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">hexo-generator-feed</span></span><br><span class="line"><span class="comment"># Feed Atom</span></span><br><span class="line"><span class="attr">feed:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">atom</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">atom.xml</span></span><br><span class="line">  <span class="attr">limit:</span> <span class="number">20</span></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>在主题的配置文件_config.butterfly.yml中的social属性下添加rss的icon配置：</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">social:</span></span><br><span class="line">  <span class="attr">fa fa-rss:</span> <span class="string">/atom.xml</span></span><br></pre></td></tr></tbody></table></figure><h2 id="添加emoji表情支持"><a href="#添加emoji表情支持" class="headerlink" title="添加emoji表情支持"></a>添加emoji表情支持</h2><p>Matery 主题新增了对emoji表情的支持，使用到了 hexo-filter-github-emojis 的 Hexo 插件来支持 emoji表情的生成，把对应的markdown emoji语法（::,例如：<span class="github-emoji"><span>😄</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f604.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>）转变成会跳跃的emoji表情，安装命令如下：<br><code>npm install hexo-filter-github-emojis --save</code><br>在 Hexo 根目录下的 _config.yml 文件中，新增以下的配置项：</p><figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">githubEmojis:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">className:</span> <span class="string">github-emoji</span></span><br><span class="line">  <span class="attr">inject:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">styles:</span></span><br><span class="line">  <span class="attr">customEmojis:</span></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h2 id="添加动态诗词"><a href="#添加动态诗词" class="headerlink" title="添加动态诗词"></a>添加动态诗词</h2><p><a href="https://blog.csdn.net/victoryxa/article/details/105841309">参考</a></p><p>采用的是今日诗词，每次返回一句诗词，根据时间、地点、天气、事件智能推荐。官网有<a href="https://www.jinrishici.com/doc/">API文档</a>，可以去看一下，有多种安装方式，最简单的方式就是从官网获取代码，<br>1.在/themes/matery/layout/_partial/head.ejs添加下面的一行代码：</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">"https://sdk.jinrishici.com/v2/browser/jinrishici.js"</span> charset=<span class="string">"utf-8"</span>&gt;&lt;/script&gt;</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>2.然后再将/themes/matery/layout/_partial/bg-cover-content.ejs中的<code>&lt;%= config.description %&gt;</code>修改为<code>&lt;%- '&lt;span id="jinrishici-sentence"&gt;正在加载今日诗词....&lt;/span&gt;' %&gt;</code><br>3.使用前提是将主题配置文件的subtitle的值改为false。</p><h2 id="添加萌萌的动漫人物"><a href="#添加萌萌的动漫人物" class="headerlink" title="添加萌萌的动漫人物"></a>添加萌萌的动漫人物</h2><p>1.安装插件<br><code>npm install --save hexo-helper-live2d</code><br>2.输入以下命令，安装下载动画人物库，将 haruto 更换成你想要的模型名称即可 如：<br><code>npm install live2d-widget-model-haruto</code><br>更多模型选择请<a href="https://gitcode.net/mirrors/xiazeyu/live2d-widget-models?utm_source=csdn_github_accelerator">点击</a></p><p>3.根目录_config.yml配置里面添加：</p><figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">live2d:</span> </span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> </span><br><span class="line">  <span class="attr">scriptFrom:</span> <span class="string">local</span> </span><br><span class="line">  <span class="attr">pluginRootPath:</span> <span class="string">live2dw/</span> </span><br><span class="line">  <span class="attr">pluginJsPath:</span> <span class="string">lib/</span> </span><br><span class="line">  <span class="attr">pluginModelPath:</span> <span class="string">assets/</span> </span><br><span class="line">  <span class="attr">tagMode:</span> <span class="literal">false</span> </span><br><span class="line">  <span class="attr">log:</span> <span class="literal">false</span> </span><br><span class="line">  <span class="attr">model:</span> </span><br><span class="line">    <span class="attr">use:</span> <span class="string">live2d-widget-model-haruto</span>  <span class="comment">#模型选择</span></span><br><span class="line">  <span class="attr">display:</span> </span><br><span class="line">    <span class="attr">position:</span> <span class="string">right</span>  <span class="comment">#模型位置</span></span><br><span class="line">    <span class="attr">width:</span> <span class="number">150</span>   <span class="comment">#模型宽度</span></span><br><span class="line">    <span class="attr">height:</span> <span class="number">300</span>  <span class="comment">#模型高度</span></span><br><span class="line">  <span class="attr">mobile:</span> </span><br><span class="line">    <span class="attr">show:</span> <span class="literal">true</span> <span class="comment">#是否在手机端显示</span></span><br><span class="line">    <span class="attr">react:</span> </span><br><span class="line">      <span class="attr">opacity:</span> <span class="number">0.7</span></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>动漫人物最好不要和不蒜子一起使用，不然不蒜子会显示不出来。</p><h2 id="添加全局吸底Aplayer音乐-不采用"><a href="#添加全局吸底Aplayer音乐-不采用" class="headerlink" title="添加全局吸底Aplayer音乐(不采用)"></a>添加全局吸底Aplayer音乐(不采用)</h2><h3 id="安装hexo-tag-aplayer插件"><a href="#安装hexo-tag-aplayer插件" class="headerlink" title="安装hexo-tag-aplayer插件"></a>安装hexo-tag-aplayer插件</h3><h3 id="关闭-asset-inject"><a href="#关闭-asset-inject" class="headerlink" title="关闭 asset_inject"></a>关闭 asset_inject</h3><p>由于需要全局都插入aplayer和meting资源，为了防止插入重复的资源，需要把asset_inject设为false<br>在Hexo的配置文件中</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">aplayer:</span></span><br><span class="line">  <span class="attr">meting:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">asset_inject:</span> <span class="literal">false</span></span><br></pre></td></tr></tbody></table></figure><h3 id="开启主题的aplayerInject"><a href="#开启主题的aplayerInject" class="headerlink" title="开启主题的aplayerInject"></a>开启主题的aplayerInject</h3><p>在主题的配置文件中，enable设为true和per_page设为true</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Inject the css and script (aplayer/meting)</span></span><br><span class="line"><span class="attr">aplayerInject:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">per_page:</span> <span class="literal">true</span></span><br></pre></td></tr></tbody></table></figure><h3 id="插入Aplayer-html"><a href="#插入Aplayer-html" class="headerlink" title="插入Aplayer html"></a>插入Aplayer html</h3><p>把aplayer代码插入到主题配置文件的inject.bottom去</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">inject:</span></span><br><span class="line">  <span class="attr">head:</span></span><br><span class="line">  <span class="attr">bottom:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;div</span> <span class="string">class="aplayer</span> <span class="literal">no</span><span class="string">-destroy"</span> <span class="string">data-id="000PeZCQ1i4XVs"</span> <span class="string">data-server="tencent"</span> <span class="string">data-type="artist"</span> <span class="string">data-fixed="true"</span> <span class="string">data-mini="true"</span> <span class="string">data-listFolded="false"</span> <span class="string">data-order="random"</span> <span class="string">data-preload="none"</span> <span class="string">data-autoplay="true"</span> <span class="string">muted&gt;&lt;/div&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>id是自己分享的歌曲后由链接得到的id<br>server可选netease（网易云音乐），tencent（QQ音乐），kugou（酷狗音乐），xiami（虾米音乐），baidu（百度音乐）。<br>type可选song（歌曲），playlist（歌单），album（专辑），search（搜索关键字），artist（歌手）</p><p>如果你想切换页面时，音乐不会中断。请把主题配置文件的pjax设为true，在class里需添加no-destroy，这样防止切换页面时Aplayer被销毁</p><h3 id="UI-调整"><a href="#UI-调整" class="headerlink" title="UI 调整"></a>UI 调整</h3><p>按照上面的步骤设置完成后，浏览器左下角会出现Aplayer。打开文章页面时，你会发现打开Toc目录的按钮被遮挡了。我们需要修改CSS来改变按钮的位置。<br>向上调整</p><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#toggle-sidebar</span> {</span><br><span class="line">  <span class="attribute">bottom</span>: <span class="number">80px</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>在主题配置文件中，添加到inject去</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">inject:</span></span><br><span class="line">  <span class="attr">head:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">'&lt;style type="text/css"&gt;#toggle-sidebar {bottom: 80px}&lt;/style&gt;'</span></span><br></pre></td></tr></tbody></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;butterfly主题配置&quot;&gt;&lt;a href=&quot;#butterfly主题配置&quot; class=&quot;headerlink&quot; title=&quot;butterfly主题配置&quot;&gt;&lt;/a&gt;butterfly主题配置&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://butterfly</summary>
      
    
    
    
    <category term="博客相关" scheme="https://wenkex.gitee.io/categories/%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3/"/>
    
    
  </entry>
  
  <entry>
    <title>hexo-matery主题</title>
    <link href="https://wenkex.gitee.io/2022/101955848.html"/>
    <id>https://wenkex.gitee.io/2022/101955848.html</id>
    <published>2022-10-19T05:28:43.000Z</published>
    <updated>2022-10-19T08:48:45.235Z</updated>
    
    <content type="html"><![CDATA[<h1 id="matery主题配置"><a href="#matery主题配置" class="headerlink" title="matery主题配置"></a>matery主题配置</h1><h2 id="下载主题"><a href="#下载主题" class="headerlink" title="下载主题"></a>下载主题</h2><p>hexo-theme-matery 是一个采用 Material Design 和响应式设计的 Hexo 博客主题<br>去github下载解压缩后，将 hexo-theme-matery 的文件夹复制到 Hexo 的 themes 文件夹中即可。</p><h2 id="切换主题"><a href="#切换主题" class="headerlink" title="切换主题"></a>切换主题</h2><p>修改 Hexo 根目录下的_config.yml 的 theme 的值：<br>theme: hexo-theme-matery</p><h2 id="主题目录结构说明"><a href="#主题目录结构说明" class="headerlink" title="主题目录结构说明"></a>主题目录结构说明</h2><p>1.matery/layout下的.ejs文件是编写关于主页右上角分类，归档的<br>2.目录样式在：themes\Matery\layout_partial\post-detail-toc.ejs<br>3.如果有多语言支持需求，可以更改 themes/next/languages 下对应语言的翻译。</p><h2 id="medias个性化"><a href="#medias个性化" class="headerlink" title="medias个性化"></a>medias个性化</h2><p><a href="https://juejin.cn/post/6844904132608786446">参考</a></p><p>1.我先把banner 和 featureimages里的图片来了个大换血。不过这里我发现一个问题，壁纸尺寸必须和电脑显示屏的分辨率一样才能完美显示。比如我的电脑分辨率是1080*1920，那么我下载的壁纸也得是这个尺寸，不然浏览器渲染显示的时候会不好看。</p><p>2.接着我又把网站logo，avatars，favicon 也给换成了自己喜欢的图片<br><a href="http://www.uugai.com/">免费logo生成网站</a></p><h2 id="评论"><a href="#评论" class="headerlink" title="评论"></a>评论</h2><p>主题中内置了valine, miniValine, livere, gitment, gitalk, changyan评论<br>通过主题文件夹下的_config.yml文件中的相应属性进行设置<br>推荐使用valine和livere<br>这里重点说一下valine评论配置</p><figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">valine:</span></span><br><span class="line">  <span class="attr">on:</span> <span class="literal">true</span> <span class="comment"># 是否启用</span></span><br><span class="line">  <span class="attr">appid:</span> <span class="comment"># 你的appid --&gt; https://valine.js.org/quickstart.html，请阅读这个获取appid和appkey</span></span><br><span class="line">  <span class="attr">appkey:</span> <span class="comment"># 你的key</span></span><br><span class="line">  <span class="attr">avatar:</span> <span class="string">''</span> <span class="comment"># 匿名者头像选项 https://valine.js.org/avatar.html 访客的头像,最好启用下面的`requiredFields`中的邮箱必填，填写qq邮箱，头像会变成qq头像</span></span><br><span class="line">  <span class="attr">placeholder:</span> <span class="string">'客官，说点什么吧'</span> <span class="comment"># 评论内容输入框的 placeholder</span></span><br><span class="line">  <span class="attr">master:</span> <span class="string">'xxxxxx'</span> <span class="comment"># 博主标签识别，博主邮箱md5 可以去md5加密网站，例如 https://md5jiami.51240.com/ ，将自己的邮箱输入， 得到 32位小写 的字符串填入这里</span></span><br><span class="line">  <span class="attr">friends:</span> [<span class="string">'xxxxxxx'</span>, <span class="string">'xxxxxx'</span>] <span class="comment"># 小伙伴的 邮箱md5， 是个数组</span></span><br><span class="line">  <span class="attr">requiredFields:</span> [<span class="string">'nick'</span>, <span class="string">'mail'</span>] <span class="comment"># 设置必填项 ['nick', 'mail'] nick为昵称必填， mail为邮箱必填, 空数组，则不校验</span></span><br><span class="line">  <span class="attr">backgroundImg:</span> <span class="string">'/medias/comment-bg.gif'</span> <span class="comment"># 右下角背景图片, or http://xxx.gif</span></span><br><span class="line">  <span class="attr">backgroundColor:</span> <span class="string">'rgba(255,255,255,0.9)'</span> <span class="comment"># 背景颜色, 0.9标是透明度</span></span><br></pre></td></tr></tbody></table></figure><h2 id="打开腾讯兔小巢后台反馈"><a href="#打开腾讯兔小巢后台反馈" class="headerlink" title="打开腾讯兔小巢后台反馈"></a>打开腾讯兔小巢后台反馈</h2><p>在主题配置文件更改，加入自己注册后得到的产品Id就可以</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 腾讯兔小巢，见https://txc.qq.com/</span><br><span class="line">tuxiaochao:</span><br><span class="line">  enable: true</span><br><span class="line">  productId: 371566</span><br></pre></td></tr></tbody></table></figure><h2 id="添加-Tidio-在线聊天功能"><a href="#添加-Tidio-在线聊天功能" class="headerlink" title="添加 Tidio 在线聊天功能"></a>添加 Tidio 在线聊天功能</h2><p>前往 <a href="https://www.tidio.com/">Tidio</a> 官网注册并且获取 Public Key，并将 Public Key 填入主题的 _config.yml 文件中。</p><h2 id="百度优化"><a href="#百度优化" class="headerlink" title="百度优化"></a>百度优化</h2><p>登录百度搜索资源平台， 登录成功之后在 用户中心 –&gt; 站点管理 页面中点击添加网站，按提示操作。<br>因为我是部署在gitee上的，刚开始我选择的是文件验证方式，但一直提示验证文件内容不符，因此选择了HTML标签验证<br>复制的标签增加在<br><code>\themes\Chic\layout\_partial的head.ejs的&lt;head&gt;与&nbsp;&lt;/head&gt;标签之间</code><br>经过以上步骤，百度已经知道有我们网站的存在了，但是百度还不知道我们的网站上有什么内容，所以要向百度推送我们的内容。hexo-theme-matery主题已经内置了自动推送的方式， 检查themes/hexo-theme-matery/_config.yml文件中如下配置:<br><code># 百度搜索资源平台提交链接baiduPush: true</code><br>自动推送的JS代码部署在站点的每一个页面源代码中，当页面在每次被浏览时，链接就会被自动推送给百度。</p><h2 id="添加百度统计"><a href="#添加百度统计" class="headerlink" title="添加百度统计"></a>添加百度统计</h2><p><a href="https://blog.csdn.net/mqdxiaoxiao/article/details/93137447?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522163988568316780271556025%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.%2522%257D&amp;request_id=163988568316780271556025&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_ecpm_v1~rank_v31_ecpm-2-93137447.pc_search_insert_es_download&amp;utm_term=hexo+%E6%B7%BB%E5%8A%A0+baidu+Analytics+%E9%85%8D%E7%BD%AE&amp;spm=1018.2226.3001.4187">参考</a></p><p>1.<a href="https://tongji.baidu.com/web/10000419928/homepage/index">注册百度统计账号</a><br>2.添加博客域名<br>3.获取Baidu Analytics ID<br>然后进入代码管理-&gt;代码获取<br>可以看到如下一段javascript代码，这段代码本来是要手动嵌入到网页中的，但是Hexo已经帮我们嵌入了，所以我们自诩配置Baidu Analytics ID即可，这个ID就是下面代码的hm.js?后面那一串，先复制一下</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">var</span> _hmt = _hmt || [];</span><br><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>{</span><br><span class="line">  <span class="keyword">var</span> hm = <span class="built_in">document</span>.createElement(<span class="string">"script"</span>);</span><br><span class="line">  hm.src = <span class="string">"https://hm.baidu.com/hm.js?5b6ae75148041557ddd693925322myid"</span>;</span><br><span class="line">  <span class="keyword">var</span> s = <span class="built_in">document</span>.getElementsByTagName(<span class="string">"script"</span>)[<span class="number">0</span>]; </span><br><span class="line">  s.parentNode.insertBefore(hm, s);</span><br><span class="line">})();</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></tbody></table></figure><p>4.配置Baidu Analytics ID<br>打开主题的配置文件，然后搜索Baidu Analytics ID，找到如下配置项：</p><figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Baidu Analytics ID</span></span><br><span class="line"><span class="attr">baidu_analytics:</span> <span class="string">5b6ae75148041557ddd69392532288de</span></span><br></pre></td></tr></tbody></table></figure><p>去掉baidu_analytics前面的#号开启百度统计，值设置成刚在百度统计后台复制的Baidu Analytics ID</p><h2 id="添加导航页"><a href="#添加导航页" class="headerlink" title="添加导航页"></a>添加导航页</h2><p><a href="https://yafine-blog.cn/posts/e925.html">参考</a></p><p>1.首先新建页面，执行下面的命令</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page navigate</span><br></pre></td></tr></tbody></table></figure><p>2.修改 navigate 目录下的 index.md 的格式</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 导航</span><br><span class="line">date: 2020-05-09 11:19:14</span><br><span class="line">type: "navigate"</span><br><span class="line"><span class="section">layout: "navigate"</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></tbody></table></figure><p>3.在主题配置文件中添加导航</p><figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># main menu navigation url and icon</span></span><br><span class="line"><span class="comment"># 配置菜单导航的名称、路径和图标icon.</span></span><br><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">Index:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">/</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-home</span></span><br><span class="line">  <span class="string">统计:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">/</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-sitemap</span></span><br><span class="line">    <span class="attr">children:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">分类</span></span><br><span class="line">        <span class="attr">url:</span> <span class="string">/categories</span></span><br><span class="line">        <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-bookmark</span> </span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">标签</span></span><br><span class="line">        <span class="attr">url:</span> <span class="string">/tags</span></span><br><span class="line">        <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-tags</span>     </span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">归档</span></span><br><span class="line">        <span class="attr">url:</span> <span class="string">/archives</span></span><br><span class="line">        <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-archive</span></span><br><span class="line">  <span class="attr">About:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">/about</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-address-card</span></span><br><span class="line">  <span class="attr">Contact:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">/contact</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-comments</span></span><br><span class="line">  <span class="string">友人帐:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">/friends</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-share-alt</span></span><br><span class="line">  <span class="string">赞助墙:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">/sponsor</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">fa</span> <span class="string">fa-credit-card</span></span><br><span class="line">  <span class="string">导航:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">/navigate</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-location-arrow</span></span><br></pre></td></tr></tbody></table></figure><p>4.在 matery/layout 下新建 navigate.ejs</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br></pre></td><td class="code"><pre><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"navi-height bg-cover pd-header "</span>&gt;</span><br><span class="line">    <span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">" link-box container"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="comment">&lt;!-- 搜索框 --&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"baidu baidu-2 large-screen"</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">form</span> <span class="attr">name</span>=<span class="string">"f"</span> <span class="attr">action</span>=<span class="string">"https://www.baidu.com/"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"Select-2"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"Select-box-2"</span> <span class="attr">id</span>=<span class="string">"baidu"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">style</span>=<span class="string">"height: 46px;"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"this_s"</span>&gt;</span>百 · 度<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"bing_s"</span>&gt;</span>必 · 应<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"google_s"</span>&gt;</span>谷 · 歌<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"baidu_s"</span>&gt;</span>百 · 度<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span> <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">"wd"</span> <span class="attr">id</span>=<span class="string">"kw-2"</span> <span class="attr">maxlength</span>=<span class="string">"100"</span> <span class="attr">autocomplete</span>=<span class="string">"off"</span> <span class="attr">type</span>=<span class="string">"text"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"qingkong"</span> <span class="attr">id</span>=<span class="string">"qingkong"</span> <span class="attr">title</span>=<span class="string">"清 · 空"</span> <span class="attr">style</span>=<span class="string">"display: none;"</span>&gt;</span>x<span class="tag">&lt;/<span class="name">div</span>&gt;</span> <span class="tag">&lt;<span class="name">input</span> <span class="attr">value</span>=<span class="string">"搜 · 索"</span></span></span></span><br><span class="line"><span class="tag"><span class="xml">                    <span class="attr">id</span>=<span class="string">"su-2"</span> <span class="attr">type</span>=<span class="string">"submit"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"keylist"</span>&gt;</span><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span> <span class="comment">&lt;!-- 链接 --&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row tags-posts "</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col s12 m6 l4 friend-div"</span> <span class="attr">data-aos</span>=<span class="string">"zoom-in-up"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"card"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"jj-list-tit"</span>&gt;</span>娱乐 · 影视<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"jj-list-con"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://www.jd.com/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>京东<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://www.taobao.com/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>淘宝<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://www.tmall.com/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>天猫<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://v.qq.com/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>腾讯视频<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.iqiyi.com/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>爱奇艺<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://www.bilibili.com/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>哔哩哔哩<span class="tag">&lt;/<span class="name">a</span>&gt;</span> <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://music.163.com/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>网易云音乐<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://y.qq.com/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>QQ音乐<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.kugou.com/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>酷狗音乐<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col s12 m6 l4 friend-div"</span> <span class="attr">data-aos</span>=<span class="string">"zoom-in-up"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"card"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"jj-list-tit"</span>&gt;</span>社区 · Code<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"jj-list-con"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://www.mobaijun.com/contact/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>留言<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://github.com/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>GitHub<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://coding.net/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>Coding<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://juejin.im/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>掘金<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://gitee.com/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>码云<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://www.csdn.net/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>CSDN<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://www.jianshu.com/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>简书<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://segmentfault.com/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>思否<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://cloud.tencent.com/developer/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>云+社区<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col s12 m6 l4 friend-div"</span> <span class="attr">data-aos</span>=<span class="string">"zoom-in-up"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"card"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"jj-list-tit"</span>&gt;</span>实用 · 工具<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"jj-list-con"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://mdnice.com/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>Nice编辑器<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://translate.google.cn/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>谷歌翻译<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://www.uupoop.com/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>在线PS<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://www.processon.com/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>思维导图<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://wallhaven.cc/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>超清壁纸<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://cli.im/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>二维码<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.yinfans.me/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>音范思<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://www.52pojie.cn/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>吾爱破解<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://my.openwrite.cn/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>OW分发<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col s12 m6 l4 friend-div"</span> <span class="attr">data-aos</span>=<span class="string">"zoom-in-up"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"card"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"jj-list-tit"</span>&gt;</span>编程 · 学习<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"jj-list-con"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://www.oschina.net/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>开源中国<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://htmldog.com/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>HTML狗<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://www.icourse163.org/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>中国大学慕课<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://www.imooc.com/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>慕课网<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.wxapp-union.com/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>小程序<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://www.runoob.com/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>菜鸟教程<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://blog.51cto.com/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>51CTO<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://www.shiyanlou.com/library/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>实验楼<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://spring.io/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>Spring<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col s12 m6 l4 friend-div"</span> <span class="attr">data-aos</span>=<span class="string">"zoom-in-up"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"card"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"jj-list-tit"</span>&gt;</span>资讯 · 趋势<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"jj-list-con"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://www.huxiu.com/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>虎嗅<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://insights.stackoverflow.com/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>技术调查<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.asciiworld.com/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>摸鱼<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://sspai.com/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>少数派<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://zh.wikihow.com/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>WikeHom<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://www.awesomes.cn/rank?sort=hot"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>前端趋势<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://github-trending.com/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>GitHub趋势<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://www.tiobe.com/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>编程趋势<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://trends.google.com/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>Google趋势<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col s12 m6 l4 friend-div"</span> <span class="attr">data-aos</span>=<span class="string">"zoom-in-up"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"card"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"jj-list-tit"</span>&gt;</span>搜索 · 其他<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"jj-list-con"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://ac.scmor.com/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>谷歌镜像<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.pansoso.com/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>网盘搜索<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://tool.mkblog.cn/music/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>音乐搜索<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://www.dytt8.net/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>电影天堂<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://carbon.now.sh/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>代码图片<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://www.zhipin.com/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>Boos<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://fontawesome.com/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>图标库<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://www.qvdv.com/tools/qvdv-guid.html"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>在线工具<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://zhongguose.com/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>中国色<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"> <span class="comment">/*选择搜索引擎*/</span> $(<span class="string">'.Select-box ul'</span>).hover(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{ $(<span class="built_in">this</span>).css(<span class="string">'height'</span>, <span class="string">'auto'</span>) }, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{ $(<span class="built_in">this</span>).css(<span class="string">'height'</span>, <span class="string">'40px'</span>) }); $(<span class="string">'.Select-box-2 ul'</span>).hover(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{ $(<span class="built_in">this</span>).css(<span class="string">'height'</span>, <span class="string">'auto'</span>) }, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{ $(<span class="built_in">this</span>).css(<span class="string">'height'</span>, <span class="string">'46px'</span>) }); $(<span class="string">'.Select-box li'</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{ <span class="keyword">var</span> _tihs = $(<span class="built_in">this</span>).attr(<span class="string">'class'</span>); <span class="keyword">var</span> _html = $(<span class="built_in">this</span>).html(); <span class="keyword">if</span> (_tihs == <span class="string">'baidu_s'</span>) { _tihs = <span class="string">'https://www.baidu.com/s'</span>; _name = <span class="string">'wd'</span>; } <span class="keyword">if</span> (_tihs == <span class="string">'google_s'</span>) { _tihs = <span class="string">'https://www.google.com/search'</span>; _name = <span class="string">'q'</span>; } <span class="keyword">if</span> (_tihs == <span class="string">'bing_s'</span>) { _tihs = <span class="string">'https://www.bing.com/search'</span>; _name = <span class="string">'q'</span>; } $(<span class="string">'.baidu form'</span>).attr(<span class="string">'action'</span>, _tihs); $(<span class="string">'.this_s'</span>).html(_html); $(<span class="string">'#kw'</span>).attr(<span class="string">'name'</span>, _name); $(<span class="string">'.Select-box ul'</span>).css(<span class="string">'height'</span>, <span class="string">'40px'</span>) }); $(<span class="string">'.Select-box-2 li'</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{ <span class="keyword">var</span> _tihs = $(<span class="built_in">this</span>).attr(<span class="string">'class'</span>); <span class="keyword">var</span> _html = $(<span class="built_in">this</span>).html(); <span class="keyword">if</span> (_tihs == <span class="string">'baidu_s'</span>) { _tihs = <span class="string">'https://www.baidu.com/s'</span>; _name = <span class="string">'wd'</span>; } <span class="keyword">if</span> (_tihs == <span class="string">'google_s'</span>) { _tihs = <span class="string">'https://www.google.com/search'</span>; _name = <span class="string">'q'</span>; } <span class="keyword">if</span> (_tihs == <span class="string">'bing_s'</span>) { _tihs = <span class="string">'https://www.bing.com/search'</span>; _name = <span class="string">'q'</span>; } $(<span class="string">'.baidu form'</span>).attr(<span class="string">'action'</span>, _tihs); $(<span class="string">'.this_s'</span>).html(_html); $(<span class="string">'#kw-2'</span>).attr(<span class="string">'name'</span>, _name); $(<span class="string">'.Select-box-2 ul'</span>).css(<span class="string">'height'</span>, <span class="string">'48px'</span>) }); <span class="comment">//清空输入框内容 $('.qingkong').click(function () { cls(); $(this).css('display', 'none') }); function cls() { var sum = 0; var t = document.getElementsByTagName("INPUT"); for (var i = 0; i &lt; t.length; i++) { if (t[i].type == 'text') { ++sum; t[i].value = "";//清空 } } } //清空输入框按钮的显示和隐藏 function if_btn() { var btn_obj = document.getElementById("kw") || document.getElementById("kw-2"); var cls_btn = document.getElementById("qingkong"); var btn_obj_val; var times; //当元素获得焦点时 if (btn_obj == '' || btn_obj == null) { return false; //如果没有找到这个元素，则将函数返回，不继续执行 } btn_obj.onfocus = function () { times = setInterval(function () { btn_obj_val = btn_obj.value; if (btn_obj_val != 0) { cls_btn.style.display = "block"; } else { cls_btn.style.display = "none"; } }, 200); } //元素失去焦点时 btn_obj.onblur = function () { clearInterval(times); } } </span></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span></span><br><span class="line"><span class="css"><span class="xml">    * {</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">margin</span>: <span class="number">0</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">padding</span>: <span class="number">0</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">font-family</span>: <span class="string">"微软雅黑"</span></span></span></span><br><span class="line"><span class="css"><span class="xml">    }</span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="selector-tag">ul</span>,<span class="selector-tag">li</span>,<span class="selector-tag">h1</span>,<span class="selector-tag">h2</span>,<span class="selector-tag">h3</span>,<span class="selector-tag">h4</span>,<span class="selector-tag">h5</span>,<span class="selector-tag">h6</span>,<span class="selector-tag">p</span>,<span class="selector-tag">form</span>,<span class="selector-tag">dl</span>,<span class="selector-tag">dt</span>,<span class="selector-tag">dd</span> {</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">margin</span>: <span class="number">0px</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">padding</span>: <span class="number">0px</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">font-size</span>: <span class="number">14px</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">font-weight</span>: normal;</span></span></span><br><span class="line"><span class="css"><span class="xml">    }</span></span></span><br><span class="line"><span class="css"><span class="xml"></span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="selector-tag">img</span> {</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">border-style</span>: none;</span></span></span><br><span class="line"><span class="css"><span class="xml">    }</span></span></span><br><span class="line"><span class="css"><span class="xml"></span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="selector-tag">li</span> {</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">list-style</span>: none;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">float</span>: left</span></span></span><br><span class="line"><span class="css"><span class="xml">    }</span></span></span><br><span class="line"><span class="css"><span class="xml"></span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="selector-tag">a</span> {</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">text-decoration</span>: none</span></span></span><br><span class="line"><span class="css"><span class="xml">    }</span></span></span><br><span class="line"><span class="css"><span class="xml"></span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="selector-class">.card</span> {</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">25</span>, <span class="number">240</span>, <span class="number">229</span>, <span class="number">0</span>);</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">width</span>: <span class="number">96%</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">margin-left</span>: <span class="number">2%</span></span></span></span><br><span class="line"><span class="css"><span class="xml">    }</span></span></span><br><span class="line"><span class="css"><span class="xml"></span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="selector-class">.baidu</span> {</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">float</span>: left;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">margin-left</span>: <span class="number">100px</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">    }</span></span></span><br><span class="line"><span class="css"><span class="xml"></span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="selector-class">.baidu</span> <span class="selector-tag">form</span> {</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">position</span>: relative</span></span></span><br><span class="line"><span class="css"><span class="xml">    }</span></span></span><br><span class="line"><span class="css"><span class="xml"></span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="selector-class">.Select-box</span> <span class="selector-tag">ul</span> {</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">height</span>: <span class="number">40px</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">position</span>: absolute;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">left</span>: -<span class="number">1px</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">top</span>: <span class="number">0px</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">z-index</span>: <span class="number">9999</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">background</span>: <span class="number">#FFF</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">border-top</span>: none;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">overflow</span>: hidden</span></span></span><br><span class="line"><span class="css"><span class="xml">    }</span></span></span><br><span class="line"><span class="css"><span class="xml"></span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="selector-class">.Select-box</span> <span class="selector-tag">li</span> {</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">width</span>: <span class="number">60px</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">line-height</span>: <span class="number">40px</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">font-size</span>: <span class="number">14px</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">color</span>: <span class="number">#484848</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">border</span>: <span class="number">0</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">cursor</span>: pointer;</span></span></span><br><span class="line"><span class="css"><span class="xml">    }</span></span></span><br><span class="line"><span class="css"><span class="xml"></span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="selector-class">.Select-box</span> <span class="selector-tag">li</span><span class="selector-pseudo">:hover</span> {</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">background</span>: <span class="number">#3385ff</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">color</span>: <span class="number">#FFF</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">    }</span></span></span><br><span class="line"><span class="css"><span class="xml"></span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="selector-class">.Select-box</span> <span class="selector-class">.this_s</span> {</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">color</span>: <span class="number">#317ef3</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">    }</span></span></span><br><span class="line"><span class="css"><span class="xml"></span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="selector-class">.Select-box</span> <span class="selector-class">.this_s</span><span class="selector-pseudo">:hover</span> {</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">background</span>: <span class="number">#FFF</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">color</span>: <span class="number">#317ef3</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">    }</span></span></span><br><span class="line"><span class="css"><span class="xml"></span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="selector-class">.qingkong</span> {</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">position</span>: absolute;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">right</span>: <span class="number">120px</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">top</span>: <span class="number">12px</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">width</span>: <span class="number">18px</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">height</span>: <span class="number">18px</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.1</span>);</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">border-radius</span>: <span class="number">18px</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">line-height</span>: <span class="number">16px</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">color</span>: <span class="number">#666666</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">cursor</span>: pointer;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">text-align</span>: center;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">font-size</span>: <span class="number">14px</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">display</span>: none;</span></span></span><br><span class="line"><span class="css"><span class="xml">    }</span></span></span><br><span class="line"><span class="css"><span class="xml"></span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="selector-class">.qingkong</span><span class="selector-pseudo">:hover</span> {</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.2</span>);</span></span></span><br><span class="line"><span class="css"><span class="xml">    }</span></span></span><br><span class="line"><span class="css"><span class="xml"></span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="selector-class">.qingkong</span><span class="selector-pseudo">:active</span> {</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.3</span>);</span></span></span><br><span class="line"><span class="css"><span class="xml">    }</span></span></span><br><span class="line"><span class="css"><span class="xml"></span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="selector-class">.baidu-2</span> {</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">width</span>: <span class="number">100%</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">height</span>: <span class="number">110px</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">margin</span>: <span class="number">0</span> auto;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">background</span>: none;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">padding-top</span>: <span class="number">50px</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">    }</span></span></span><br><span class="line"><span class="css"><span class="xml"></span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="selector-class">.baidu-2</span> <span class="selector-tag">form</span> {</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">width</span>: <span class="number">520px</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">margin</span>: <span class="number">0</span> auto;</span></span></span><br><span class="line"><span class="css"><span class="xml">    }</span></span></span><br><span class="line"><span class="css"><span class="xml"></span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="selector-class">.baidu-2</span> <span class="selector-tag">input</span> {</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">padding</span>: <span class="number">13px</span> <span class="number">8px</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">opacity</span>: <span class="number">0.9</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">font-size</span>: <span class="number">15px</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">    }</span></span></span><br><span class="line"><span class="css"><span class="xml"></span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="selector-id">#Select-2</span> {</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">float</span>: left;</span></span></span><br><span class="line"><span class="css"><span class="xml">    }</span></span></span><br><span class="line"><span class="css"><span class="xml"></span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="selector-class">.Select-box-2</span> {</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">text-align</span>: center;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">float</span>: left;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">position</span>: relative;</span></span></span><br><span class="line"><span class="css"><span class="xml">    }</span></span></span><br><span class="line"><span class="css"><span class="xml"></span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="selector-class">.Select-box-2</span> <span class="selector-tag">ul</span> {</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">height</span>: <span class="number">46px</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">position</span>: absolute;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">left</span>: <span class="number">0px</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">top</span>: <span class="number">1px</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">z-index</span>: <span class="number">9999</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.9</span>);</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">border-top</span>: none;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">overflow</span>: hidden</span></span></span><br><span class="line"><span class="css"><span class="xml">    }</span></span></span><br><span class="line"><span class="css"><span class="xml"></span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="selector-class">.Select-box-2</span> <span class="selector-tag">li</span> {</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">width</span>: <span class="number">60px</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">line-height</span>: <span class="number">46px</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">font-size</span>: <span class="number">15px</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">color</span>: <span class="number">#484848</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">border</span>: <span class="number">0</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">cursor</span>: pointer;</span></span></span><br><span class="line"><span class="css"><span class="xml">    }</span></span></span><br><span class="line"><span class="css"><span class="xml"></span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="selector-class">.Select-box-2</span> <span class="selector-tag">li</span><span class="selector-pseudo">:hover</span> {</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">background</span>: <span class="number">#3385ff</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">color</span>: <span class="number">#FFF</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">    }</span></span></span><br><span class="line"><span class="css"><span class="xml"></span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="selector-class">.Select-box-2</span> <span class="selector-class">.this_s</span> {</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">color</span>: <span class="number">#317ef3</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">    }</span></span></span><br><span class="line"><span class="css"><span class="xml"></span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="selector-class">.Select-box-2</span> <span class="selector-class">.this_s</span><span class="selector-pseudo">:hover</span> {</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">background</span>: none;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">color</span>: <span class="number">#317ef3</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">    }</span></span></span><br><span class="line"><span class="css"><span class="xml"></span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="selector-id">#kw-2</span> {</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">width</span>: <span class="number">335px</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">outline</span>: <span class="number">0</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.2</span>);</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">color</span>: <span class="number">#000000</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">padding-left</span>: <span class="number">70px</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">font-weight</span>: bold;</span></span></span><br><span class="line"><span class="css"><span class="xml">    }</span></span></span><br><span class="line"><span class="css"><span class="xml"></span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="comment">/*修改搜索框样式*/</span></span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="selector-id">#su-2</span> {</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">width</span>: <span class="number">90px</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">background</span>: blue;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">border</span>: none;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">border-top</span>: <span class="number">#3385ff</span> <span class="number">1px</span> solid;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#2d78f4</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">color</span>: <span class="number">#FFF</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">cursor</span>: pointer;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="comment">/*去轮廓阴影*/</span></span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">outline</span>: none;</span></span></span><br><span class="line"><span class="css"><span class="xml">    }</span></span></span><br><span class="line"><span class="css"><span class="xml"></span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="comment">/*光标移动到搜索框颜色*/</span></span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="selector-id">#su-2</span><span class="selector-pseudo">:hover</span> {</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">background</span>: blue;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid blue;</span></span></span><br><span class="line"><span class="css"><span class="xml">    }</span></span></span><br><span class="line"><span class="css"><span class="xml"></span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="selector-id">#su-2</span><span class="selector-pseudo">:active</span> {</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">background</span>: blue;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">box-shadow</span>: inset <span class="number">1px</span> <span class="number">1px</span> <span class="number">3px</span> blue;</span></span></span><br><span class="line"><span class="css"><span class="xml">        -webkit-<span class="attribute">box-shadow</span>: inset <span class="number">1px</span> <span class="number">1px</span> <span class="number">3px</span> blue;</span></span></span><br><span class="line"><span class="css"><span class="xml">    }</span></span></span><br><span class="line"><span class="css"><span class="xml"></span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="selector-class">.jj-list-tit</span> {</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">font-size</span>: <span class="number">16px</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">line-height</span>: <span class="number">25px</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">color</span>: <span class="number">#ffffff</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">width</span>: <span class="number">100%</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">padding-left</span>: <span class="number">38.5%</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">    }</span></span></span><br><span class="line"><span class="css"><span class="xml"></span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="selector-class">.jj-list-con</span> {</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">overflow</span>: hidden;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">margin</span>: <span class="number">0</span> auto</span></span></span><br><span class="line"><span class="css"><span class="xml">    }</span></span></span><br><span class="line"><span class="css"><span class="xml"></span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="comment">/*控制网站列表间距*/</span></span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="selector-class">.jj-list-con</span> <span class="selector-tag">li</span> {</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">width</span>: <span class="number">31.333%</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">margin</span>: <span class="number">1%</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">    }</span></span></span><br><span class="line"><span class="css"><span class="xml"></span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="selector-class">.link-3</span> {</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">display</span>: block;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, .<span class="number">35</span>);</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">color</span>: <span class="number">#FFF</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">font-size</span>: <span class="number">13px</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">text-align</span>: center;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">line-height</span>: <span class="number">35px</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">padding</span>: <span class="number">4px</span> <span class="number">0</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">border-radius</span>: <span class="number">2px</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">transition</span>: all <span class="number">0.2s</span></span></span></span><br><span class="line"><span class="css"><span class="xml">    }</span></span></span><br><span class="line"><span class="css"><span class="xml"></span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="selector-class">.link-3</span><span class="selector-pseudo">:hover</span> {</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, .<span class="number">45</span>);</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">font-size</span>: <span class="number">15px</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">font-weight</span>: bold</span></span></span><br><span class="line"><span class="css"><span class="xml">    }</span></span></span><br><span class="line"><span class="css"><span class="xml"></span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="comment">/*1栏 小于584*/</span></span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="keyword">@media</span> <span class="keyword">only</span> screen <span class="keyword">and</span> (<span class="attribute">max-width</span>: <span class="number">584px</span>) {</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="selector-class">.navi-height</span> {</span></span></span><br><span class="line"><span class="css"><span class="xml">            <span class="attribute">height</span>: <span class="number">1300px</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        }</span></span></span><br><span class="line"><span class="css"><span class="xml"></span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="selector-class">.link-box</span> {</span></span></span><br><span class="line"><span class="css"><span class="xml">            <span class="attribute">margin-top</span>: <span class="number">5%</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        }</span></span></span><br><span class="line"><span class="css"><span class="xml"></span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="selector-class">.large-screen</span> {</span></span></span><br><span class="line"><span class="css"><span class="xml">            <span class="attribute">display</span>: none;</span></span></span><br><span class="line"><span class="css"><span class="xml">        }</span></span></span><br><span class="line"><span class="css"><span class="xml">    }</span></span></span><br><span class="line"><span class="css"><span class="xml"></span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="comment">/* 2栏 大于584 小于993px */</span></span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="keyword">@media</span> <span class="keyword">only</span> screen <span class="keyword">and</span> (<span class="attribute">min-width</span>: <span class="number">584px</span>) <span class="keyword">and</span> (<span class="attribute">max-width</span>: <span class="number">993px</span>) {</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="selector-class">.navi-height</span> {</span></span></span><br><span class="line"><span class="css"><span class="xml">            <span class="attribute">height</span>: <span class="number">800px</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        }</span></span></span><br><span class="line"><span class="css"><span class="xml"></span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="selector-class">.link-box</span> {</span></span></span><br><span class="line"><span class="css"><span class="xml">            <span class="attribute">margin-top</span>: <span class="number">5%</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        }</span></span></span><br><span class="line"><span class="css"><span class="xml"></span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="selector-class">.large-screen</span> {</span></span></span><br><span class="line"><span class="css"><span class="xml">            <span class="attribute">display</span>: none;</span></span></span><br><span class="line"><span class="css"><span class="xml">        }</span></span></span><br><span class="line"><span class="css"><span class="xml">    }</span></span></span><br><span class="line"><span class="css"><span class="xml"></span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="comment">/*3栏 大于993px*/</span></span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="keyword">@media</span> <span class="keyword">only</span> screen <span class="keyword">and</span> (<span class="attribute">min-width</span>: <span class="number">993px</span>) {</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="selector-class">.navi-height</span> {</span></span></span><br><span class="line"><span class="css"><span class="xml">            <span class="attribute">position</span>: absolute;</span></span></span><br><span class="line"><span class="css"><span class="xml">            <span class="attribute">width</span>: <span class="number">100%</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">            <span class="attribute">height</span>: <span class="number">100%</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        }</span></span></span><br><span class="line"><span class="css"><span class="xml">    }</span></span></span><br><span class="line"><span class="css"><span class="xml"></span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="comment">/* 隐藏footer */</span></span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="selector-class">.page-footer</span> {</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">display</span>: none;</span></span></span><br><span class="line"><span class="css"><span class="xml">    }</span></span></span><br><span class="line"><span class="css"><span class="xml"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br><span class="line"><span class="xml">&lt;% if (theme.banner.enable) { %&gt;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="comment">// 每天切换 banner 图.  Switch banner image every day.</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="keyword">var</span> bannerUrl = <span class="string">"&lt;%- theme.jsDelivr.url %&gt;&lt;%- url_for('/medias/banner/') %&gt;"</span> + <span class="keyword">new</span> <span class="built_in">Date</span>().getDay() + <span class="string">'.jpg'</span>;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    $(<span class="string">'.bg-cover'</span>).css(<span class="string">'background-image'</span>, <span class="string">'url('</span> + bannerUrl + <span class="string">')'</span>);</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml">&lt;% } else { %&gt;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">    $(<span class="string">'.bg-cover'</span>).css(<span class="string">'background-image'</span>, <span class="string">'url(&lt;%- theme.jsDelivr.url %&gt;&lt;%- url_for('</span>/medias/banner/<span class="number">0.</span>jpg<span class="string">') %&gt;)'</span>);</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml">&lt;% } %&gt;</span></span><br></pre></td></tr></tbody></table></figure><h2 id="新增加载动画"><a href="#新增加载动画" class="headerlink" title="新增加载动画"></a>新增加载动画</h2><p><a href="https://juejin.cn/post/6844904145250598919">参考</a></p><p>1.在 Matery 主题配置文件 _config.yml 中新增配置属性 preloader。</p><figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 是否开启页面加载动画 true 开启，false 关闭</span></span><br><span class="line"><span class="attr">preloader:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>2.在 Matery 主题目录 /layout/_widget 下新增文件 loading.ejs，将以下内容写入 loading.ejs。</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;% <span class="keyword">if</span> (theme.preloader.enable) { %&gt;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"loading-box"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"loading-left-bg"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"loading-right-bg"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"spinner-box"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"configure-border-1"</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"configure-core"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"configure-border-2"</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"configure-core"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"loading-word"</span>&gt;</span>加载中...<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="built_in">window</span>.addEventListener(<span class="string">'load'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="built_in">document</span>.body.style.overflow = <span class="string">'auto'</span>;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="built_in">document</span>.getElementById(<span class="string">'loading-box'</span>).classList.add(<span class="string">"loaded"</span>)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    }, <span class="literal">false</span>)</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&lt;% } %&gt;</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>3.接着在 Matery 主题目录 /css 下新增 loading.css ，并将以下内容写入 loading.css。</p><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#loading-box</span> <span class="selector-class">.loading-left-bg</span>,</span><br><span class="line"><span class="selector-id">#loading-box</span> <span class="selector-class">.loading-right-bg</span> {</span><br><span class="line">  <span class="attribute">position</span>: fixed;</span><br><span class="line">  <span class="attribute">z-index</span>: <span class="number">1000</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#37474f</span>;</span><br><span class="line">  <span class="attribute">transition</span>: all <span class="number">0.5s</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#loading-box</span> <span class="selector-class">.loading-right-bg</span> {</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#loading-box</span> &gt; <span class="selector-class">.spinner-box</span> {</span><br><span class="line">  <span class="attribute">position</span>: fixed;</span><br><span class="line">  <span class="attribute">z-index</span>: <span class="number">1001</span>;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">justify-content</span>: center;</span><br><span class="line">  <span class="attribute">align-items</span>: center;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100vh</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#loading-box</span> <span class="selector-class">.spinner-box</span> <span class="selector-class">.configure-border-1</span> {</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">3px</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">115px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">115px</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#ffab91</span>;</span><br><span class="line">  <span class="attribute">animation</span>: configure-clockwise <span class="number">3s</span> ease-in-out <span class="number">0s</span> infinite alternate;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#loading-box</span> <span class="selector-class">.spinner-box</span> <span class="selector-class">.configure-border-2</span> {</span><br><span class="line">  <span class="attribute">left</span>: -<span class="number">115px</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">3px</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">115px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">115px</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgb</span>(<span class="number">63</span>, <span class="number">249</span>, <span class="number">220</span>);</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">45deg</span>);</span><br><span class="line">  <span class="attribute">animation</span>: configure-xclockwise <span class="number">3s</span> ease-in-out <span class="number">0s</span> infinite alternate;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#loading-box</span> <span class="selector-class">.spinner-box</span> <span class="selector-class">.loading-word</span> {</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#ffffff</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">0.8rem</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#loading-box</span> <span class="selector-class">.spinner-box</span> <span class="selector-class">.configure-core</span> {</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#37474f</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">div</span><span class="selector-class">.loaded</span> <span class="selector-tag">div</span><span class="selector-class">.loading-left-bg</span> {</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">100%</span>, <span class="number">0</span>);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">div</span><span class="selector-class">.loaded</span> <span class="selector-tag">div</span><span class="selector-class">.loading-right-bg</span> {</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">100%</span>, <span class="number">0</span>);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">div</span><span class="selector-class">.loaded</span> <span class="selector-tag">div</span><span class="selector-class">.spinner-box</span> {</span><br><span class="line">  <span class="attribute">display</span>: none <span class="meta">!important</span>; </span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">@keyframes</span> configure-clockwise {</span><br><span class="line">  <span class="number">0%</span> {</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">0</span>);</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="number">25%</span> {</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">90deg</span>);</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="number">50%</span> {</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">180deg</span>);</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="number">75%</span> {</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">270deg</span>);</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="number">100%</span> {</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">360deg</span>);</span><br><span class="line">  }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">@keyframes</span> configure-xclockwise {</span><br><span class="line">  <span class="number">0%</span> {</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">45deg</span>);</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="number">25%</span> {</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotate</span>(-<span class="number">45deg</span>);</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="number">50%</span> {</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotate</span>(-<span class="number">135deg</span>);</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="number">75%</span> {</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotate</span>(-<span class="number">225deg</span>);</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="number">100%</span> {</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotate</span>(-<span class="number">315deg</span>);</span><br><span class="line">  }</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>4.然后找到 Matery 主题目录 /layout/_partial 下找到 head.ejs，并在 &lt;head&gt; 标签中添加以下内容引入 loading.css 文件。<br><code>&lt;link rel="stylesheet" type="text/css" href="&lt;%- theme.jsDelivr.url %&gt;&lt;%- url_for('/css/loading.css') %&gt;"&gt;</code></p><p>5.再找到 Matery 主题目录 /layout 下找到 layout.ejs，然后在&lt;body&gt; 标签下引入 loading.ejs。<br><code>&lt;%- partial('_widget/loading') %&gt;</code></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;matery主题配置&quot;&gt;&lt;a href=&quot;#matery主题配置&quot; class=&quot;headerlink&quot; title=&quot;matery主题配置&quot;&gt;&lt;/a&gt;matery主题配置&lt;/h1&gt;&lt;h2 id=&quot;下载主题&quot;&gt;&lt;a href=&quot;#下载主题&quot; class=&quot;head</summary>
      
    
    
    
    <category term="博客相关" scheme="https://wenkex.gitee.io/categories/%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3/"/>
    
    
  </entry>
  
  <entry>
    <title>hexo博客优化</title>
    <link href="https://wenkex.gitee.io/2022/101932575.html"/>
    <id>https://wenkex.gitee.io/2022/101932575.html</id>
    <published>2022-10-19T05:28:15.000Z</published>
    <updated>2022-10-19T08:52:11.115Z</updated>
    
    <content type="html"><![CDATA[<h2 id="更好的文章管理方案"><a href="#更好的文章管理方案" class="headerlink" title="更好的文章管理方案"></a>更好的文章管理方案</h2><p><a href="https://blog.esunr.xyz/2022/07/e9b42b453d9f.html#1-%E5%89%8D%E8%A8%80">https://blog.esunr.xyz/2022/07/e9b42b453d9f.html#1-%E5%89%8D%E8%A8%80</a></p><h3 id="文章以目录分类"><a href="#文章以目录分类" class="headerlink" title="文章以目录分类"></a>文章以目录分类</h3><p>当我们写好一篇文章后，按照 hexo 的默认配置，我们需要将其放在 source/_post 目录下，等时间长了之后，_post 目录下的文章就会变得杂乱无章，无法让我们快速的 review 到一篇文章。</p><p>那么最好的解决方案就是我们在创建文章的时候以 文章分类 作为文件夹创建我们的文章，比如：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">└── source</span><br><span class="line">    └── _post</span><br><span class="line">        ├── 前端</span><br><span class="line">        │   ├── Javascript</span><br><span class="line">        │   │   └── Javascript原型链机制.md</span><br><span class="line">        │   └── 浏览器</span><br><span class="line">        │       └── 浏览器性能优化.md</span><br><span class="line">        └── 后台</span><br><span class="line">            ├── GoLang</span><br><span class="line">            │   └── go语言简介.md</span><br><span class="line">            └── Java</span><br><span class="line">                └── Spring MVC 快速入门.md</span><br></pre></td></tr></tbody></table></figure><h3 id="根据文件目录自动生成-categories-信息"><a href="#根据文件目录自动生成-categories-信息" class="headerlink" title="根据文件目录自动生成 categories 信息"></a>根据文件目录自动生成 categories 信息</h3><p>虽然我们把文章放的井井有条了，但是每个文章里的 categorys 字段还是要我们手动自己维护的，比如在 source/_post/前端/Javascript/Javascript原型链机制.md 文件中，我们要通过手写 categories 来让 hexo 知道这篇文章被放在 前端-Javascript 分类下：</p><p>为了省去手动维护 categorys 字段的这个问题，我们可以使用<a href="https://blog.eson.org/pub/e2f6e239/"> hexo-auto-category</a> 这个插件。这个插件在 Hexo 进行 build 的时候会去自动根据文章目录情况来自动修改文章的 categories 信息，<br><a href="https://github.com/xu-song/hexo-auto-category">github主页</a></p><p>安装<br><code>npm install hexo-auto-category --save</code><br>在站点根目录下的_config.yml添加：</p><figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Generate categories from directory-tree</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/xu-song/hexo-auto-category</span></span><br><span class="line"><span class="comment"># depth: the depth of directory-tree you want to generate, should &gt; 0</span></span><br><span class="line"><span class="attr">auto_category:</span></span><br><span class="line"> <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line"> <span class="comment">#如果只想生成第一级目录分类，可以设置depth属性</span></span><br><span class="line"> <span class="attr">depth:</span>    </span><br></pre></td></tr></tbody></table></figure><p>除此之外最好修改一下 _config.yml 中的两处默认配置：</p><figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 修改 permalink 让你的文章链接更加友好，并且有益于 SEO</span></span><br><span class="line"><span class="attr">permalink:</span> <span class="string">:year/:month/:hash.html</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 规定你的新文章在 _post 目录下是以 cateory </span></span><br><span class="line"><span class="attr">new_post_name:</span> <span class="string">:category/:title</span></span><br></pre></td></tr></tbody></table></figure><h3 id="提交代码时自动生成新文章的-categories"><a href="#提交代码时自动生成新文章的-categories" class="headerlink" title="提交代码时自动生成新文章的 categories"></a>提交代码时自动生成新文章的 categories</h3><h2 id="一键部署插件"><a href="#一键部署插件" class="headerlink" title="一键部署插件"></a>一键部署插件</h2><p>通过 hexo-deployer-git 插件可以实现一键将博客同时部署到多个git仓库中。如同时发布到github及gitee提供的pages服务。安装：<br><code>npm install hexo-deployer-git --save</code><br>修改 Hexo 根目录下的_config.yml 文件中的如下内容:</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">#一键部署到github,gitee,修改成自己的repo和branch</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">    <span class="attr">repo:</span> <span class="string">https://gitee.com/wenkex/wenkex.git</span></span><br><span class="line">    <span class="attr">branch:</span> <span class="string">master</span></span><br><span class="line">    <span class="attr">ignore_hidden:</span> <span class="literal">false</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">    <span class="attr">repo:</span> <span class="string">git@github.com:wenkexia/wenkexia.github.io.git</span></span><br><span class="line">    <span class="attr">branch:</span> <span class="string">main</span></span><br><span class="line">    <span class="attr">ignore_hidden:</span> <span class="literal">false</span></span><br></pre></td></tr></tbody></table></figure><h2 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h2><p>1.使用到了 hexo-generator-search 的 Hexo 插件来做内容搜索，安装命令如下：<br><code>npm install hexo-generator-search --save</code><br>2.在 Hexo 根目录下的 _config.yml 文件中，新增以下的配置项：</p><figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">search:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">search.xml</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">post</span></span><br></pre></td></tr></tbody></table></figure><p>3.在主题配置文件中开启本地搜索</p><h2 id="文章字数统计插件"><a href="#文章字数统计插件" class="headerlink" title="文章字数统计插件"></a>文章字数统计插件</h2><p>如果你想要在文章中显示文章字数、阅读时长信息，可以安装 hexo-wordcount插件。<br>安装命令如下：<br><code>npm i --save hexo-wordcount</code><br>然后只需在主题下的 _config.yml 文件中，激活以下配置项即可：</p><figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">wordCount:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span> <span class="comment"># 将这个值设置为 true 即可.</span></span><br><span class="line">  <span class="attr">postWordCount:</span> <span class="literal">true</span>  </span><br><span class="line">  <span class="attr">min2read:</span> <span class="literal">true</span>  </span><br><span class="line">  <span class="attr">totalCount:</span> <span class="literal">true</span></span><br></pre></td></tr></tbody></table></figure><h2 id="图片懒加载"><a href="#图片懒加载" class="headerlink" title="图片懒加载"></a>图片懒加载</h2><ul><li>图片预加载：顾名思义，图片预加载就是在网页全部加载之前，提前加载图片。当用户需要查看时可直接从本地缓存中渲染，以提供给用户更好的体验，减少等待的时间。否则，如果一个页面的内容过于庞大，没有使用预加载技术的页面就会长时间的展现为一片空白，这样浏览者可能以为图片预览慢而没兴趣浏览，把网页关掉，这时，就需要图片预加载。当然这种做法实际上牺牲了服务器的性能换取了更好的用户体验。</li><li>图片懒加载（缓载）：延迟加载图片或符合某些条件时才加载某些图片。这样做的好处是减少不必要的访问数据库或延迟访问数据库的次数，因为每次访问数据库都是比较耗时的即只有真正使用该对象的数据时才会创建。懒加载的主要目的是作为服务器前端的优化，减少请求数或延迟请求数。</li><li>懒加载对服务器前端有一定的缓解压力作用，预载则会增加服务器前端压力。<br>使用图片懒加载需要安装插件：hexo-lazyload-image<br>在站点根目录执行下面的命令：</li></ul><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-lazyload-image --save</span><br></pre></td></tr></tbody></table></figure><p>之后在站点配置文件下添加下面的代码：</p><figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">lazyload:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span>  <span class="comment"># 是否开启图片懒加载</span></span><br><span class="line">  <span class="attr">onlypost:</span> <span class="literal">false</span>  <span class="comment"># 是否只对文章的图片做懒加载</span></span><br><span class="line">  <span class="attr">loadingImg:</span> <span class="comment"># eg ./images/loading.gif</span></span><br></pre></td></tr></tbody></table></figure><h2 id="代码压缩"><a href="#代码压缩" class="headerlink" title="代码压缩"></a>代码压缩</h2><p>因为 hexo 生成的 html、css、js 等都有很多的空格或者换行，而空格和换行也是占用字节的，所以需要将空格换行去掉也就是我要进行的 “压缩”。<br>我们采用 gulp 代码压缩方式。<br>使用方法：</p><ul><li>进入站点根目录下依次执行下面的命令：</li></ul><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 全局安装gulp模块</span></span><br><span class="line">npm install gulp -g</span><br><span class="line"><span class="comment"># 安装各种小功能模块  执行这步的时候，可能会提示权限的问题，最好以管理员模式执行</span></span><br><span class="line">npm install gulp gulp-htmlclean gulp-htmlmin gulp-minify-css gulp-uglify gulp-imagemin --save</span><br><span class="line"><span class="comment"># 额外的功能模块</span></span><br><span class="line">npm install gulp-debug gulp-clean-css gulp-changed gulp-if gulp-plumber gulp-babel babel-preset-es2015 del @babel/core --save</span><br></pre></td></tr></tbody></table></figure><ul><li>在 Hexo 根目录新建文件 gulpfile.js，并复制以下内容到文件中</li></ul><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> gulp = <span class="built_in">require</span>(<span class="string">"gulp"</span>);</span><br><span class="line"><span class="keyword">var</span> debug = <span class="built_in">require</span>(<span class="string">"gulp-debug"</span>);</span><br><span class="line"><span class="keyword">var</span> cleancss = <span class="built_in">require</span>(<span class="string">"gulp-clean-css"</span>); <span class="comment">//css压缩组件</span></span><br><span class="line"><span class="keyword">var</span> uglify = <span class="built_in">require</span>(<span class="string">"gulp-uglify"</span>); <span class="comment">//js压缩组件</span></span><br><span class="line"><span class="keyword">var</span> htmlmin = <span class="built_in">require</span>(<span class="string">"gulp-htmlmin"</span>); <span class="comment">//html压缩组件</span></span><br><span class="line"><span class="keyword">var</span> htmlclean = <span class="built_in">require</span>(<span class="string">"gulp-htmlclean"</span>); <span class="comment">//html清理组件</span></span><br><span class="line"><span class="keyword">var</span> imagemin = <span class="built_in">require</span>(<span class="string">"gulp-imagemin"</span>); <span class="comment">//图片压缩组件</span></span><br><span class="line"><span class="keyword">var</span> changed = <span class="built_in">require</span>(<span class="string">"gulp-changed"</span>); <span class="comment">//文件更改校验组件</span></span><br><span class="line"><span class="keyword">var</span> gulpif = <span class="built_in">require</span>(<span class="string">"gulp-if"</span>); <span class="comment">//任务 帮助调用组件</span></span><br><span class="line"><span class="keyword">var</span> plumber = <span class="built_in">require</span>(<span class="string">"gulp-plumber"</span>); <span class="comment">//容错组件（发生错误不跳出任务，并报出错误内容）</span></span><br><span class="line"><span class="keyword">var</span> isScriptAll = <span class="literal">true</span>; <span class="comment">//是否处理所有文件，(true|处理所有文件)(false|只处理有更改的文件)</span></span><br><span class="line"><span class="keyword">var</span> isDebug = <span class="literal">true</span>; <span class="comment">//是否调试显示 编译通过的文件</span></span><br><span class="line"><span class="keyword">var</span> gulpBabel = <span class="built_in">require</span>(<span class="string">"gulp-babel"</span>);</span><br><span class="line"><span class="keyword">var</span> es2015Preset = <span class="built_in">require</span>(<span class="string">"babel-preset-es2015"</span>);</span><br><span class="line"><span class="keyword">var</span> del = <span class="built_in">require</span>(<span class="string">"del"</span>);</span><br><span class="line"><span class="keyword">var</span> Hexo = <span class="built_in">require</span>(<span class="string">"hexo"</span>);</span><br><span class="line"><span class="keyword">var</span> hexo = <span class="keyword">new</span> Hexo(process.cwd(), {}); <span class="comment">// 初始化一个hexo对象</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 清除public文件夹</span></span><br><span class="line">gulp.task(<span class="string">"clean"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{</span><br><span class="line">    <span class="keyword">return</span> del([<span class="string">"public/**/*"</span>]);</span><br><span class="line">});</span><br><span class="line"></span><br><span class="line"><span class="comment">// 下面几个跟hexo有关的操作，主要通过hexo.call()去执行，注意return</span></span><br><span class="line"><span class="comment">// 创建静态页面 （等同 hexo generate）</span></span><br><span class="line">gulp.task(<span class="string">"generate"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{</span><br><span class="line">    <span class="keyword">return</span> hexo.init().then(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{</span><br><span class="line">        <span class="keyword">return</span> hexo</span><br><span class="line">            .call(<span class="string">"generate"</span>, {</span><br><span class="line">                <span class="attr">watch</span>: <span class="literal">false</span></span><br><span class="line">            })</span><br><span class="line">            .then(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{</span><br><span class="line">                <span class="keyword">return</span> hexo.exit();</span><br><span class="line">            })</span><br><span class="line">            .catch(<span class="function"><span class="keyword">function</span> (<span class="params">err</span>) </span>{</span><br><span class="line">                <span class="keyword">return</span> hexo.exit(err);</span><br><span class="line">            });</span><br><span class="line">    });</span><br><span class="line">});</span><br><span class="line"></span><br><span class="line"><span class="comment">// 启动Hexo服务器</span></span><br><span class="line">gulp.task(<span class="string">"server"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{</span><br><span class="line">    <span class="keyword">return</span> hexo</span><br><span class="line">        .init()</span><br><span class="line">        .then(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{</span><br><span class="line">            <span class="keyword">return</span> hexo.call(<span class="string">"server"</span>, {});</span><br><span class="line">        })</span><br><span class="line">        .catch(<span class="function"><span class="keyword">function</span> (<span class="params">err</span>) </span>{</span><br><span class="line">            <span class="built_in">console</span>.log(err);</span><br><span class="line">        });</span><br><span class="line">});</span><br><span class="line"></span><br><span class="line"><span class="comment">// 部署到服务器</span></span><br><span class="line">gulp.task(<span class="string">"deploy"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{</span><br><span class="line">    <span class="keyword">return</span> hexo.init().then(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{</span><br><span class="line">        <span class="keyword">return</span> hexo</span><br><span class="line">            .call(<span class="string">"deploy"</span>, {</span><br><span class="line">                <span class="attr">watch</span>: <span class="literal">false</span></span><br><span class="line">            })</span><br><span class="line">            .then(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{</span><br><span class="line">                <span class="keyword">return</span> hexo.exit();</span><br><span class="line">            })</span><br><span class="line">            .catch(<span class="function"><span class="keyword">function</span> (<span class="params">err</span>) </span>{</span><br><span class="line">                <span class="keyword">return</span> hexo.exit(err);</span><br><span class="line">            });</span><br><span class="line">    });</span><br><span class="line">});</span><br><span class="line"></span><br><span class="line"><span class="comment">// 压缩public目录下的js文件</span></span><br><span class="line">gulp.task(<span class="string">"compressJs"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{</span><br><span class="line">    <span class="keyword">return</span> gulp</span><br><span class="line">        .src([<span class="string">"./public/**/*.js"</span>, <span class="string">"!./public/libs/**"</span>]) <span class="comment">//排除的js</span></span><br><span class="line">        .pipe(gulpif(!isScriptAll, changed(<span class="string">"./public"</span>)))</span><br><span class="line">        .pipe(gulpif(isDebug, debug({ <span class="attr">title</span>: <span class="string">"Compress JS:"</span> })))</span><br><span class="line">        .pipe(plumber())</span><br><span class="line">        .pipe(</span><br><span class="line">            gulpBabel({</span><br><span class="line">                <span class="attr">presets</span>: [es2015Preset] <span class="comment">// es5检查机制</span></span><br><span class="line">            })</span><br><span class="line">        )</span><br><span class="line">        .pipe(uglify()) <span class="comment">//调用压缩组件方法uglify(),对合并的文件进行压缩</span></span><br><span class="line">        .pipe(gulp.dest(<span class="string">"./public"</span>)); <span class="comment">//输出到目标目录</span></span><br><span class="line">});</span><br><span class="line"></span><br><span class="line"><span class="comment">// 压缩public目录下的css文件</span></span><br><span class="line">gulp.task(<span class="string">"compressCss"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{</span><br><span class="line">    <span class="keyword">var</span> option = {</span><br><span class="line">        <span class="attr">rebase</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="comment">//advanced: true, //类型：Boolean 默认：true [是否开启高级优化（合并选择器等）]</span></span><br><span class="line">        <span class="attr">compatibility</span>: <span class="string">"ie7"</span> <span class="comment">//保留ie7及以下兼容写法 类型：String 默认：''or'*' [启用兼容模式； 'ie7'：IE7兼容模式，'ie8'：IE8兼容模式，'*'：IE9+兼容模式]</span></span><br><span class="line">        <span class="comment">//keepBreaks: true, //类型：Boolean 默认：false [是否保留换行]</span></span><br><span class="line">        <span class="comment">//keepSpecialComments: '*' //保留所有特殊前缀 当你用autoprefixer生成的浏览器前缀，如果不加这个参数，有可能将会删除你的部分前缀</span></span><br><span class="line">    };</span><br><span class="line">    <span class="keyword">return</span> gulp</span><br><span class="line">        .src([<span class="string">"./public/**/*.css"</span>, <span class="string">"!./public/**/*.min.css"</span>]) <span class="comment">//排除的css</span></span><br><span class="line">        .pipe(gulpif(!isScriptAll, changed(<span class="string">"./public"</span>)))</span><br><span class="line">        .pipe(gulpif(isDebug, debug({ <span class="attr">title</span>: <span class="string">"Compress CSS:"</span> })))</span><br><span class="line">        .pipe(plumber())</span><br><span class="line">        .pipe(cleancss(option))</span><br><span class="line">        .pipe(gulp.dest(<span class="string">"./public"</span>));</span><br><span class="line">});</span><br><span class="line"></span><br><span class="line"><span class="comment">// 压缩public目录下的html文件</span></span><br><span class="line">gulp.task(<span class="string">"compressHtml"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{</span><br><span class="line">    <span class="keyword">var</span> cleanOptions = {</span><br><span class="line">        <span class="attr">protect</span>: <span class="regexp">/&lt;\!--%fooTemplate\b.*?%--&gt;/g</span>, <span class="comment">//忽略处理</span></span><br><span class="line">        unprotect: <span class="regexp">/&lt;script [^&gt;]*\btype="text\/x-handlebars-template"[\s\S]+?&lt;\/script&gt;/gi</span> <span class="comment">//特殊处理</span></span><br><span class="line">    };</span><br><span class="line">    <span class="keyword">var</span> minOption = {</span><br><span class="line">        <span class="attr">collapseWhitespace</span>: <span class="literal">true</span>, <span class="comment">//压缩HTML</span></span><br><span class="line">        <span class="attr">collapseBooleanAttributes</span>: <span class="literal">true</span>, <span class="comment">//省略布尔属性的值 &lt;input checked="true"/&gt; ==&gt; &lt;input /&gt;</span></span><br><span class="line">        <span class="attr">removeEmptyAttributes</span>: <span class="literal">true</span>, <span class="comment">//删除所有空格作属性值 &lt;input id="" /&gt; ==&gt; &lt;input /&gt;</span></span><br><span class="line">        <span class="attr">removeScriptTypeAttributes</span>: <span class="literal">true</span>, <span class="comment">//删除&lt;script&gt;的type="text/javascript"</span></span><br><span class="line">        <span class="attr">removeStyleLinkTypeAttributes</span>: <span class="literal">true</span>, <span class="comment">//删除&lt;style&gt;和&lt;link&gt;的type="text/css"</span></span><br><span class="line">        <span class="attr">removeComments</span>: <span class="literal">true</span>, <span class="comment">//清除HTML注释</span></span><br><span class="line">        <span class="attr">minifyJS</span>: <span class="literal">true</span>, <span class="comment">//压缩页面JS</span></span><br><span class="line">        <span class="attr">minifyCSS</span>: <span class="literal">true</span>, <span class="comment">//压缩页面CSS</span></span><br><span class="line">        <span class="attr">minifyURLs</span>: <span class="literal">true</span> <span class="comment">//替换页面URL</span></span><br><span class="line">    };</span><br><span class="line">    <span class="keyword">return</span> gulp</span><br><span class="line">        .src(<span class="string">"./public/**/*.html"</span>)</span><br><span class="line">        .pipe(gulpif(isDebug, debug({ <span class="attr">title</span>: <span class="string">"Compress HTML:"</span> })))</span><br><span class="line">        .pipe(plumber())</span><br><span class="line">        .pipe(htmlclean(cleanOptions))</span><br><span class="line">        .pipe(htmlmin(minOption))</span><br><span class="line">        .pipe(gulp.dest(<span class="string">"./public"</span>));</span><br><span class="line">});</span><br><span class="line"></span><br><span class="line"><span class="comment">// 压缩 public/medias 目录内图片</span></span><br><span class="line">gulp.task(<span class="string">"compressImage"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{</span><br><span class="line">    <span class="keyword">var</span> option = {</span><br><span class="line">        <span class="attr">optimizationLevel</span>: <span class="number">5</span>, <span class="comment">//类型：Number 默认：3 取值范围：0-7（优化等级）</span></span><br><span class="line">        <span class="attr">progressive</span>: <span class="literal">true</span>, <span class="comment">//类型：Boolean 默认：false 无损压缩jpg图片</span></span><br><span class="line">        <span class="attr">interlaced</span>: <span class="literal">false</span>, <span class="comment">//类型：Boolean 默认：false 隔行扫描gif进行渲染</span></span><br><span class="line">        <span class="attr">multipass</span>: <span class="literal">false</span> <span class="comment">//类型：Boolean 默认：false 多次优化svg直到完全优化</span></span><br><span class="line">    };</span><br><span class="line">    <span class="keyword">return</span> gulp</span><br><span class="line">        .src(<span class="string">"./public/medias/**/*.*"</span>)</span><br><span class="line">        .pipe(gulpif(!isScriptAll, changed(<span class="string">"./public/medias"</span>)))</span><br><span class="line">        .pipe(gulpif(isDebug, debug({ <span class="attr">title</span>: <span class="string">"Compress Images:"</span> })))</span><br><span class="line">        .pipe(plumber())</span><br><span class="line">        .pipe(imagemin(option))</span><br><span class="line">        .pipe(gulp.dest(<span class="string">"./public"</span>));</span><br><span class="line">});</span><br><span class="line"><span class="comment">// 执行顺序： 清除public目录 -&gt; 产生原始博客内容 -&gt; 执行压缩混淆 -&gt; 部署到服务器</span></span><br><span class="line">gulp.task(</span><br><span class="line">    <span class="string">"build"</span>,</span><br><span class="line">    gulp.series(</span><br><span class="line">        <span class="string">"clean"</span>,</span><br><span class="line">        <span class="string">"generate"</span>,</span><br><span class="line">        <span class="string">"compressHtml"</span>,</span><br><span class="line">        <span class="string">"compressCss"</span>,</span><br><span class="line">        <span class="string">"compressJs"</span>,</span><br><span class="line">        <span class="string">"compressImage"</span>,</span><br><span class="line">        gulp.parallel(<span class="string">"deploy"</span>)</span><br><span class="line">    )</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 默认任务</span></span><br><span class="line">gulp.task(</span><br><span class="line">    <span class="string">"default"</span>,</span><br><span class="line">    gulp.series(</span><br><span class="line">        <span class="string">"clean"</span>,</span><br><span class="line">        <span class="string">"generate"</span>,</span><br><span class="line">        gulp.parallel(<span class="string">"compressHtml"</span>, <span class="string">"compressCss"</span>, <span class="string">"compressJs"</span>,<span class="string">"compressImage"</span>)</span><br><span class="line">    )</span><br><span class="line">);</span><br><span class="line"><span class="comment">//Gulp4最大的一个改变就是gulp.task函数现在只支持两个参数，分别是任务名和运行任务的函数</span></span><br></pre></td></tr></tbody></table></figure><ul><li>以后的执行方式有两种：<ul><li>直接在 Hexo 根目录执行 gulp 或者 gulp default ，这个命令相当于 hexo cl&amp;&amp;hexo g 并且再把代码和图片压缩。</li><li>在 Hexo 根目录执行 gulp build  ，等于说生成、压缩文件后又帮你自动部署了。</li></ul></li></ul><h2 id="文章链接转静态短地址"><a href="#文章链接转静态短地址" class="headerlink" title="文章链接转静态短地址"></a>文章链接转静态短地址</h2><p>如果文章名称是中文的，那么 Hexo 默认生成的永久链接也会有中文，这样不利于SEO，且gitment评论对中文链接也不支持。我们可以用hexo-permalink-pinyin Hexo 插件生成文章时生成中文拼音的永久链接，<br>或者用hexo-abbrlink 生成静态文章链接。以下结合hexo-abbrlink生成类似 /yyyy/mmdd+随机数.html 的文章链接地址。<br>安装命令如下：<br><code>npm install hexo-abbrlink --save</code><br>在 Hexo 根目录下的 _config.yml 文件中，修改 permalink: ，并在文件末尾新增 abbrlink:配置项：</p><figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">permalink:</span> <span class="string">:year/:month:day:abbrlink.html</span></span><br><span class="line"></span><br><span class="line"><span class="attr">abbrlink:</span>   </span><br><span class="line">  <span class="attr">alg:</span> <span class="string">crc16</span> <span class="comment">#算法选项：crc16丨crc32  </span></span><br><span class="line">  <span class="attr">rep:</span> <span class="string">dec</span> <span class="comment">#输出进制：dec为十进制，hex为十六进制</span></span><br></pre></td></tr></tbody></table></figure><h2 id="Hexo-微信公众号引流插件"><a href="#Hexo-微信公众号引流插件" class="headerlink" title="Hexo 微信公众号引流插件"></a>Hexo 微信公众号引流插件</h2><p>将免费的公众号引流工具整合到博客中，用户扫码关注公众号后才可以解锁文章，从而将博客流量引流到公众号，达到涨粉丝数的目的。<br>项目：<a href="https://github.com/rqh656418510/hexo-readmore">https://github.com/rqh656418510/hexo-readmore</a><br>文档：<a href="https://docs.techgrow.cn/v1/wechat/hexo/">https://docs.techgrow.cn/v1/wechat/hexo/</a></p><h2 id="每天自动提交url到百度和谷歌必应"><a href="#每天自动提交url到百度和谷歌必应" class="headerlink" title="每天自动提交url到百度和谷歌必应"></a>每天自动提交url到百度和谷歌必应</h2><p>每天中午 12 点推送一次网站信息到 Baidu 和 Bing，提高爬虫抓取几率<br><a href="https://github.com/lete114/hexo-seo-autopush">https://github.com/lete114/hexo-seo-autopush</a></p><h2 id="URL-Submission"><a href="#URL-Submission" class="headerlink" title="URL Submission"></a>URL Submission</h2><p>一个工具型Hexo插件，主动推送站点链接至谷歌、必应、百度等搜索引擎，提升网站收录质量和速度<br>项目：<a href="https://github.com/abnerwei/hexo-url-submission">https://github.com/abnerwei/hexo-url-submission</a><br>文档：<a href="https://abnerwei.com/wiki/hexo/url-submission">https://abnerwei.com/wiki/hexo/url-submission</a></p><h2 id="本地后台管理Hexo-Admin-弃用"><a href="#本地后台管理Hexo-Admin-弃用" class="headerlink" title="本地后台管理Hexo Admin(弃用)"></a>本地后台管理Hexo Admin(弃用)</h2><p>1.在博客根目录下运行下列指令<br><code>npm install --save hexo-admin</code><br>2.运行hexo s<br>3.接下来在浏览器地址栏粘贴这个地址，<br><a href="http://localhost:4000/admin/">http://localhost:4000/admin/</a><br>4.增加密码<br>进入Settings &gt; Setup authentification<br>设置账户，密码得到一串配置<br>填加到站点配置文件下</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">admin:</span></span><br><span class="line">  <span class="attr">username:</span> <span class="string">myfavoritename</span></span><br><span class="line">  <span class="attr">password_hash:</span> <span class="string">be121740bf988b2225a313fa1f107ca1</span></span><br><span class="line">  <span class="attr">secret:</span> <span class="string">a</span> <span class="string">secret</span> <span class="string">something</span></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>npm uninstall hexo-admin   </p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;更好的文章管理方案&quot;&gt;&lt;a href=&quot;#更好的文章管理方案&quot; class=&quot;headerlink&quot; title=&quot;更好的文章管理方案&quot;&gt;&lt;/a&gt;更好的文章管理方案&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://blog.esunr.xyz/2022/07/e9</summary>
      
    
    
    
    <category term="博客相关" scheme="https://wenkex.gitee.io/categories/%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3/"/>
    
    
  </entry>
  
  <entry>
    <title>hexo博客搭建</title>
    <link href="https://wenkex.gitee.io/2022/101931415.html"/>
    <id>https://wenkex.gitee.io/2022/101931415.html</id>
    <published>2022-10-19T05:24:08.000Z</published>
    <updated>2022-10-19T08:48:45.236Z</updated>
    
    <content type="html"><![CDATA[<p>Hexo 是一个快速，简单且功能强大的博客框架。如果你用 Markdown 写博客，Hexo 可以在几秒内生成带有精美主题的静态文件。</p><p>1.安装Node.js<br>2.安装Git并配置环境变量</p><h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h2><p>创建一个文件夹例如blog，右键打开Git Bash  </p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli  <span class="comment">#安装hexo</span></span><br><span class="line">npm install</span><br><span class="line">hexo -v   <span class="comment">#查看版本</span></span><br><span class="line">hexo init blog       <span class="comment">#初始化Hexo  </span></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>新建完成后，指定文件夹目录下有：<br>node_modules: 依赖包<br>public：存放生成的页面<br>scaffolds：生成文章的一些模板<br>source：用来存放你的文章<br>themes：主题<br>_config.yml: 博客的配置文件  </p><h2 id="Hexo版本升级"><a href="#Hexo版本升级" class="headerlink" title="Hexo版本升级"></a>Hexo版本升级</h2><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用淘宝源的 cnpm 替换 npm</span></span><br><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br><span class="line"></span><br><span class="line">cnpm install -g cnpm                 <span class="comment"># 升级 npm</span></span><br><span class="line">cnpm cache clean -f                 <span class="comment"># 清除 npm 缓存</span></span><br><span class="line"></span><br><span class="line">===更新 hexo: 进入 blog 目录，执行如下命令=== </span><br><span class="line"><span class="comment"># 更新 package.json 中的 hexo 及个插件版本</span></span><br><span class="line">cnpm install -g npm-check </span><br><span class="line">npm-check                  <span class="comment"># 检查之前安装的插件，都有哪些是可以升级的 </span></span><br><span class="line">cnpm install -g npm-upgrade         </span><br><span class="line">npm-upgrade                 <span class="comment"># 升级系统中的插件</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 确认 hexo 已经更新</span></span><br><span class="line">hexo -v</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">npm outdated   <span class="comment">#hexo用这个检查需要更新的插件</span></span><br></pre></td></tr></tbody></table></figure><h2 id="创建GitHub仓库或者码云仓库"><a href="#创建GitHub仓库或者码云仓库" class="headerlink" title="创建GitHub仓库或者码云仓库"></a>创建GitHub仓库或者码云仓库</h2><p>1.创建仓库，仓库名必须和用户名一致，其他按照默认，直接创建<br>2.打开cmd，添加Git本地用户<br>git config –global user.name “ 用户名  “<br>git config –global user.email “绑定的邮箱”</p><p>3.申请Sky秘钥<br>ssh-keygen -t rsa -C “Git绑定的邮箱”<br>sky在这 C:\Users\啊科.ssh</p><p>4.复制Sky秘钥添加到GitHub或者码云<br>查看是否成功  ssh -T <a href="mailto:git@github.com">git@github.com</a></p><h2 id="将本地仓库与远程仓库连接"><a href="#将本地仓库与远程仓库连接" class="headerlink" title="将本地仓库与远程仓库连接"></a>将本地仓库与远程仓库连接</h2><p>1.安装git部署插件：才能用hexo d 上传<br>npm install hexo-deployer-git –save</p><p>2.复制生成的仓库连接<br>修改博客目录下的_config.yml文件</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repository:</span> <span class="string">https://gitee.com/wenkex/wenkex.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></tbody></table></figure><h2 id="本地创建文章，上传到远程仓库"><a href="#本地创建文章，上传到远程仓库" class="headerlink" title="本地创建文章，上传到远程仓库"></a>本地创建文章，上传到远程仓库</h2><p>站点根目录打开git bash</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#清除缓存 ,网页正常情况下可以忽略此条命令,执行该指令后,会删掉站点根目录下的public文件夹</span></span><br><span class="line">hexo clean   <span class="comment">#或者hexo cl</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#生成静态网页 (执行后会在站点根目录下生成public文件夹, 会将.md后缀的文件编译为.html文件,存放在"/blog/public/ " 路径下)  </span></span><br><span class="line">hexo g  <span class="comment">#等价于hexo generate</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#启动本地服务器，用于预览主题，监视文件变动并自动更新，除修改站点配置文件外,无须重启服务器,直接刷新网页即可生效。</span></span><br><span class="line">hexo s  <span class="comment">#hexo server</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#自动生成网站静态文件，并将本地数据部署到设定的仓库</span></span><br><span class="line">hexo d   <span class="comment">#或者hexo deploy</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#创建新文章</span></span><br><span class="line"> hexo new 文章标题</span><br><span class="line"></span><br><span class="line">用yarn cgd或npm run cgd运行如下命令</span><br><span class="line">hexo cl &amp;&amp; hexo g &amp;&amp; hexo d一键上传到远程仓库  </span><br><span class="line">hexo cl &amp;&amp; hexo g &amp;&amp; hexo s一键开启本地映射</span><br></pre></td></tr></tbody></table></figure><h2 id="1-目录结构说明"><a href="#1-目录结构说明" class="headerlink" title="1.目录结构说明"></a>1.目录结构说明</h2><p><a href="https://juejin.cn/post/6844904082042257415#heading-6">参考</a><br><a href="https://hexo.io/zh-cn/docs/">参考</a></p><p>在执行过Hexo deploy命令之后，目录结构新增了.deploy_git，public，.gitignore，如下</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"> $ tree -L 2</span><br><span class="line">.</span><br><span class="line">├── .deploy_git</span><br><span class="line">├── node_modules</span><br><span class="line">├── public</span><br><span class="line">├── scaffolds</span><br><span class="line">│&nbsp;&nbsp; ├── draft.md</span><br><span class="line">│&nbsp;&nbsp; ├── page.md</span><br><span class="line">│&nbsp;&nbsp; └── post.md</span><br><span class="line">├── source</span><br><span class="line">│&nbsp;&nbsp; ├── _posts</span><br><span class="line">│&nbsp;&nbsp; ├── _drafts</span><br><span class="line">├── themes</span><br><span class="line">├── _config.yml</span><br><span class="line">├── db.json</span><br><span class="line">├── package.json</span><br><span class="line">└── package-lock.json</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><ul><li><p>_config.yml<br>用来配置博客相关的参数，初始化时自动创建</p></li><li><p>node_modules用来存储已安装的各类依赖包</p></li><li><p>package.json用来查看 Hexo 的版本以及相关依赖包的版本。</p></li><li><p>scaffold<br>模板文件夹，初始化时自动创建。包含page，post，draft三种模板，分别对应 页面、要发布的文章、草稿。<br>在新建文章时，Hexo 会根据 scaffolds 文件夹内相对应的文件来建立文件，例如：<br><code>$ hexo new photo "My Gallery"</code><br>在执行这行指令时，Hexo 会尝试在 scaffolds 文件夹中寻找 photo.md，并根据其内容建立文章，</p></li><li><p>themes<br>主题文件夹，初始化时自动创建。每一个主题，都有一个单独的文件夹。</p></li><li><p>source：资源文件夹。用来存放图片、Markdown 文档（文章、草稿）、各种页面（分类、关于页面等）。</p></li><li><p>public：将 source 文件夹里的 Markdown 文档，转换成 index.html。再结合主题进行渲染，就是我们最终看到的博客。</p></li><li><p>.deploy_git：将 public 文件夹的内容提交到 Github 后生成，内容与 public 文件夹基本一致。</p></li></ul><p>这三者的关系大致是：source -&gt; public -&gt; .deploy_git<br>执行hexo generate，根据 source，更新 public。<br>执行hexo deploy，根据 public，更新 .deploy_git。</p><hr><h2 id="4-新建文章自动打开编辑器"><a href="#4-新建文章自动打开编辑器" class="headerlink" title="4.新建文章自动打开编辑器"></a>4.新建文章自动打开编辑器</h2><p>执行 hexo new “名字”，这样就会在_posts 下生成一篇新文章，但需要手动打开，<br>1.只需要在站点根目录下新建 scripts 目录，<br>2.然后在scripts目录下新建 auto_open.js，在文件填入一下内容：</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> spawn = <span class="built_in">require</span>(<span class="string">'child_process'</span>).exec;</span><br><span class="line"><span class="comment">// Hexo 3 用户复制这段</span></span><br><span class="line">hexo.on(<span class="string">'new'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>{</span><br><span class="line">  spawn(<span class="string">'start  "D:\Program Files\Typora\Typora.exe" '</span> + data.path);</span><br><span class="line">});</span><br></pre></td></tr></tbody></table></figure><p>其中 “D:\Program Files\Typora\Typora.exe” 是我本地编辑器的路径，只需要改为你本地编辑器的路径即可，然后在执行 hexo cl &amp;&amp; hexo g -d，部署到 GitHub 即可，以后在发布文章就会自动打开编辑器。</p><h2 id="文章头设置"><a href="#文章头设置" class="headerlink" title="文章头设置"></a>文章头设置</h2><p>设置多Tag<br><code>tag: [tag1,tag2,...]</code></p><h2 id="Hexo渲染时设置例外"><a href="#Hexo渲染时设置例外" class="headerlink" title="Hexo渲染时设置例外"></a>Hexo渲染时设置例外</h2><p><strong>1.第一种</strong><br>在HTML文件前增加<br>layout: false</p><p><strong>2.设置例外目录</strong><br>假设你的Source文件夹里面有个Demo目录，要忽略Demo目录下的所有html页面，可以通过在_config.yml设置skip_render来忽略的目录，具体如下：<br>skip_render: Demo/*.html</p><p>文件匹配是基于正则匹配的，更复杂的情况如下</p><p>1.单个文件夹下全部文件：skip_render: demo/*<br>2.单个文件夹下指定类型文件：skip_render: demo/<em>.html<br>3.单个文件夹下全部文件以及子目录:skip_render: demo/</em>*<br>4.多个文件夹以及各种复杂情况：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">skip_render:</span><br><span class="line">    - 'demo/*.html'</span><br><span class="line">    - 'demo/**</span><br></pre></td></tr></tbody></table></figure><h2 id="如何优雅的魔改"><a href="#如何优雅的魔改" class="headerlink" title="如何优雅的魔改"></a>如何优雅的魔改</h2><p>在不动主题源文件方便日后升级的情况下，我们大部分采用外部引入 css,js 的方式实现，同时上传至 github，借用 jsDelivr 提供的 CDN 加速服务快速引用</p><p>在博客根目录source文件夹下新建一个xxx.js和xxx.css，名字自己取就行，最后我们正确引入即可，<br>主配（主题配置source目录下的 butterfly.yml））搜索 inject,然后在以下位置插入对应的 css 和 js 即可，例如，我是存放在主题文件夹子文件夹 css 和 js 内</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">inject:</span></span><br><span class="line">  <span class="attr">head:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;link</span> <span class="string">rel="stylesheet"</span> <span class="string">href="https://cdn.jsdelivr.net/gh/CCKNBC/ccknbc.github.io@latest/css/ccknbc.css"&gt;</span></span><br><span class="line">  <span class="attr">bottom:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">src="https://cdn.jsdelivr.net/gh/CCKNBC/ccknbc.github.io@latest/js/ccknbc.js"&gt;&lt;/script&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">/css/ccknbc.css</span></span><br><span class="line"><span class="string">/js/ccknbc.js</span></span><br></pre></td></tr></tbody></table></figure><h2 id="github添加自定义域名"><a href="#github添加自定义域名" class="headerlink" title="github添加自定义域名"></a>github添加自定义域名</h2><p><a href="https://yafine-blog.cn/posts/fc0.html">参考</a></p><p>1.注册一个域名<br>2.添加域名解析（注：使用自定义域名，需要将记录类型修改为 CNAME 将域名指向另一个域名）<br>  主机记录填blog<br>  记录值修改为 GitHub对应仓库名，如：wenkexia.github.io<br>  最终用<a href="http://blog.wenkex.top来访问/">http://blog.wenkex.top来访问</a><br>3.在GitHub 中设置新的注册的域名（具体位置：Settings –&gt; Pages –&gt; Custom domain），之后保存验证就可以了 <a href="http://blog.wenkex.top/">http://blog.wenkex.top</a><br>4.进入 hexo 根目录的 source 文件夹；创建 CNAME 文件，文件添加域名 –&gt; blog.wenkex.top。注意：文件名全部大写，没有后缀；文件内容只有域名；<br>5.重新生成静态文件，并提交。hexo d</p><h2 id="SEO优化"><a href="#SEO优化" class="headerlink" title="SEO优化"></a>SEO优化</h2><p><a href="https://shen-yu.gitee.io/2020/hexo-seo/">参考</a></p><p>搜索引擎优化，又称为SEO，即Search Engine Optimization，它是一种通过分析搜索引擎的排名规律，了解各种搜索引擎怎样进行搜索、怎样抓取互联网页面、怎样确定特定关键词的搜索结果排名的技术。Google自动收录效果还不错，百度就差得远了（GitHub不允许百度的Spider爬取GitHub上的内容）。所以在第三步验证网站的时候，建议选择CNAME验证的方式。</p><h3 id="生成-sitemap-文件"><a href="#生成-sitemap-文件" class="headerlink" title="生成 sitemap 文件"></a>生成 sitemap 文件</h3><p>1.安装插件<br>查看是否有安装插件<br><code>npm [name] -v</code> </p><p>百度<br><code> npm install hexo-generator-baidu-sitemap --save</code><br>谷歌<br><code> npm install hexo-generator-sitemap --save</code></p><p>2.添加站点配置_config.yml</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">sitemap:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">sitemap.xml</span></span><br><span class="line"><span class="attr">baidusitemap:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">baidusitemap.xml</span></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>再重启 hexo，在本地访问 localhost:4000/sitemap.xml和 localhost:4000/baidusitemap.xml 就能正确的展示出两个sitemap 文件了。</p><h3 id="推送到-谷歌-和-百度"><a href="#推送到-谷歌-和-百度" class="headerlink" title="推送到 谷歌 和 百度"></a>推送到 谷歌 和 百度</h3><h4 id="百度"><a href="#百度" class="headerlink" title="百度"></a>百度</h4><p><a href="https://ziyuan.baidu.com/site/">百度站点管理</a><br>添加文件方式不可行，hexo会处理html文件</p><p>所以选择，在 head.ejs 里添加 html 标签</p><p>1.1 手动提交baidusitemap.xml(里面也有自动提交的代码)</p><p>1.2 可以用”抓取诊断”，手动-百度抓取</p><p>1.3 Robots → 检测并更新</p><h4 id="谷歌"><a href="#谷歌" class="headerlink" title="谷歌"></a>谷歌</h4><p><a href="https://search.google.com/search-console/about">谷歌站点管理</a></p><h3 id="在根目录下-新建-robots-txt"><a href="#在根目录下-新建-robots-txt" class="headerlink" title="在根目录下 新建 robots.txt"></a>在根目录下 新建 robots.txt</h3><p>robots配置</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">User-agent: *</span><br><span class="line">Allow: /</span><br><span class="line">Allow: /home/</span><br><span class="line">Allow: /archives/</span><br><span class="line">Allow: /about/</span><br><span class="line">Disallow: /vendors/</span><br><span class="line">Disallow: /js/</span><br><span class="line">Disallow: /css/</span><br><span class="line">Disallow: /fonts/</span><br><span class="line">Disallow: /vendors/</span><br><span class="line">Disallow: /fancybox/</span><br><span class="line"></span><br><span class="line">Sitemap: http://yoursite/sitemap.xml</span><br><span class="line">Sitemap: http://yoursite/baidusitemap.xml</span><br></pre></td></tr></tbody></table></figure><h2 id="Hexo自定义原理"><a href="#Hexo自定义原理" class="headerlink" title="Hexo自定义原理"></a>Hexo自定义原理</h2><p>Hexo 系列的博客中的文章都是经Hexo的主题渲染的静态网页。所以Hexo博客大部分都呈现出一种高度的统一化与规范化。不过 Hexo 提供了跳过渲染功能，使得我们可以直接在博客中放入自定义网页。</p><p>比如在博客中放入图片、自定义404.html、自定义About页面、简历等<br>创建自定义网页<br>网页可以是自己编写的，也可以是别人现成的源码（下载喜欢的页面）。</p><h3 id="添加文件"><a href="#添加文件" class="headerlink" title="添加文件"></a>添加文件</h3><p>网页编写完成后，在Hexo\source目录下创建一个文件夹（文件夹名称任意，比如我创建的是about这个文件夹，部署完成后，访问<a href="http://mrlsm.github.io/about%E5%8D%B3%E5%8F%AF%E7%9C%8B%E5%88%B0%E6%95%88%E6%9E%9C%EF%BC%8C%E4%BE%9D%E6%AD%A4%E7%B1%BB%E6%8E%A8%EF%BC%89">http://mrlsm.github.io/about即可看到效果，依此类推）</a></p><p>将 html 文件放置于此文件夹，并重命名为 index.html 。</p><p>跳过渲染有下述两种方法：</p><h3 id="1-指定文件跳过渲染"><a href="#1-指定文件跳过渲染" class="headerlink" title="1.指定文件跳过渲染"></a>1.指定文件跳过渲染</h3><p>实现原理</p><p>给单个文件添加不应用模板的标记，适用于个别特殊文件的处理。</p><p>实现方法<br>在不需要渲染的文章或HTML文件头部添加以下标记</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">layout: false</span><br><span class="line">---</span><br></pre></td></tr></tbody></table></figure><p>添加该指令后，执行 hexo g命令时便会跳过该 index.html文件，使得index.html不受当前 hexo 主题影响，完全是一个独立的网页，如果网页引用了 css 或 js，css 和 js 需使用外链或者将css js 文件放入index.html同目录下引用。</p><p>引用图片亦是如此</p><h3 id="2-对相关文件跳过渲染"><a href="#2-对相关文件跳过渲染" class="headerlink" title="2.对相关文件跳过渲染"></a>2.对相关文件跳过渲染</h3><p>实现原理<br>只有source目录下的文件才会发布到public（能够在网络上访问到），因此Hexo只渲染source目录下的文件。skip_render参数设置的路径是相对于source目录的路径。<br>Hexo的配置文件中提供了配置项skip_render ，是用来对不需要的目录或者文件进行渲染排除。</p><p>实现方法<br>在_config.yml文件中设置skip_render<br>使用编辑器打开 Hexo 目录下的_config.yml文件，找到skip_render</p><p>skip_render一般有以下四种常用参数：</p><ul><li>跳过source目录下的 test.html:<br>skip_render: test.html</li><li>跳过source目录下 test 文件夹内所有文件：skip_render: test/*</li><li>跳过source目录下 test 文件夹内所有文件包括子文件夹以及子文件夹内的文件：<br>skip_render: test/**</li><li>跳过多个路径：<figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">skip_render:</span></span><br><span class="line"> <span class="bullet">-</span> <span class="string">test.html</span></span><br><span class="line"> <span class="bullet">-</span> <span class="string">test/*</span></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure></li><li>不渲染 md 文件<br>skip_render: test/*.md 单个文件夹下指定类型文件</li></ul><h2 id="用GitHub-Actions自动部署Hexo"><a href="#用GitHub-Actions自动部署Hexo" class="headerlink" title="用GitHub Actions自动部署Hexo"></a>用GitHub Actions自动部署Hexo</h2><h3 id="GitHub-仓库"><a href="#GitHub-仓库" class="headerlink" title="GitHub 仓库"></a>GitHub 仓库</h3><p>我们需要准备一个部署博客的仓库，一般命名为 .github.io 这种形式，<br>同时在本仓库上再创建一个分支用于保存 Hexo 开发源码。我这里使用建好的 hexo-blog-backup 分支进行 Hexo 开发源码备份，使用 master 分支进行博客源码部署。</p><p>提醒，这里也可以建两个仓库分别进行博客源码和 Hexo 开发源码的保存，跟建两个分支一样。</p><p>在gitee创建一个</p><h3 id="生成部署密钥"><a href="#生成部署密钥" class="headerlink" title="生成部署密钥"></a>生成部署密钥</h3><p>在 Git Bash Here 中执行<br><code>ssh-keygen -f github-deploy-key</code><br>会在当前目录中生成两个文件，私钥文件 github-deploy-key 和公钥文件 github-deploy-key.pub</p><h4 id="私钥"><a href="#私钥" class="headerlink" title="私钥"></a>私钥</h4><p>复制 github-deploy-key 文件内容，在 myblog 仓库 Settings -&gt; Secrets -&gt; New repository secret 页面上添加。<br>在 Name 输入框填写 HEXO_DEPLOY_PRI<br>在 Value 输入框填写 github-deploy-key 文件内容</p><p>本地私钥的话是为了有权限往 Gitee 仓库推送代码。因为现在是两个不同的平台之间同步代码，所以需拉取 Github 上博客的公开仓库，然后推送到 Gitee 的目标仓库。</p><p>另外建一个用于同步到 gitee 的私钥，用于存储 gitee 的密码<br>在 Name 输入框填写 GITEE_PASSWORD<br>在 Value 输入框填写 gitee 的密码</p><p>Gitee 的本地密码用处是后续需要脚本模拟人工操作，部署 Gitee Pages，因为 Gitee Pages 每次更新都需要手动点击部署按钮。</p><h4 id="公钥"><a href="#公钥" class="headerlink" title="公钥"></a>公钥</h4><p>公钥被上传的仓库代表着要被部署的仓库<br>复制 github-deploy-key.pub 文件内容，在 your.github.io 仓库 Settings -&gt; Deploy keys -&gt; Add deploy key 页面上添加。</p><p>在 Title 输入框填写 HEXO_DEPLOY_PUB<br>在 Key 输入框填写 github-deploy-key.pub 文件内容<br>勾选 Allow write access 选项</p><p>公钥需要添加到 Gitee 中：</p><h3 id="配置Hexo-deploy"><a href="#配置Hexo-deploy" class="headerlink" title="配置Hexo deploy"></a>配置Hexo deploy</h3><p>打开代码仓库中的_config.yml<br>将 git 存储库从 http 形式更改为 ssh 形式。<br>发布部署文件的的分支应该仓库配置的分支一样</p><figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">git@github.com:moshuying/moshuying.github.io.git</span></span><br><span class="line">  <span class="comment"># example, https://github.com/hexojs/hexojs.github.io</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></tbody></table></figure><h3 id="我的完整配置"><a href="#我的完整配置" class="headerlink" title="我的完整配置"></a>我的完整配置</h3><p><a href="http://evolly.one/p/65512.html">http://evolly.one/p/65512.html</a></p><figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Action 的名字</span></span><br><span class="line"><span class="attr">name:</span> <span class="string">Hexo</span> <span class="string">Auto</span> <span class="string">Deploy</span></span><br><span class="line"></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="comment"># 触发条件1：main 分支收到 push 后执行任务。</span></span><br><span class="line">  <span class="attr">push:</span></span><br><span class="line">    <span class="attr">branches:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">main</span></span><br><span class="line">  <span class="comment"># 触发条件2：手动按钮</span></span><br><span class="line">  <span class="attr">workflow_dispatch:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 这里放环境变量,需要替换成你自己的</span></span><br><span class="line"><span class="attr">env:</span></span><br><span class="line">  <span class="comment"># Hexo 编译后使用此 git 用户部署到 github 仓库</span></span><br><span class="line">  <span class="attr">GIT_USER:</span> <span class="string">Arts</span></span><br><span class="line">  <span class="comment"># Hexo 编译后使用此 git 邮箱部署到 github 仓库</span></span><br><span class="line">  <span class="attr">GIT_EMAIL:</span> <span class="number">1184664659</span><span class="string">@qq.com</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Hexo 编译后要部署的 github 仓库</span></span><br><span class="line">  <span class="attr">GIT_DEPLOY_REPO:</span> <span class="string">wenkexia/wenkexia.github.io</span></span><br><span class="line">  <span class="comment"># Hexo 编译后要部署到的分支</span></span><br><span class="line">  <span class="attr">GIT_DEPLOY_BRANCH:</span> <span class="string">main</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Hexo 编译后使用此 gitee 用户部署到gitee仓库</span></span><br><span class="line">  <span class="attr">GITEE_USER:</span> <span class="string">wenkex</span></span><br><span class="line">  <span class="comment"># Hexo 编译后要部署的 gitee 仓库</span></span><br><span class="line">  <span class="attr">GITEE_DEPLOY_REPO:</span> <span class="string">wenkex/wenkex</span></span><br><span class="line">  <span class="comment"># Hexo 编译后要部署到的分支</span></span><br><span class="line">  <span class="attr">GITEE_DEPLOY_BRANCH:</span> <span class="string">master</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 注意替换为你的 GitHub 源仓库地址</span></span><br><span class="line">  <span class="attr">GIT_SOURCE_REPO:</span> <span class="string">git@github.com:wenkexia/wenkexia.github.io.git</span></span><br><span class="line">  <span class="comment"># 注意替换为你的 Gitee 目标仓库地址</span></span><br><span class="line">  <span class="attr">GITEE_DESTINATION_REPO:</span> <span class="string">git@gitee.com:wenkex/wenkex.git</span></span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">build:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">Build</span> <span class="string">on</span> <span class="string">node</span> <span class="string">${{</span> <span class="string">matrix.node_version</span> <span class="string">}}</span> <span class="string">and</span> <span class="string">${{</span> <span class="string">matrix.os</span> <span class="string">}}</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">    <span class="attr">if:</span> <span class="string">github.event.repository.owner.id</span> <span class="string">==</span> <span class="string">github.event.sender.id</span></span><br><span class="line">    <span class="attr">strategy:</span></span><br><span class="line">      <span class="attr">matrix:</span></span><br><span class="line">        <span class="attr">os:</span> [<span class="string">ubuntu-18.04</span>]</span><br><span class="line">        <span class="attr">node_version:</span> [<span class="number">16.13</span><span class="number">.0</span>]</span><br><span class="line"></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">      <span class="comment"># 每个name表示一个步骤:step</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Checkout</span> <span class="comment">#步骤名称。</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/checkout@v2</span>  <span class="comment">#Checkout 一个 git 仓库到容器</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Checkout</span> <span class="string">deploy</span> <span class="string">repo</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/checkout@v2</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">repository:</span> <span class="string">${{</span> <span class="string">env.GIT_DEPLOY_REPO</span> <span class="string">}}</span></span><br><span class="line">          <span class="attr">ref:</span> <span class="string">${{</span> <span class="string">env.GIT_DEPLOY_BRANCH</span> <span class="string">}}</span></span><br><span class="line">          <span class="attr">path:</span> <span class="string">.deploy_git</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Use</span> <span class="string">Node.js</span> <span class="string">${{</span> <span class="string">matrix.node_version</span> <span class="string">}}</span></span><br><span class="line">        <span class="comment"># 设置 node.js 环境</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/setup-node@v1</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">node-version:</span> <span class="string">${{</span> <span class="string">matrix.node_version</span> <span class="string">}}</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Configuration</span> <span class="string">environment</span></span><br><span class="line">        <span class="attr">env:</span> <span class="comment">#该步骤所需的环境变量</span></span><br><span class="line">          <span class="attr">HEXO_DEPLOY_PRI:</span> <span class="string">${{secrets.HEXO_DEPLOY_PRI}}</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span> <span class="comment">#该步骤运行的命令或者 action。</span></span><br><span class="line">          <span class="string">sudo</span> <span class="string">timedatectl</span> <span class="string">set-timezone</span> <span class="string">"Asia/Shanghai"</span></span><br><span class="line">          <span class="string">mkdir</span> <span class="string">-p</span> <span class="string">~/.ssh/</span></span><br><span class="line">          <span class="string">echo</span> <span class="string">"$HEXO_DEPLOY_PRI"</span> <span class="string">&gt;</span> <span class="string">~/.ssh/id_rsa</span></span><br><span class="line">          <span class="string">chmod</span> <span class="number">600</span> <span class="string">~/.ssh/id_rsa</span></span><br><span class="line">          <span class="string">ssh-keyscan</span> <span class="string">-t</span> <span class="string">rsa</span> <span class="string">github.com</span> <span class="string">&gt;&gt;</span> <span class="string">~/.ssh/known_hosts</span></span><br><span class="line">          <span class="comment"># coding 已取消同步</span></span><br><span class="line">          <span class="string">ssh-keyscan</span> <span class="string">-t</span> <span class="string">rsa</span> <span class="string">e.coding.net</span> <span class="string">&gt;&gt;</span> <span class="string">~/.ssh/known_hosts</span></span><br><span class="line">          <span class="string">ssh-keyscan</span> <span class="string">-t</span> <span class="string">rsa</span> <span class="string">gitee.com</span> <span class="string">&gt;&gt;</span> <span class="string">~/.ssh/known_hosts</span></span><br><span class="line">          <span class="string">git</span> <span class="string">config</span> <span class="string">--global</span> <span class="string">user.name</span> <span class="string">$GIT_USER</span></span><br><span class="line">          <span class="string">git</span> <span class="string">config</span> <span class="string">--global</span> <span class="string">user.email</span> <span class="string">$GIT_EMAIL</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Install</span> <span class="string">dependencies</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">          npm i -g hexo-cli</span></span><br><span class="line"><span class="string">          npm i</span></span><br><span class="line"><span class="string"></span>      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Deploy</span> <span class="string">hexo</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">          hexo clean &amp;&amp; hexo generate &amp;&amp; hexo deploy</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">      <span class="comment"># # 以下为同步到gitee，如果你已经可以一键直接部署到github,gitee就不用这个</span></span><br><span class="line">      <span class="comment"># - name: Sync to Gitee</span></span><br><span class="line">      <span class="comment">#   uses: wearerequired/git-mirror-action@master</span></span><br><span class="line">      <span class="comment">#   env:</span></span><br><span class="line">      <span class="comment">#     # 直接使用了 HEXO_DEPLOY_PRI</span></span><br><span class="line">      <span class="comment">#     SSH_PRIVATE_KEY: ${{ secrets.HEXO_DEPLOY_PRI }}</span></span><br><span class="line">      <span class="comment">#   with:</span></span><br><span class="line">      <span class="comment">#     # GitHub 源仓库地址</span></span><br><span class="line">      <span class="comment">#     source-repo: ${{ env.GIT_SOURCE_REPO }}</span></span><br><span class="line">      <span class="comment">#     # Gitee 目标仓库地址</span></span><br><span class="line">      <span class="comment">#     destination-repo: ${{ env.GITEE_DESTINATION_REPO }}</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Build</span> <span class="string">Gitee</span> <span class="string">Pages</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">yanglbme/gitee-pages-action@main</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="comment"># 你的 Gitee 用户名</span></span><br><span class="line">          <span class="attr">gitee-username:</span> <span class="string">${{</span> <span class="string">env.GITEE_USER</span> <span class="string">}}</span></span><br><span class="line">          <span class="comment"># 注意在 Settings-&gt;Secrets 配置 GITEE_PASSWORD</span></span><br><span class="line">          <span class="attr">gitee-password:</span> <span class="string">${{</span> <span class="string">secrets.GITEE_PASSWORD</span> <span class="string">}}</span></span><br><span class="line">          <span class="comment"># 你的 Gitee 仓库，仓库名严格区分大小写，请准确填写，否则会出错</span></span><br><span class="line">          <span class="attr">gitee-repo:</span> <span class="string">${{</span> <span class="string">env.GITEE_DEPLOY_REPO</span> <span class="string">}}</span></span><br><span class="line">          <span class="comment"># 要部署的分支，默认是 master，若是其他分支，则需要指定（指定的分支必须存在）</span></span><br><span class="line">          <span class="attr">branch:</span> <span class="string">${{</span> <span class="string">env.GITEE_DEPLOY_BRANCH</span> <span class="string">}}</span></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h2 id="在线编辑Hexo的最佳方案"><a href="#在线编辑Hexo的最佳方案" class="headerlink" title="在线编辑Hexo的最佳方案"></a>在线编辑Hexo的最佳方案</h2><p>网上看Hexo的在线编辑方案，主流的有两种：</p><p>HexoPlusPlus<br>语雀<br>这两个方案大家百度一下都有教程。我不多介绍了。（看完你会发现我这个方案才是真香）</p><p>如果你也是使用了自动化部署Hexo的方案（就是推送源文件到仓库，然后借助Github Actions或 vercel这种自动部署的方案），只需要用Github的官方在线编辑器就可以完美解决出门在外临时想用电脑、手机写文并发布的需求。</p><p>只需要打开GitHub，打开你的【 hexo 源文件仓库】页面，按一下.（句号键） 或者 把 github.com 改成 github.dev，<br>就能在线编辑仓库的文件。我们在对应的文件夹新建、删除、修改后，commit一下就好了。</p><p>注意，在线编辑器，commit后是不需要push的哦。</p><h2 id="使用文章资源文件夹-弃用，用图床"><a href="#使用文章资源文件夹-弃用，用图床" class="headerlink" title="使用文章资源文件夹(弃用，用图床)"></a>使用文章资源文件夹(弃用，用图床)</h2><p>在config.yaml文件中更改一下配置：<br><code>post_asset_folder: true</code><br>当该配置被应用后，使用hexo new命令创建新文章时，会生成相同名字的文件夹，也就是文章资源文件夹。<br>此时应该使用这样的方式来引入图片：<br><code>{% asset_img image.jpg 这是一张图片 %}</code></p><ul><li>图片插件</li></ul><p>插件hexo-renderer-marked解决了这个问题。可以只用<code>npm install hexo-renderer-marked</code>命令直接安装，之后在config.yaml中更改配置如下：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">post_asset_folder: true</span><br><span class="line">marked:</span><br><span class="line">  prependRoot: true</span><br><span class="line">  postAsset: true</span><br></pre></td></tr></tbody></table></figure><h2 id="简化部署-弃用"><a href="#简化部署-弃用" class="headerlink" title="简化部署(弃用)"></a>简化部署(弃用)</h2><p>用了github action ，就没必要设置这个了</p><p>在package.json中<br>添加<code>"cgd": "hexo clean &amp;&amp; hexo g &amp;&amp; hexo d"</code><br>以后就可以用<code>npm run cgd</code>直接部署上线</p><figure class="highlight json"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"scripts"</span>: {</span><br><span class="line">  <span class="attr">"build"</span>: <span class="string">"hexo generate"</span>,</span><br><span class="line">  <span class="attr">"clean"</span>: <span class="string">"hexo clean"</span>,</span><br><span class="line">  <span class="attr">"deploy"</span>: <span class="string">"hexo deploy"</span>,</span><br><span class="line">  <span class="attr">"server"</span>: <span class="string">"hexo server"</span>,</span><br><span class="line">  <span class="attr">"cgs"</span>: <span class="string">"hexo clean &amp;&amp; hexo g &amp;&amp; hexo s"</span>,</span><br><span class="line">  <span class="attr">"cgd"</span>: <span class="string">"hexo clean &amp;&amp; hexo g &amp;&amp; hexo d"</span></span><br><span class="line">},</span><br></pre></td></tr></tbody></table></figure><h2 id="增加上传功能-弃用"><a href="#增加上传功能-弃用" class="headerlink" title="增加上传功能(弃用)"></a>增加上传功能(弃用)</h2><p>在博客根目录下运行下列指令</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">echo</span> <span class="string">"hexo clean &amp;&amp; hexo g -d"</span><span class="string">&gt;hexo-deploy.bat</span> <span class="comment">#生成一个内容为"hexo clean &amp;&amp; hexo g -d"，名为"hexo-deploy"的bat文件。</span></span><br><span class="line"><span class="comment">#配置_config.yml文件，</span></span><br><span class="line"><span class="string">echo</span> <span class="string">admin:&gt;&gt;"_config.yml"</span></span><br><span class="line"><span class="string">echo</span> <span class="string">"  deployCommand: 'hexo-deploy.bat'"</span><span class="string">&gt;&gt;"_config.yml"</span></span><br><span class="line"><span class="comment">#开启hexo服务</span></span><br><span class="line"><span class="string">hexo</span> <span class="string">server</span> <span class="string">-d</span></span><br></pre></td></tr></tbody></table></figure><p>这个教程是对于github的部署的。</p><p>如果想用来管理gitee的博客，建议修改成<code>echo "hexo clean &amp;&amp; hexo g -d &amp;&amp; start https://gitee.com/用户名/用户名/pages"&gt;hexo-deploy.bat</code>，这样方便在网页端同步更新gitee page。<br>在网页中编辑完，直接左上角Deploy，直接点deploy按钮，就可以完成博客的部署。</p><p>可能遇到的问题(每次都要输入密码)：查看一下你的_config.yml，将文档最后的deploy的repo从http改为git@github类型。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Hexo 是一个快速，简单且功能强大的博客框架。如果你用 Markdown 写博客，Hexo 可以在几秒内生成带有精美主题的静态文件。&lt;/p&gt;
&lt;p&gt;1.安装Node.js&lt;br&gt;2.安装Git并配置环境变量&lt;/p&gt;
&lt;h2 id=&quot;安装Hexo&quot;&gt;&lt;a href=&quot;#安装</summary>
      
    
    
    
    <category term="博客相关" scheme="https://wenkex.gitee.io/categories/%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3/"/>
    
    
  </entry>
  
  <entry>
    <title>java基本数据结构</title>
    <link href="https://wenkex.gitee.io/2022/101950914.html"/>
    <id>https://wenkex.gitee.io/2022/101950914.html</id>
    <published>2022-10-19T01:07:00.000Z</published>
    <updated>2022-10-19T01:43:13.291Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-基本数据类型"><a href="#1-基本数据类型" class="headerlink" title="1. 基本数据类型"></a>1. 基本数据类型</h2><table><thead><tr><th>数据类型</th><th>名称</th><th>内存大小(B) 注：1B = 8b</th></tr></thead><tbody><tr><td>byte</td><td>字节型</td><td>1</td></tr><tr><td>short</td><td>字符型</td><td>2</td></tr><tr><td>int</td><td>短整型</td><td>4</td></tr><tr><td>long</td><td>整型</td><td>8</td></tr><tr><td>float</td><td>单精度浮点型</td><td>4</td></tr><tr><td>double</td><td>双精度浮点型</td><td>8</td></tr><tr><td>char</td><td>字符型</td><td>2</td></tr><tr><td>boolean</td><td>布尔</td><td>不同情况下不同</td></tr></tbody></table><h3 id="1-1-整数型"><a href="#1-1-整数型" class="headerlink" title="1.1. 整数型"></a>1.1. 整数型</h3><ul><li>short型（短整型）数据在内存中占用2个字节</li><li>long型（长整型）数据在内存中占用8个字节。需要加l后缀<code>long num = 123L</code></li><li>int型（整型）数据在内存中占用4个字节。</li><li>byte型（字节型）数据在内存中占用1个字节，表示的存储数据范围为：-128~127。</li></ul><h3 id="1-2-浮点型"><a href="#1-2-浮点型" class="headerlink" title="1.2. 浮点型"></a>1.2. 浮点型</h3><ul><li>float型（单精度浮点型）数据在内存中占用4个字节。<br>  float t = 3.1f<pre><code>  f转为double型</code></pre></li><li>double型（双精度浮点型）数据在内存中占用8个字节。<br>  一般小数默认是double型</li></ul><h3 id="1-3-布尔型-boolean"><a href="#1-3-布尔型-boolean" class="headerlink" title="1.3. 布尔型(boolean)"></a>1.3. 布尔型(boolean)</h3><p>boolean：数据值只有true或false，适用于逻辑计算。</p><h3 id="1-4-字符型-char"><a href="#1-4-字符型-char" class="headerlink" title="1.4. 字符型(char)"></a>1.4. 字符型(char)</h3><p>char每个字符占2个字节，定义时用单引号’ ‘<br>char类型的变量在参与计算时，类型自动提升为Int,查询ascii码表</p><p>A的ASCII码是65，a的ASCII码是97。</p><p>小写字母的ASCII码是大写字母的ASCII码数值+32。</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//char将整数转换为对应的字符</span></span><br><span class="line">(<span class="keyword">char</span>) (<span class="number">6</span>+ <span class="string">'a'</span>);</span><br></pre></td></tr></tbody></table></figure><h2 id="2-内置包装类"><a href="#2-内置包装类" class="headerlink" title="2. 内置包装类"></a>2. 内置包装类</h2><p>在 Java 的设计中提倡一种思想，即一切皆对象。但是从数据类型的划分中，我们知道 Java 中的数据类型分为基本数据类型和引用数据类型，但是基本数据类型怎么能够称为对象呢？于是 Java 为每种基本数据类型分别设计了对应的类，称之为包装类（Wrapper Classes），也有地方称为外覆类或数据类型类。<br>| ****   | ****       |<br>|:——:|:———-:|<br>| 基本数据类型 | 包装类        |<br>| byte   | Byte       |<br>| short  | Short      |<br>| int    | Integer    |<br>| long   | Long       |<br>| char   | Character  |<br>| float  | Float      |<br>| double | Double     |<br>|boolean |  Boolean   |</p><h3 id="2-1-装箱和拆箱"><a href="#2-1-装箱和拆箱" class="headerlink" title="2.1. 装箱和拆箱"></a>2.1. 装箱和拆箱</h3><p>基本数据类型转换为包装类的过程称为装箱，例如把 int 包装成 Integer 类的对象；<br>包装类变为基本数据类型的过程称为拆箱，例如把 Integer 类的对象重新简化为 int。</p><p>手动实例化一个包装类称为手动拆箱装箱。Java 1.5 版本之前必须手动拆箱装箱，之后可以自动拆箱装箱，也就是在进行基本数据类型和对应的包装类转换时，系统将自动进行装箱及拆箱操作，不用在进行手工操作</p><h3 id="2-2-Integer"><a href="#2-2-Integer" class="headerlink" title="2.2. Integer"></a>2.2. Integer</h3><table><thead><tr><th>方法</th><th>返回值</th><th>功能</th></tr></thead><tbody><tr><td>byteValue()</td><td>byte</td><td>以 byte 类型返回该 Integer 的值</td></tr><tr><td>shortValue()</td><td>short</td><td>以 short 类型返回该 Integer 的值</td></tr><tr><td>intValue()</td><td>int</td><td>以 int 类型返回该 Integer 的值</td></tr><tr><td>toString()</td><td>String</td><td>返回一个表示该 Integer 值的 String 对象</td></tr><tr><td>equals(Object obj)</td><td>boolean</td><td>比较此对象与指定对象是否相等</td></tr><tr><td>compareTo(Integer anotherlnteger)</td><td>int</td><td>在数字上比较两个 Integer 对象如相等返回 0；如调用对象的数值小于 anotherlnteger 的数值，则返回负值；</td></tr><tr><td>valueOf(String s)</td><td>Integer</td><td>返回保存指定的 String 值的 Integer 对象</td></tr><tr><td>parseInt(String s)</td><td>int</td><td>将数字字符串转换为 int 数值</td></tr></tbody></table><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//字符串转为int</span></span><br><span class="line">Integer.parseInt(<span class="string">"1234"</span>)</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h3 id="2-3-Character-类"><a href="#2-3-Character-类" class="headerlink" title="2.3. Character 类"></a>2.3. Character 类</h3><p>Character 类用于对单个字符进行操作。</p><p>Character 类在对象中包装一个基本类型 char 的值</p><p>在实际开发过程中，我们经常会遇到需要使用对象，而不是内置数据类型的情况。为了解决这个问题，Java语言为内置数据类型char提供了包装类Character类。</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Character ch = <span class="keyword">new</span> Character(<span class="string">'a'</span>);  <span class="comment">//创建一个Character类对象</span></span><br></pre></td></tr></tbody></table></figure><p>Character类的方法<br>    1.isLetter()是否是一个字母<br>    2.isDigit()是否是一个数字字符<br>    3.isWhitespace()是否是一个空白字符<br>    4.isUpperCase()是否是大写字母<br>    5.isLowerCase()是否是小写字母<br>    6.toUpperCase()指定字母的大写形式<br>    7.toLowerCase()指定字母的小写形式<br>    8.toString()返回字符的字符串形式，字符串的长度仅为1</p><p>在某些情况下，Java编译器会自动创建一个Character对象。</p><p>例如，将一个char类型的参数传递给需要一个Character类型参数的方法时，那么编译器会自动地将char类型参数转换为Character对象。 这种特征称为装箱，反过来称为拆箱。</p><h2 id="3-引用数据类型"><a href="#3-引用数据类型" class="headerlink" title="3. 引用数据类型"></a>3. 引用数据类型</h2><p>引用数据类型有：类、接口类型、数组类型、String类型，枚举类型、注解类型。</p><p>区别</p><p>1.基本数据类型在被创建时，在栈上给其划分一块内存，将数值直接存储在栈上。<br>2.引用数据类型在被创建时，首先要在栈上给其引用（句柄）分配一块内存，而对象的具体信息都存储在堆内存上，然后由栈上面的引用指向堆中对象的地址。</p><p>3.在数据做为参数传递的时候，基本数据类型是值传递，而引用数据类型是引用传递（地址传递）。</p><h3 id="3-1-null"><a href="#3-1-null" class="headerlink" title="3.1. null"></a>3.1. null</h3><p>引用类型的0值 就是 null.</p><p>当我们将 null 赋给arr 这个引用类型时，代表 arr 这个引用，不指向任何对象.<br>null.任何东西，都会发生空指针异常的错误。例如<code>int[] arr =null;</code><br>这是因为null 赋给了 arr ，arr 没有指向任何一个数组对象，在堆上也没有开辟内存空间，所以我们也就无法求它的长度.</p><h2 id="4-String字符串类"><a href="#4-String字符串类" class="headerlink" title="4. String字符串类"></a>4. String字符串类</h2><h3 id="4-1-创建字符串"><a href="#4-1-创建字符串" class="headerlink" title="4.1. 创建字符串"></a>4.1. 创建字符串</h3><p>String 字符串是一种不可变对象，一旦创建了 String 对象，那它的值就无法改变了。如果想对字符串做修改，需要使用StringBuffer&amp;StringBuilder类。<br>一旦String对象被创建并初始化后，内部的状态数据就会保持不变</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.直接创建方式 创建的字符串存储在公共池中，而 new 创建的字符串对象在堆上：</span></span><br><span class="line">String str = <span class="string">"Runoob"</span>;    <span class="comment">//首先在堆内存上的串池中查找是否存在该字符串，没有则创建，并将地址赋给在栈内存中的对应变量；有则复用</span></span><br><span class="line">String str2=<span class="keyword">new</span> String (<span class="string">"Runoob"</span>);  <span class="comment">//每次new都在堆内存中重新开辟新空间</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 传递一个字符数组，根据字符数组的内容再创建一个新的字符串对象,需要修改字符串时使用</span></span><br><span class="line"><span class="keyword">char</span> [] chs={<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>};</span><br><span class="line">String s4= <span class="keyword">new</span> String (chs);</span><br><span class="line"></span><br><span class="line"><span class="comment">//传递一个字节数组</span></span><br><span class="line"><span class="keyword">byte</span>[] bytes = {<span class="number">97</span>,<span class="number">98</span>,<span class="number">99</span>,<span class="number">100</span>}</span><br><span class="line">String s5=<span class="keyword">new</span> String (bytes)</span><br><span class="line"><span class="comment">//s5输出是abcd</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">String str2=<span class="string">"abcd"</span>;</span><br><span class="line"><span class="keyword">int</span> len = str2.substring(<span class="number">1</span>,<span class="number">3</span>).replace(<span class="string">"a"</span>,<span class="string">"b"</span>).length();   <span class="comment">//链式编程</span></span><br><span class="line">System.out.println(len);</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">String str1 = <span class="string">"hello world"</span>;</span><br><span class="line">String str2 = <span class="keyword">new</span> String(<span class="string">"hello world"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//将字符串转换为字符数组</span></span><br><span class="line"><span class="keyword">char</span> chararr[]=str1.toCharArray();</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h3 id="4-2-常用方法"><a href="#4-2-常用方法" class="headerlink" title="4.2. 常用方法"></a>4.2. 常用方法</h3><p>String 没有反转函数</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> len = str.length();   <span class="comment">//int length()方法：返回字符串对象包含的字符数。</span></span><br><span class="line">str1.concat(str2); <span class="comment">//String concat(String str)：连接两个字符串</span></span><br><span class="line"><span class="keyword">char</span> c = str.charAt(<span class="number">3</span>);  <span class="comment">//char charAt(int index)方法：返回指定索引出的字符</span></span><br><span class="line"></span><br><span class="line">str.substring(<span class="number">1</span>,<span class="number">3</span>)   <span class="comment">//String substring(int start ,int end)截取字符串  左闭右开</span></span><br><span class="line"><span class="comment">// 时间是O(n)，但是使用substr申请了额外空间，所以空间复杂度是O(n)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 替换</span></span><br><span class="line">str.replace(oldChar, newChar)    </span><br><span class="line"></span><br><span class="line">str.indexOf(str)   <span class="comment">//int indexOf(String str)方法，用于为首次出现传递的子字符串作为参数返回String内的索引。如果子字符串str不存在，则返回-1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//String toUpperCase()：将字符串中的所有字符从小写改写为大写</span></span><br><span class="line"><span class="comment">//String toLowerCase()：将字符串中的所有字符从大写改写为小写</span></span><br><span class="line">String str2 = str1.toUpperCase(); </span><br><span class="line">String str3 = str2.toLowerCase();</span><br><span class="line"></span><br><span class="line"><span class="comment">//字符串反转</span></span><br><span class="line">StringBuilder sb= <span class="keyword">new</span> StringBuilder(<span class="string">"abc"</span>);</span><br><span class="line">sb.reverse().toString();</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h4 id="4-2-1-字符串排序"><a href="#4-2-1-字符串排序" class="headerlink" title="4.2.1. 字符串排序"></a>4.2.1. 字符串排序</h4><p>在 Java 中，字符串是不可变的，这意味着如果一个字符串对象已经被创建过一次，那么在内存中就不能改变字符串。</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 字母是ASCII码进行存储</span></span><br><span class="line">String str = <span class="string">"abcde"</span></span><br><span class="line"><span class="keyword">char</span>[] str1 = str.toCharArray();  #将字符串转换为字符数组</span><br><span class="line">Arrays.sort(str1);   #对字符数组进行排序</span><br></pre></td></tr></tbody></table></figure><h4 id="4-2-2-删除字符串"><a href="#4-2-2-删除字符串" class="headerlink" title="4.2.2. 删除字符串"></a>4.2.2. 删除字符串</h4><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1.替换函数，替换成空白</span></span><br><span class="line">String test  = <span class="string">"chaojimali"</span>;</span><br><span class="line">String test = test.replace(<span class="string">"chaoji"</span>,<span class="string">""</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 2.截取函数，删除字符</span></span><br><span class="line">String test = （<span class="string">"chaojimali"</span>）;</span><br><span class="line">test = test.substring(<span class="number">5</span>,<span class="number">12</span>);</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h4 id="4-2-3-分割字符串"><a href="#4-2-3-分割字符串" class="headerlink" title="4.2.3. 分割字符串"></a>4.2.3. 分割字符串</h4><p>String[] split(String regex, int limit)：根据正则表达式来匹配出分隔符,拆分字符串，将分割后的结果存入字符数组中。<br>参数：<br>regex为正则表达式分隔符, . 、 $、 | 和 * 等转义字符，必须得加 \；多个分隔符，可以用 | 作为连字符。<br>limit为分割份数</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">String str = <span class="string">"Hello World A.B.C"</span></span><br><span class="line">String[] res = str.split(<span class="string">" "</span>);<span class="comment">//res = {"Hello","World","A.B.C"}</span></span><br><span class="line">String[] res = str.split(<span class="string">" "</span>,<span class="number">2</span>);<span class="comment">//res = {"Hello","World A.B.C"}</span></span><br><span class="line">String[] res = str.split(<span class="string">"\\."</span>);<span class="comment">//res = {"Hello World A","B","C"}</span></span><br><span class="line"></span><br><span class="line">String str = <span class="string">"A=1 and B=2 or C=3"</span></span><br><span class="line">String[] res = str.split(<span class="string">"and|or"</span>);<span class="comment">//res = {"A=1 "," B=2 "," C=3"}</span></span><br><span class="line"></span><br><span class="line">String[] res=str.split(<span class="string">"\s+"</span>) <span class="comment">//以空格、换行符、回车为分隔线，相邻的多个空格、换行符、回车仍然视为只有一个,分隔后返回字符数组。</span></span><br><span class="line">[<span class="string">""</span>, <span class="string">"this"</span>, <span class="string">"is"</span>, <span class="string">"a"</span>, <span class="string">"sentence"</span>]</span><br><span class="line">String[] res=str.trim().split(<span class="string">"\s+"</span>)    <span class="comment">//使用str.trim() 去除头尾空格  ["this", "is", "a", "sentence"]</span></span><br></pre></td></tr></tbody></table></figure><h4 id="4-2-4-比较字符串"><a href="#4-2-4-比较字符串" class="headerlink" title="4.2.4. 比较字符串"></a>4.2.4. 比较字符串</h4><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">boolean</span> b =str1.equals(str2);  <span class="comment">//完全相同</span></span><br><span class="line"><span class="keyword">boolean</span> b2=str1.equalsIgnoreCase(str2); <span class="comment">//忽略大小写</span></span><br><span class="line">System.out.println(b);</span><br></pre></td></tr></tbody></table></figure><h4 id="4-2-5-把字符串转换为相应的数值"><a href="#4-2-5-把字符串转换为相应的数值" class="headerlink" title="4.2.5. 把字符串转换为相应的数值"></a>4.2.5. 把字符串转换为相应的数值</h4><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.String转int型：</span></span><br><span class="line"><span class="keyword">int</span> i = Integer.parseInt(String str)   <span class="comment">//第一种</span></span><br><span class="line"><span class="keyword">int</span> i = Integer.valueOf(s).intValue(); <span class="comment">//第二种</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//2.String转long型：</span></span><br><span class="line"><span class="keyword">long</span> l = Long.parseLong(String str);</span><br><span class="line"></span><br><span class="line"><span class="comment">//3.String转double型：</span></span><br><span class="line"><span class="keyword">double</span> d = Double.valueOf(String str).doubleValue();<span class="comment">//doubleValue()不要也可</span></span><br><span class="line"><span class="keyword">double</span> d = Double.parseDouble(str);</span><br><span class="line"></span><br><span class="line"><span class="comment">//4.int转string型：</span></span><br><span class="line">String s = String.valueOf(i)； <span class="comment">//第一种</span></span><br><span class="line">String s = Integer.toString(i); <span class="comment">//第二种</span></span><br><span class="line">String s = <span class="string">""</span> + i;  <span class="comment">//第三种</span></span><br></pre></td></tr></tbody></table></figure><h4 id="4-2-6-统计字符"><a href="#4-2-6-统计字符" class="headerlink" title="4.2.6. 统计字符"></a>4.2.6. 统计字符</h4><p>统计—-计数器思想</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> big =<span class="number">0</span>,small=<span class="number">0</span>,number=<span class="number">0</span>; </span><br><span class="line">big++</span><br></pre></td></tr></tbody></table></figure><h4 id="4-2-7-格式化字符串"><a href="#4-2-7-格式化字符串" class="headerlink" title="4.2.7. 格式化字符串"></a>4.2.7. 格式化字符串</h4><p>我们知道输出格式化数字可以使用 printf() 和 format() 方法。</p><p>如下所示：</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">System.out.printf(<span class="string">"浮点型变量的值为 "</span> +</span><br><span class="line">                  <span class="string">"%f, 整型变量的值为 "</span> +</span><br><span class="line">                  <span class="string">" %d, 字符串变量的值为 "</span> +</span><br><span class="line">                  <span class="string">"is %s"</span>, floatVar, intVar, stringVar);</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h4 id="4-2-8-字符串存入字符数组"><a href="#4-2-8-字符串存入字符数组" class="headerlink" title="4.2.8. 字符串存入字符数组"></a>4.2.8. 字符串存入字符数组</h4><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(Character c : s.toCharArray()){</span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="4-3-为什么String需要不可变"><a href="#4-3-为什么String需要不可变" class="headerlink" title="4.3. 为什么String需要不可变"></a>4.3. 为什么String需要不可变</h3><h4 id="4-3-1-字符串常量池的实现"><a href="#4-3-1-字符串常量池的实现" class="headerlink" title="4.3.1. 字符串常量池的实现"></a>4.3.1. 字符串常量池的实现</h4><p>Java中，我们通常有两种方式创建字符串对象，一种是通过字符串字面量方式创建，就如上文的代码，另外一种就是通过 new 方式去创建，如 String c = new String(“string 3”);</p><p>而两者区别就在于通过字符串字面量的方式创建时，JVM 会现在字符串池中检查字符串内容是否已经存在，如果存在就会直接返回对应的引用，而不是再次分配内存进行创建，如果不存在就会分配在内存中创建的同时将字符串数据缓存在字符串池中，便于重用。正是是由于字符串的不可变，同样的字符串内容可以让 JVM 可以减少额外的内存分配操作，直接使用在字符串池中字符串对象即可，对性能提升和内存节省都大有好处。</p><p>关于字符串池，这里稍微简单介绍一下：Java 的字符串池属于 JVM 专门给指定的特殊内存区域，用来存储字符串字面量。在 Java 7 之前，分配于 JVM 的方法区内，属于常量池的一部分；而 Java7 之后字符串池被移至堆内存进行管理，这样的好处就是允许被 JVM 进行垃圾回收操作，将未被引用的字符串所占内存即使回收，以此节省内存。</p><h4 id="4-3-2-Hashcode-缓存"><a href="#4-3-2-Hashcode-缓存" class="headerlink" title="4.3.2. Hashcode 缓存"></a>4.3.2. Hashcode 缓存</h4><p>字符串作为基础的数据结构，大量地应用在一些集合容器之中，尤其是一些散列集合，在散列集合中，存放元素都要根据对象的 hashCode() 方法来确定元素的位置。由于字符串 hashcode 属性不会变更，保证了唯一性，使得类似 HashMap，HashSet 等容器才能实现相应的缓存功能。由于 String 的不可变，避免重复计算 hashcode，只有使用缓存的 hashcode 即可，这样一来大大提高了在散列集合中使用 String 对象的性能。</p><h4 id="4-3-3-线程安全"><a href="#4-3-3-线程安全" class="headerlink" title="4.3.3. 线程安全"></a>4.3.3. 线程安全</h4><p>在多线程中，只有不变的对象和值是线程安全的，可以在多个线程中共享数据。由于 String 天然的不可变，当一个线程”修改“了字符串的值，只会产生一个新的字符串对象，不会对其他线程的访问产生副作用，访问的都是同样的字符串数据，不需要任何同步操作。</p><h4 id="4-3-4-安全性"><a href="#4-3-4-安全性" class="headerlink" title="4.3.4. 安全性"></a>4.3.4. 安全性</h4><p>由于字符串无论在任何 Java 系统中都广泛使用，会用来存储敏感信息，如账号，密码，网络路径，文件处理等场景里，保证字符串 String 类的安全性就尤为重要了，如果字符串是可变的，容易被篡改，那我们就无法保证使用字符串进行操作时，它是安全的，很有可能出现 SQL 注入，访问危险文件等操作。</p><h3 id="4-4-StringBuilder"><a href="#4-4-StringBuilder" class="headerlink" title="4.4. StringBuilder"></a>4.4. StringBuilder</h3><p>StringBuilder可以看作一个容器，创建之后里面的内容是可变的<br>作用：拼接字符串，反转字符串</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 构造方法</span></span><br><span class="line">StringBuilder sb= <span class="keyword">new</span> StringBuilder(<span class="string">"abc"</span>);</span><br><span class="line">System.out.println(<span class="string">"sb"</span>);</span><br><span class="line">sb.append();  <span class="comment">//添加数据</span></span><br><span class="line">sb.reverse(); <span class="comment">//反转容器的内容</span></span><br><span class="line">sb.length();  <span class="comment">//返回长度(字符出现的个数)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 索引是5的位置替换成空格</span></span><br><span class="line">sb.setCharAt(<span class="number">5</span>, <span class="string">' '</span>);</span><br><span class="line"></span><br><span class="line">sb.replace()    <span class="comment">//void replace(int start, int end, String str) 根据索引把某部分替换成其它的。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 删除索引6(包含)至索引14(不包含)的字符串</span></span><br><span class="line">sb.delete(<span class="number">6</span>, <span class="number">14</span>);   <span class="comment">//void delete(int start, int end)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> StringBuffer <span class="title">deleteCharAt</span><span class="params">(<span class="keyword">int</span> index)</span>: 删除指定位置的字符，并返回本身</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> StringBuffer <span class="title">delete</span><span class="params">(<span class="keyword">int</span> start,<span class="keyword">int</span> end)</span>:删除从指定位置开始到指定位置结束的内容，并返回本身、</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="comment">// 指定位置0前插入0</span></span></span><br><span class="line"><span class="function">sb.<span class="title">insert</span><span class="params">(<span class="number">0</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">sb.toString();  <span class="comment">//把StringBuilder对象转为String对象</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取内容</span></span><br><span class="line"><span class="function"><span class="keyword">char</span> <span class="title">charAt</span><span class="params">(<span class="keyword">int</span> index)</span>，根据索引，得到相应字符。</span></span><br><span class="line"><span class="function">String <span class="title">substring</span><span class="params">(<span class="keyword">int</span> start)</span>，根据索引，以字符串形式截取尾部段。</span></span><br><span class="line"><span class="function">String <span class="title">substring</span><span class="params">(<span class="keyword">int</span> start, <span class="keyword">int</span> end)</span>，根据索引，以字符串形式截取内部段。</span></span><br><span class="line"><span class="function">String <span class="title">toString</span><span class="params">()</span>，<span class="comment">//把StringBuilder对象转为String对象</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="comment">// 返回匹配对应的索引</span></span></span><br><span class="line"><span class="function"><span class="comment">//只能判断字符串，不能判断某个字符是否在字符串内</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">indexOf</span><span class="params">(String str)</span>，输出第一个匹配的索引。</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">indexOf</span><span class="params">(String str, <span class="keyword">int</span> fromIndex)</span>，从指定的索引处开始，输出第一个匹配的索引。</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">lastIndexOf</span><span class="params">(String str)</span>，输出最后一个匹配的索引。</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">lastIndexOf</span><span class="params">(String str, <span class="keyword">int</span> fromIndex)</span>，从指定的索引处开始，输出最后一个匹配的索引。</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">sb.<span class="title">indexOf</span><span class="params">(str)</span>   <span class="comment">//int indexOf(String str)方法，用于为首次出现传递的子字符串作为参数返回String内的索引。如果子字符串str不存在，则返回-1</span></span></span><br><span class="line"><span class="function"></span></span><br></pre></td></tr></tbody></table></figure><h3 id="4-5-StringBuffer"><a href="#4-5-StringBuffer" class="headerlink" title="4.5. StringBuffer"></a>4.5. StringBuffer</h3><p> StringBuffer 和 StringBuilder，中文翻译为“字符串缓冲区”。</p><p>StringBuilder 类是 JDK 1.5 新增的类，它也代表可变字符串对象。实际上，StringBuilder 和 StringBuffer 功能基本相似，方法也差不多。不同的是，StringBuffer 是线程安全的，而 StringBuilder 则没有实现线程安全功能，所以性能略高。因此在通常情况下，如果需要创建一个内容可变的字符串对象，则应该优先考虑使用 StringBuilder 类。</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">public StringBuffer deleteCharAt(int index):删除指定位置的字符，并返回本身</span><br><span class="line">public StringBuffer delete(int start,int end):删除从指定位置开始到指定位置结束的内容，并返回本身、</span><br></pre></td></tr></tbody></table></figure><h3 id="4-6-StringJoiner"><a href="#4-6-StringJoiner" class="headerlink" title="4.6. StringJoiner"></a>4.6. StringJoiner</h3><p>是一个可变容器，方便拼接字符串</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">StringJoiner sj = <span class="keyword">new</span> StringJoiner(间隔符号)  <span class="comment">//指定拼接时的符号</span></span><br><span class="line">StringJoiner sj = <span class="keyword">new</span> StringJoiner(间隔符号，开始符号，结束符号)</span><br><span class="line"></span><br><span class="line">sj.add(<span class="string">""</span>)  <span class="comment">//添加元素</span></span><br><span class="line">sj.length()</span><br><span class="line">sj.toString()   <span class="comment">//转换为字符串```</span></span><br><span class="line">### 键盘录入扫描类</span><br><span class="line"></span><br><span class="line">```Java</span><br><span class="line"><span class="comment">// 导包</span></span><br><span class="line"><span class="keyword">import</span> Java.util.Scanner;</span><br><span class="line"><span class="comment">// 创建对象</span></span><br><span class="line">Scanner sc= <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 接受数据</span></span><br><span class="line"><span class="keyword">int</span> i = sc.nextInt();</span><br><span class="line"></span><br><span class="line"><span class="comment">// next和nextInt以空格或回车换行作为结束</span></span><br><span class="line"><span class="comment">// nextLine以回车换行作为结束</span></span><br></pre></td></tr></tbody></table></figure><h2 id="5-Java数组"><a href="#5-Java数组" class="headerlink" title="5. Java数组"></a>5. Java数组</h2><p>数组是一种容器，它用一组连续的内存空间来存储固定大小的相同数据类型(考虑隐形转换)元素，是一种线性表数据结构</p><h3 id="5-1-数组存储的弊端"><a href="#5-1-数组存储的弊端" class="headerlink" title="5.1. 数组存储的弊端"></a>5.1. 数组存储的弊端</h3><p> 数组中提供的方法非常限，没有对于添加、删除、插入数据等操作，非常不便，同时效率不高。</p><p>数组存储数据的特点：有序、可重复。(长度，顺序)不可变</p><h3 id="5-2-定义数组"><a href="#5-2-定义数组" class="headerlink" title="5.2. 定义数组"></a>5.2. 定义数组</h3><ul><li>1.<strong>静态初始化</strong>：手动指定数组元素，而数组的长度由系统（JVM）来决定；如果明确了要操作的具体数据，直接静态初始化即可</li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 语法格式：</span></span><br><span class="line">数组类型[] 数组名= <span class="keyword">new</span> 数组类型[]{元素<span class="number">1</span>,元素<span class="number">2</span>,…,元素n,};</span><br><span class="line"></span><br><span class="line">数组类型[] 数组名 = {元素<span class="number">1</span>,元素<span class="number">2</span>,…,元素n,};  <span class="comment">//简化定义</span></span><br><span class="line"></span><br><span class="line">String[] arr = {<span class="string">"ni"</span>,<span class="string">"hao "</span>,<span class="string">"ya"</span>}</span><br></pre></td></tr></tbody></table></figure><ul><li>2.<strong>动态初始化</strong>：手动指定数组长度，每个数组元素的初始值由系统来决定。【与静态初始化特点相反】；只明确元素具体个数</li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">数组类型[] 数组名= <span class="keyword">new</span> 数组类型[ length ];</span><br><span class="line"></span><br><span class="line">String[]  arr = <span class="keyword">new</span> String[<span class="number">5</span>]</span><br></pre></td></tr></tbody></table></figure><p>动态初始化数组默认初始化值规律<br>整数类型默认为0<br>浮点数型：0.0<br>字符型：’/u0000’ 即空格<br>布尔类型：false<br>引用数据类型：null</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//将字符串转换为字符数组</span></span><br><span class="line"><span class="keyword">char</span>[] str1 = str.toCharArray();</span><br></pre></td></tr></tbody></table></figure><h3 id="5-3-数组方法"><a href="#5-3-数组方法" class="headerlink" title="5.3. 数组方法"></a>5.3. 数组方法</h3><p>数组的元素类型和数组的大小都是确定的，所以当处理数组元素时候，我们通常使用基本循环或者 foreach 循环。</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">String[] arr = {<span class="string">"ni"</span>,<span class="string">"hao "</span>,<span class="string">"ya"</span>}</span><br><span class="line"></span><br><span class="line">arr.length;       <span class="comment">//数组长度，这是一个属性，字符串长度是方法</span></span><br><span class="line">arr[<span class="number">0</span>]   <span class="comment">//数组的元素是通过索引访问的</span></span><br><span class="line">arr[<span class="number">0</span>] = <span class="string">"le"</span>;  <span class="comment">//修改数据.</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//  foreach 循环:在不使用下标的情况下遍历数组</span></span><br><span class="line"><span class="keyword">for</span>(String element:arr){</span><br><span class="line">    System.out.println(element);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="5-4-Arrays-类"><a href="#5-4-Arrays-类" class="headerlink" title="5.4. Arrays 类"></a>5.4. Arrays 类</h3><p>java.util.Arrays 类能方便地操作数组，它提供的所有方法都是静态的。</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span>[] arr = {<span class="number">1</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">8</span>,<span class="number">9</span>}</span><br><span class="line">Arrays.toString(arr)  <span class="comment">//将当前数组转换为字符串输出</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//对数组进行排序,默认升序，使用双轴快排的算法</span></span><br><span class="line"><span class="comment">//传入数组的地址，创建副本修改</span></span><br><span class="line">Arrays.sort(arr)  </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">boolean</span> t = Arrays.equals(str1, str2)     <span class="comment">//比较数组中元素值是否相等。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//在进行数组查询之前，必须对数组进行排序（可以使用 sort() 方法）</span></span><br><span class="line"><span class="comment">// binarySearch(Object[] a,Object key); 传入一个数组对象，在整个数组查找元素，没有则返回值为负的插入点值，所谓插入点值就是第一个比关键字大的元素在数组中的位置索引，而且这个位置索引从1开始。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// binarySearch(Object[] a,int fromIndex,int toIndex,Object key); 在指定的范围内查找某一元素</span></span><br><span class="line">Arrays.binarySearch(arr,);</span><br></pre></td></tr></tbody></table></figure><h3 id="5-5-防止越界问题"><a href="#5-5-防止越界问题" class="headerlink" title="5.5. 防止越界问题"></a>5.5. 防止越界问题</h3><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//在循环体中避免使用arr[i+1]</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr.length; i++) {</span><br><span class="line">    <span class="keyword">if</span> (arr[i] &gt;max) {</span><br><span class="line">        max = arr[i];</span><br><span class="line">        ch = (<span class="keyword">char</span>) (i + <span class="string">'a'</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-基本数据类型&quot;&gt;&lt;a href=&quot;#1-基本数据类型&quot; class=&quot;headerlink&quot; title=&quot;1. 基本数据类型&quot;&gt;&lt;/a&gt;1. 基本数据类型&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;数据类型&lt;/th&gt;
&lt;th&gt;名称&lt;/th&gt;
</summary>
      
    
    
    
    <category term="Java" scheme="https://wenkex.gitee.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>Obsidian笔记管理</title>
    <link href="https://wenkex.gitee.io/2022/101935525.html"/>
    <id>https://wenkex.gitee.io/2022/101935525.html</id>
    <published>2022-10-19T00:25:00.000Z</published>
    <updated>2022-10-19T08:48:45.233Z</updated>
    
    <content type="html"><![CDATA[<p>Obsidian是基于Markdown文件的本地知识管理软件，并且开发者承诺Obsidian对于个人使用者永久免费。Obsidian仅对【发布】和【同步】功能额外收费</p><p><a href="https://blog.esunr.xyz/2022/07/e9b42b453d9f.html#3-2-%E4%BD%BF%E7%94%A8-Obsidian-%E6%A8%A1%E6%9D%BF%E5%BF%AB%E9%80%9F%E5%88%9B%E5%BB%BA%E6%96%87%E7%AB%A0">https://blog.esunr.xyz/2022/07/e9b42b453d9f.html#3-2-%E4%BD%BF%E7%94%A8-Obsidian-%E6%A8%A1%E6%9D%BF%E5%BF%AB%E9%80%9F%E5%88%9B%E5%BB%BA%E6%96%87%E7%AB%A0</a></p><h2 id="Obsidian使用"><a href="#Obsidian使用" class="headerlink" title="Obsidian使用"></a>Obsidian使用</h2><h3 id="插入头部模板"><a href="#插入头部模板" class="headerlink" title="插入头部模板"></a>插入头部模板</h3><p>首先我们要创建模板，我们可以在&nbsp;<code>source</code>&nbsp;目录下创建&nbsp;<code>_obsidian</code>&nbsp;文件夹，并创建一篇&nbsp;<code>Post Template</code>&nbsp;的文章（md文件），内容为：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: {{title}}</span><br><span class="line">date: {{date}}</span><br><span class="line">tags: []</span><br><span class="line">copyright_author: Arts</span><br><span class="line">description:</span><br><span class="line">sticky:</span><br><span class="line">---</span><br></pre></td></tr></tbody></table></figure><p>然后进入到 Obsidian 的设置面板，选择『核心插件』，并启用『模板』功能。同时点击旁边的配置按钮，进入到模板配置的设置中</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">位置：source/_obsidian</span><br><span class="line">日期格式：YYYY-MM-DD HH:mm:ss</span><br></pre></td></tr></tbody></table></figure><p>之后，我们再创建新文章的时候，只需要点击侧边栏的『插入模板』按钮就可以快速生成 Front-matter 信息：</p><h3 id="大纲功能"><a href="#大纲功能" class="headerlink" title="大纲功能"></a>大纲功能</h3><p>安卓端，在编辑界面右滑，选择大纲</p><h3 id="双向链接"><a href="#双向链接" class="headerlink" title="双向链接"></a>双向链接</h3><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[[2020-07-13]] 文件引用</span><br><span class="line">[[2020-07-13#大纲]]  标题引用</span><br><span class="line">[[2020-07-13#^块内容]]  块引用</span><br></pre></td></tr></tbody></table></figure><h2 id="第三方插件"><a href="#第三方插件" class="headerlink" title="第三方插件"></a>第三方插件</h2><p>插件仓库需要科学才可以访问</p><h3 id="File-Tree-Alternative-Plugin"><a href="#File-Tree-Alternative-Plugin" class="headerlink" title="File Tree Alternative Plugin"></a>File Tree Alternative Plugin</h3><p>Obsidian 很不好的一点就是会把所有的文件都列在左侧的文件列表中，但是对于我们的 Hexo 项目写文章来说，我们只会修改&nbsp;<code>_post</code>&nbsp;目录下的文件，因此我们希望左侧的文件列表中只显示&nbsp;<code>_post</code>&nbsp;文件夹，但是目前为止 Obsidian 并没有推出类似『聚焦』到某一文件夹内的功能。</p><p>好在 Obsidian 强大的插件库中有一个&nbsp;<code>File Tree Alternative Plugin</code>&nbsp;第三方插件可以满足这一需求。按照 Obsidian Git 相同的方法去下载这个第三方插件，下载完成之后我们会发现左侧菜单出现了一个&nbsp;<code>File Tree</code>&nbsp;的 Tab 页，点击后就可以看到文件以树形的结构呈现：</p><p>我们展开&nbsp;<code>source</code>&nbsp;文件夹，并右键&nbsp;<code>_post</code>&nbsp;文件夹，选择&nbsp;<code>Focuse on Folder</code>&nbsp;后，左侧的文件列表中就只会显示&nbsp;<code>_post</code>&nbsp;文件夹中的内容了：</p><h3 id="Obsidian-Git"><a href="#Obsidian-Git" class="headerlink" title="Obsidian Git"></a>Obsidian Git</h3><p>可以使用 Obsidian Git 插件来在 Obsidian 内就可以实现 git commit 以及 push 的操作。</p><h2 id="同步"><a href="#同步" class="headerlink" title="同步"></a>同步</h2><p>Obsidian官方同步要收费，所以我借助第三方同步软件Syncthing同步</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Obsidian是基于Markdown文件的本地知识管理软件，并且开发者承诺Obsidian对于个人使用者永久免费。Obsidian仅对【发布】和【同步】功能额外收费&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.esunr.xyz/2022/07/e9b42b</summary>
      
    
    
    
    <category term="博客相关" scheme="https://wenkex.gitee.io/categories/%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3/"/>
    
    
  </entry>
  
  <entry>
    <title>算法</title>
    <link href="https://wenkex.gitee.io/2022/101954151.html"/>
    <id>https://wenkex.gitee.io/2022/101954151.html</id>
    <published>2022-10-19T00:22:00.000Z</published>
    <updated>2022-10-19T08:48:45.236Z</updated>
    
    <content type="html"><![CDATA[<h2 id="解题套路"><a href="#解题套路" class="headerlink" title="解题套路"></a>解题套路</h2><h3 id="缩小问题规模"><a href="#缩小问题规模" class="headerlink" title="缩小问题规模"></a>缩小问题规模</h3><p>有可能问题里问的是一个规模很大的问题，比如汉诺塔问题，要移动64个圆盘，这太复杂了，我们根本无法思考。不妨把问题的规模缩小，比如缩小到3个圆盘，然后我们就可以列举一下情况，找找规律和套路了。</p><p>即使是在acm赛场当中，这个方法也非常管用。</p><h3 id="确定复杂度"><a href="#确定复杂度" class="headerlink" title="确定复杂度"></a>确定复杂度</h3><p>在acm赛场上题目当中都会标明数据的大小范围，除了起到限制作用之外也是一个很大的提示。我们可以根据数据的规模反推出正解的复杂度范围，从而排除掉一些不可能的算法。</p><p>比如说要在个数当中寻找某个数，由于计算机每秒的运行次数在这个量级，这么大的规模遍历一遍都有些扛不住，那么显然正解的复杂度一定在及以下。这么一来，我们就可以根据算法的复杂度排除掉一大批达不到要求的算法，排除错误的选项。</p><p>在面试的时候面试官往往不会明确给出数据的规模，我们可以自己结合实际情况分析，当然直接提问也是一个不错的选择。</p><h3 id="优化思路"><a href="#优化思路" class="headerlink" title="优化思路"></a>优化思路</h3><p>面试不是比赛，并不是一定要给出正解。有的时候，我们一时陷入误区没想到解法也是常有的。重要的并不是我们是否想出了解法，而是我们能否展现我们思维的能力，打动面试官。</p><p>所以有的时候一下子没有想到最优解也没有关系，我们可以先易后难，先把一些简单可行的解法说出来，然后再进行优化。</p><p>比如LeetCode第4题，寻找两个有序数组的中位数。我们当然很难一下子想出的正解，但是我们可以先从最简单的方法说起。比如重新排序直接寻找，这样操作的复杂度是。说出这个方法之后，我们接着从不使用排序解决问题的角度继续思考，如此一步步逐渐深入，即使最终没能找到正解，也体现出了我们的思考是有章法的，并且思考和分析问题的能力是有的。</p><h2 id="建议"><a href="#建议" class="headerlink" title="建议"></a>建议</h2><p>建议刷题的时候，如果10 - 20分钟没思路，就去看题解，不要自己硬憋着。<br>算法题就是多刷几遍就好，在刷题的时候一定要去思考、形成自己的理解吧，可别赶时间当做任务去完成，毕竟这种能力是需要时间和精力的。</p><p>面试当中常问的问题基本上就这几种：二分、递归、分治、排序、动态规划。</p><h3 id="贵精不贵多"><a href="#贵精不贵多" class="headerlink" title="贵精不贵多"></a>贵精不贵多</h3><p>如果是为了准备面试，就像我前面列举的一样，其实并不会涉及很多内容。相比去研究很多高大上面试的时候用不到的高大上算法，倒不如好好把这几个算法啃扎实。</p><h3 id="成体系化训练"><a href="#成体系化训练" class="headerlink" title="成体系化训练"></a>成体系化训练</h3><p>算法的学习过程是比较痛苦的，尤其是如果我们漫无目的地去训练和学习，进展非常缓慢，非常劝退。很多同学都有刷题刷了一堆，但是水平好像没什么提升的情况。</p><p>我个人感觉比较有效的方法是成体系化的训练，不要按照题目顺序刷题，而是以算法划分专题，按照专题刷题。一个算法一个算法的硬啃，一个算法吃透再吃下一个。这样训练下来印象会非常深刻，对于算法的理解也会深刻得多，也不容易忘记。要比题目刷了一堆， 算法也用了一堆， 看起用得多，但也忘得多要好得多。</p><h2 id="常见的题型"><a href="#常见的题型" class="headerlink" title="常见的题型"></a>常见的题型</h2><p>面试或者白板编程，由于形式的限制，题目的选择范围其实并不大。并不难理解，毕竟面试的时间有限，也不能全拿来做题，而太困难太复杂的问题候选人一点思路也没有，大部分人都做不上来，也完全起不到考察和筛选的意义。</p><p>所以拿来当做面试和白板编程的问题，不会很复杂，至少会保证绝大多数的候选人都听说过。就好像打游戏一样，哪怕是玩家津津乐道的魂游戏，总要有过关的可能。如果上来就考察一个问题，结果你连正解用到的算法都没听说过，一开始就没有做出来的可能，这种问题问了就只能浪费时间。</p><p>根据我的经验，面试当中常问的问题基本上就这几种：<strong>二分、递归、分治、排序、动态规划。</strong></p><p>这几种算法只要是科班出身，基本上都或多或少听说过，理论上来说都应该能做出来。并且这些算法除了比较基础之外，它们的代码量都不大，一般核心代码都不会超过30行，确保编码的时间不会太长。第二是比较考验思维，通过你对这几个算法的理解深度，就足以看出来你的思维能力和算法能力了。</p><h2 id="复杂度"><a href="#复杂度" class="headerlink" title="复杂度"></a>复杂度</h2><ul><li><p>时间复杂度<br>有几次循环就有o(n的几次方)</p></li><li><p>空间复杂度<br>用来评估算法内存占用大小的一个式子</p></li></ul><h2 id="递归"><a href="#递归" class="headerlink" title="递归"></a>递归</h2><p>简单说程序调用自身的编程技巧叫递归。<br>递归的思想是把一个大型复杂问题层层转化为一个与原问题规模更小的问题，问题被拆解成子问题后，递归调用继续进行，直到子问题无需进一步递归就可以解决的地步为止。</p><p>使用递归需要避免出现死循环，为了确保递归正确工作，递归程序应该包含2个属性：<br>    终止条件：递归函数必须要有终止条件，否则会出错；<br>    递推关系（recurrentce relation），可将所有其他情况拆分到基本案例。递归函数先不断调用自身，直到遇到终止条件后进行回溯，最终返回答案。</p><h2 id="动态规划"><a href="#动态规划" class="headerlink" title="动态规划"></a>动态规划</h2><p>动态规划问题的一般形式就是==求最值==。比如说让你求最长递增子序列呀，最小编辑距离呀等等。</p><p>求解动态规划的核心问题是穷举。因为要求最值，肯定要把所有可行的答案穷举出来，然后在其中找最值呗。<br>首先，动态规划的穷举有点特别，因为这类问题存在「重叠子问题」，如果暴力穷举的话效率会极其低下，所以需要「备忘录」或者「DP table」来优化穷举过程，避免不必要的计算。</p><p>而且，动态规划问题一定会具备「最优子结构」，才能通过子问题的最值得到原问题的最值。</p><p>以上提到的重叠子问题、最优子结构、状态转移方程就是<strong>动态规划三要素</strong>。，我来提供我研究出来的一个思维框架，辅助你思考状态转移方程：</p><p>明确 base case -&gt; 明确「状态」-&gt; 明确「选择」 -&gt; 定义 dp 数组/函数的含义。</p><p>动态规划最==核心的思想==，就在于拆分子问题，记住过往，穷举求最值,减少重复计算。</p><h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3><p>划分问题：按照问题的特征，把问题分为若干阶段。注意：划分后的阶段一定是有序的或者可排序的</p><p>dp数组初始化以及下标的定义,确定状态和状态变量：将问题发展到各个阶段时所处的各种不同的客观情况表现出来。</p><p>递推公式(状态转移方程)：状态转移就是根据上一阶段的决策和状态来导出本阶段的状态。根据相邻两个阶段状态之间的联系来确定决策方法和状态转移方程</p><p>dp数组如何初始化(边界条件)：状态转移方程是一个递推式，因此需要找到递推终止的条件   1或2时<br>即：【初始状态】→【决策1】→【决策2】→…→【决策n】→【结束状态】</p><p>遍历顺序</p><p>打印dp数组</p><h3 id="背包问题"><a href="#背包问题" class="headerlink" title="背包问题"></a>背包问题</h3><p><strong>01背包</strong></p><h3 id="打家劫舍"><a href="#打家劫舍" class="headerlink" title="打家劫舍"></a>打家劫舍</h3><h3 id="股票问题"><a href="#股票问题" class="headerlink" title="股票问题"></a>股票问题</h3><h3 id="子序列问题"><a href="#子序列问题" class="headerlink" title="子序列问题"></a>子序列问题</h3><h3 id="斐波那契数列"><a href="#斐波那契数列" class="headerlink" title="斐波那契数列"></a>斐波那契数列</h3><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sum = dp[0]+dp[1]</span><br><span class="line">dp[0]=dp[1]</span><br><span class="line">dp[1]=sum</span><br></pre></td></tr></tbody></table></figure><h2 id="二分查找"><a href="#二分查找" class="headerlink" title="二分查找"></a>二分查找</h2><p><a href="https://leetcode.cn/problems/find-first-and-last-position-of-element-in-sorted-array/solution/tu-jie-er-fen-zui-qing-xi-yi-dong-de-jia-ddvc/">https://leetcode.cn/problems/find-first-and-last-position-of-element-in-sorted-array/solution/tu-jie-er-fen-zui-qing-xi-yi-dong-de-jia-ddvc/</a></p><p>一个范围，具有单调性质，因此可以使用二分来做。</p><p>在升序数组 nums 中寻找目标值 target，对于特定下标 i，比较nums[i] 和 target 的大小：</p><p>如果 nums[i]=target，则下标 i即为要寻找的下标；</p><p>如果 nums[i]&gt;target，则 target 只可能在下标 i的左侧；</p><p>如果 nums[i]&lt;target，则 target 只可能在下标 i的右侧。</p><p>二分查找的做法是，定义查找的范围 [left,right]，初始查找范围是整个数组。每次取查找范围的中点mid，比较nums[mid] 和 target 的大小，如果相等则mid 即为要寻找的下标，如果不相等则根据nums[mid] 和 target 的大小关系将查找范围缩小一半。</p><p>由于每次查找都会将查找范围缩小一半，因此二分查找的时间复杂度是 O(logn)，其中 n 是数组的长度。</p><p>二分查找的条件是查找范围不为空，即left≤right。如果 target 在数组中，二分查找可以保证找到 target，返回 target 在数组中的下标。如果 target 不在数组中，则当{left} &gt;{right}left&gt;right 时结束查找，返回−1。</p><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">isPerfectSquare</span>(<span class="params">self, num: <span class="built_in">int</span></span>) -&gt; <span class="built_in">bool</span>:</span></span><br><span class="line">      left, right = <span class="number">0</span>, num <span class="comment">#定义二分查找搜索区间的初始边界。</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">#在移动左侧边界left和右侧边界right时，新的搜索区间都不会包含被检查的下标mid，所以搜索边界始终没有检查过，</span></span><br><span class="line">      <span class="comment">#当left=right时，我们仍需要检查mid=(right+right)//2</span></span><br><span class="line">      <span class="keyword">while</span> left &lt;= right:  <span class="comment">#循环直至区间左右端点相同</span></span><br><span class="line">        <span class="comment">#mid = (left + right) // 2 #设定中间值</span></span><br><span class="line">        <span class="comment">#括号内的值要为0</span></span><br><span class="line">        mid = (right-left)//<span class="number">2</span>+left      <span class="comment">#防止整型溢出，python则不需要这句，应为int可任意放大</span></span><br><span class="line">        <span class="keyword">if</span> square &lt; num:</span><br><span class="line">          left = mid + <span class="number">1</span></span><br><span class="line">        <span class="keyword">elif</span> square &gt; num:</span><br><span class="line">          right = mid - <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">          <span class="keyword">return</span> mid</span><br><span class="line">      <span class="keyword">return</span> left  <span class="comment">#此时有left==right,区间缩为一个点，即为答案</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 时间复杂度：)O(logn)，其中 n为正整数 num 的最大值。</span></span><br><span class="line"><span class="comment"># 空间复杂度：O(1)。</span></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h3 id="二分查找模板"><a href="#二分查找模板" class="headerlink" title="二分查找模板"></a>二分查找模板</h3><h3 id="查找过程"><a href="#查找过程" class="headerlink" title="查找过程"></a>查找过程</h3><p>首先，假设表中元素是按升序排列，将表中间位置记录的关键字与查找关键字比较，如果两者相等，则查找成功；否则利用中间位置记录将表分成前、后两个子表，如果中间位置记录的关键字大于查找关键字，则进一步查找前一子表，否则进一步查找后一子表。重复以上过程，直到找到满足条件的记录，使查找成功，或直到子表不存在为止，此时查找不成功。</p><h3 id="边界问题"><a href="#边界问题" class="headerlink" title="边界问题"></a>边界问题</h3><p>总结为一句话：左闭左+1，右闭右-1，开区间选mid</p><p>二分查找涉及的很多的边界条件，逻辑比较简单，但就是写不好。相信很多同学都和我一样，在条件判断时总是不知道是 while(left &lt; right) 还是 while(left &lt;= right)，到底是right = mid呢，还是要right = mid - 1呢？</p><p>大家写二分法经常写乱，主要是因为对区间的定义没有想清楚，区间的定义就是不变量。要在二分查找的过程中，保持不变量，就是在while寻找中每一次边界的处理都要坚持根据区间的定义来操作，这就是循环不变量规则。</p><p>写二分法，区间的定义有以下四种，左闭右闭即[left, right]，或者左闭右开即[left, right)，或者左开右闭即(left, right]，或者左开右开即(left, right)，其中左闭右闭即[left, right]比较常用，基本思路不变只是控制了一些变量选择</p><p>下面我用这四种区间的定义分别讲解四种不同的二分写法。</p><p>以下分析基于理论情况，实际题目中我们比较常用第一种情况和第二种情况</p><h3 id="1-左闭右闭即-left-right"><a href="#1-左闭右闭即-left-right" class="headerlink" title="1.左闭右闭即[left, right]"></a>1.左闭右闭即[left, right]</h3><p>第一种写法，我们定义 target 是在一个在左闭右闭的区间里，也就是[left, right] （这个很重要非常重要）。</p><p>区间的定义这就决定了二分法的代码应该如何写，因为定义target在[left, right]区间：</p><ul><li>while (left &lt;= right) 要使用 &lt;= ，因为left == right是有意义的，所以使用 &lt;=</li><li>if (nums[middle] &gt; target) right 要赋值为 middle - 1，因为当前这个nums[middle]一定不是target，那么接下来要查找的左区间结束下标位置就是 middle - 1</li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 版本一</span></span><br><span class="line"><span class="keyword">while</span>(left &lt;= right)<span class="comment">// 因为left == right的时候，在[left, right]是有效的空间，即相等时可以取到该元素，所以使用 &lt;=</span></span><br><span class="line">{   <span class="comment">//如果left+right过大，可能导致和溢出，可以用mid = left + (right - left) / 2</span></span><br><span class="line">    <span class="keyword">int</span> mid = (left + right)/<span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(nums[mid] &gt; target)   {</span><br><span class="line">        <span class="comment">//中间值大于目标值,target 在左区间,right要赋值为 mid - 1</span></span><br><span class="line">        <span class="comment">//因为这个nums[mid]一定不是target，那么接下来要查找的左区间结束下标位置就是 mid - 1，所以取不到mid了</span></span><br><span class="line">        right = mid - <span class="number">1</span>;<span class="comment">//，所以[left, mid - 1]</span></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(nums[mid] &lt; target)  {</span><br><span class="line">        <span class="comment">//中间值小于目标值，target 在右区间,left 要赋值为 mid +1，</span></span><br><span class="line">        <span class="comment">//因为当前这个nums[mid]一定不是target，那么接下来要查找的右区间结束下标位置就是 mid + 1，因为区间 +1了，所以取不到mid了</span></span><br><span class="line">        left = mid + <span class="number">1</span>; <span class="comment">//所以[mid + 1, right]</span></span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(nums[mid] == target){</span><br><span class="line">        <span class="keyword">return</span> mid;<span class="comment">// 数组中找到目标值，直接返回下标</span></span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h3 id="2-左闭右开即-left-right"><a href="#2-左闭右开即-left-right" class="headerlink" title="2.左闭右开即[left, right)"></a>2.左闭右开即[left, right)</h3><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 版本二</span></span><br><span class="line"><span class="keyword">while</span>(left &lt; right)<span class="comment">// 因为left == right的时候，在[left, right)是无效的空间，即相等时取不到该元素，所以使用 &lt;</span></span><br><span class="line">{</span><br><span class="line">    <span class="keyword">int</span> mid = (left + right)/<span class="number">2</span>;</span><br><span class="line">    <span class="comment">//如果left+right过大，导致和溢出，可以用mid = left + (right - left) / 2,防止溢出left+right</span></span><br><span class="line">    <span class="keyword">if</span>(nums[mid] &gt; target)</span><br><span class="line">    {</span><br><span class="line">        right = mid;<span class="comment">// target 在左区间，所以[left, mid)</span></span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(nums[mid] &lt; target)</span><br><span class="line">    {</span><br><span class="line">        left = mid + <span class="number">1</span>;<span class="comment">// target 在右区间，所以[mid + 1, right)</span></span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(nums[mid] == target)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">return</span> mid;<span class="comment">// 数组中找到目标值，直接返回下标</span></span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h3 id="3-左开右闭即-left-right"><a href="#3-左开右闭即-left-right" class="headerlink" title="3.左开右闭即(left, right]"></a>3.左开右闭即(left, right]</h3><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 版本三</span></span><br><span class="line"><span class="keyword">while</span>(left &lt; right)<span class="comment">// 因为left == right的时候，在(left, right]是无效的空间，即相等时取不到该元素，所以使用 &lt;</span></span><br><span class="line">{</span><br><span class="line">    <span class="keyword">int</span> mid = (left + right)/<span class="number">2</span>;</span><br><span class="line">    <span class="comment">//如果left+right过大，导致和溢出，可以用mid = left + (right - left) / 2,防止溢出left+right</span></span><br><span class="line">    <span class="keyword">if</span>(nums[mid] &gt; target)</span><br><span class="line">    {</span><br><span class="line">        right = mid - <span class="number">1</span>;<span class="comment">// target 在左区间，所以(left, mid]</span></span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(nums[mid] &lt; target)</span><br><span class="line">    {</span><br><span class="line">        left = mid;<span class="comment">// target 在右区间，所以(mid + 1, right]</span></span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(nums[mid] == target)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">return</span> mid;<span class="comment">// 数组中找到目标值，直接返回下标</span></span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>4.左开右开即(left, right)</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 版本四</span></span><br><span class="line"><span class="keyword">while</span>(left &lt; right)<span class="comment">// 因为left == right的时候，在(left, right)是无效的空间，即相等时取不到该元素，所以使用 &lt;</span></span><br><span class="line">{</span><br><span class="line">    <span class="keyword">int</span> mid = (left + right)/<span class="number">2</span>;</span><br><span class="line">    <span class="comment">//如果left+right过大，导致和溢出，可以用mid = left + (right - left) / 2,防止溢出left+right</span></span><br><span class="line">    <span class="keyword">if</span>(nums[mid] &gt; target)</span><br><span class="line">    {</span><br><span class="line">        right = mid;<span class="comment">// target 在左区间，所以(left, mid)</span></span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(nums[mid] &lt; target)</span><br><span class="line">    {</span><br><span class="line">        left = mid;<span class="comment">// target 在右区间，所以(mid, right)</span></span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(nums[mid] == target)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">return</span> mid;<span class="comment">// 数组中找到目标值，直接返回下标</span></span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h2 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h2><h3 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a>冒泡排序</h3><p>比较相邻的元素。如果第一个比第二个大，就交换他们两个。</p><p> 对每一对相邻元素作同样的工作，从开始第一对到结尾的最后一对</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">bubbleSort</span><span class="params">(<span class="keyword">int</span>[] array)</span> </span>{</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; array.length - <span class="number">1</span>; i++) {</span><br><span class="line">          <span class="comment">// 优化冒泡排序，增加判断位，有序标记，每一轮的初始是true</span></span><br><span class="line">          <span class="keyword">boolean</span> flag = <span class="keyword">true</span>;</span><br><span class="line">          <span class="comment">//内层循环控制每一轮的比较次数，最大的都会放在末尾所以每次比较都会少一次</span></span><br><span class="line">          <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; array.length - i - <span class="number">1</span>; j++) {</span><br><span class="line">              <span class="keyword">if</span> (array[j] &gt; array[j + <span class="number">1</span>]) {</span><br><span class="line">                  <span class="keyword">int</span> tmp = array[j];</span><br><span class="line">                  array[j] = array[j + <span class="number">1</span>];</span><br><span class="line">                  array[j + <span class="number">1</span>] = tmp;</span><br><span class="line">                  <span class="comment">// 有元素交换，所以不是有序，标记变为false</span></span><br><span class="line">                  flag = <span class="keyword">false</span>;</span><br><span class="line">              }</span><br><span class="line">          }</span><br><span class="line">          <span class="comment">// 说明上面内层for循环中，没有交换任何元素，直接跳出外层循环</span></span><br><span class="line">          <span class="keyword">if</span> (flag) {</span><br><span class="line">              <span class="keyword">break</span>;</span><br><span class="line">          }</span><br><span class="line">      }</span><br><span class="line">  }</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h2 id="KMP"><a href="#KMP" class="headerlink" title="KMP"></a>KMP</h2><h3 id="KMP有什么用"><a href="#KMP有什么用" class="headerlink" title="KMP有什么用"></a>KMP有什么用</h3><p>KMP主要应用在字符串匹配上。</p><p>KMP的主要思想是当出现字符串不匹配时，可以知道一部分之前已经匹配的文本内容，可以利用这些信息避免从头再去做匹配了。</p><p>所以如何记录已经匹配的文本内容，是KMP的重点，也是next数组肩负的重任。</p><p>其实KMP的代码不好理解，一些同学甚至直接把KMP代码的模板背下来。</p><p>没有彻底搞懂，懵懵懂懂就把代码背下来太容易忘了。</p><p>不仅面试的时候可能写不出来，如果面试官问：next数组里的数字表示的是什么，为什么这么表示？</p><p>估计大多数候选人都是懵逼的。</p><p>下面Carl就带大家把KMP的精髓，next数组弄清楚。</p><h3 id="什么是前缀表"><a href="#什么是前缀表" class="headerlink" title="什么是前缀表"></a>什么是前缀表</h3><p>next数组就是一个前缀表（prefix table）。</p><p>前缀表有什么作用呢？</p><p>前缀表是用来回退的，它记录了模式串与主串(文本串)不匹配的时候，模式串应该从哪里开始重新匹配。</p><p>为了清楚的了解前缀表的来历，我们来举一个例子：</p><p>要在文本串：aabaabaafa 中查找是否出现过一个模式串：aabaaf。</p><p>请记住文本串和模式串的作用，对于理解下文很重要，要不然容易看懵。</p><h2 id="双指针法"><a href="#双指针法" class="headerlink" title="双指针法"></a>双指针法</h2><p><a href="https://leetcode.cn/problems/squares-of-a-sorted-array/">977.有序数组的平方</a></p><p>给你一个按 非递减顺序 排序的整数数组 nums，返回 每个数字的平方 组成的新数组，要求也按 非递减顺序 排序。<br>示例 1： 输入：nums = [-4,-1,0,3,10] 输出：[0,1,9,16,100] 解释：平方后，数组变为 [16,1,0,9,100]，排序后，数组变为 [0,1,9,16,100]<br>示例 2： 输入：nums = [-7,-3,2,3,11] 输出：[4,9,9,49,121]</p><p>思路</p><p>数组其实是有序的， 只不过负数平方之后可能成为最大数了。</p><p>那么数组平方的最大值就在数组的两端，不是最左边就是最右边，不可能是中间。</p><p>此时可以考虑双指针法了，i指向起始位置，j指向终止位置。</p><p>定义一个新数组result，和A数组一样的大小，让k指向result数组终止位置。</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>{</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span>[] sortedSquares(<span class="keyword">int</span>[] nums) {</span><br><span class="line">        <span class="keyword">int</span> right = nums.length - <span class="number">1</span>;<span class="comment">//终止位置</span></span><br><span class="line">        <span class="keyword">int</span> left = <span class="number">0</span>;<span class="comment">//起始位置</span></span><br><span class="line">        <span class="keyword">int</span>[] result = <span class="keyword">new</span> <span class="keyword">int</span>[nums.length];</span><br><span class="line">        <span class="keyword">int</span> index = result.length - <span class="number">1</span>;<span class="comment">//新数组的终止位置</span></span><br><span class="line">        <span class="keyword">while</span> (left &lt;= right) {</span><br><span class="line">            <span class="keyword">if</span> (nums[left] * nums[left] &gt; nums[right] * nums[right]) {</span><br><span class="line">                <span class="comment">// 正数的相对位置是不变的， 需要调整的是负数平方后的相对位置</span></span><br><span class="line">                result[index--] = nums[left] * nums[left];</span><br><span class="line">                ++left;</span><br><span class="line">            } <span class="keyword">else</span> {</span><br><span class="line">                result[index--] = nums[right] * nums[right];</span><br><span class="line">                --right;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h3 id="双指针-快慢指针"><a href="#双指针-快慢指针" class="headerlink" title="双指针-快慢指针"></a>双指针-快慢指针</h3><p>给你一个数组 nums 和一个值 val，你需要 原地 移除所有数值等于 val 的元素，并返回移除后数组的新长度。<br>不要使用额外的数组空间，你必须仅使用 O(1) 额外空间并原地修改输入数组。元素的顺序可以改变。你不需要考虑数组中超出新长度后面的元素。</p><p>示例 1: 给定 nums = [3,2,2,3], val = 3, 函数应该返回新的长度 2, 并且 nums 中的前两个元素均为 2。 你不需要考虑数组中超出新长度后面的元素。<br>示例 2: 给定 nums = [0,1,2,2,3,0,4,2], val = 2, 函数应该返回新的长度 5, 并且 nums 中的前五个元素为 0, 1, 3, 0, 4。</p><p>给你一个数组 nums 和一个值 val，你需要 原地 移除所有数值等于 val 的元素，并返回移除后数组的新长度。</p><p>不要使用额外的数组空间，你必须仅使用 O(1) 额外空间并原地修改输入数组。</p><p>元素的顺序可以改变。你不需要考虑数组中超出新长度后面的元素。</p><p>示例 1: 给定 nums = [3,2,2,3], val = 3, 函数应该返回新的长度 2, 并且 nums 中的前两个元素均为 2。 你不需要考虑数组中超出新长度后面的元素。</p><p>示例 2: 给定 nums = [0,1,2,2,3,0,4,2], val = 2, 函数应该返回新的长度 5, 并且 nums 中的前五个元素为 0, 1, 3, 0, 4。</p><p>你不需要考虑数组中超出新长度后面的元素。</p><p>给你一个数组 nums 和一个值 val，你需要 原地 移除所有数值等于 val 的元素，并返回移除后数组的新长度。</p><p>不要使用额外的数组空间，你必须仅使用 O(1) 额外空间并原地修改输入数组。</p><p>元素的顺序可以改变。你不需要考虑数组中超出新长度后面的元素。</p><p>示例 1: 给定 nums = [3,2,2,3], val = 3, 函数应该返回新的长度 2, 并且 nums 中的前两个元素均为 2。 你不需要考虑数组中超出新长度后面的元素。</p><p>示例 2: 给定 nums = [0,1,2,2,3,0,4,2], val = 2, 函数应该返回新的长度 5, 并且 nums 中的前五个元素为 0, 1, 3, 0, 4。</p><p>双指针法（快慢指针法）： 通过一个快指针和慢指针在一个for循环下完成两个for循环的工作。<br>快指针：寻找新数组的元素 ，新数组就是不含有目标元素的数组<br>慢指针：指向更新 新数组下标的位置</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>{</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">removeElement</span><span class="params">(<span class="keyword">int</span>[] nums, <span class="keyword">int</span> val)</span> </span>{</span><br><span class="line">        <span class="comment">// 快慢指针</span></span><br><span class="line">        <span class="keyword">int</span> slowIndex = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> fastIndex = <span class="number">0</span>; fastIndex &lt; nums.length; fastIndex++) {</span><br><span class="line">            <span class="keyword">if</span> (nums[fastIndex] != val) {</span><br><span class="line">                nums[slowIndex] = nums[fastIndex];</span><br><span class="line">                slowIndex++;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> slowIndex;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>相关题目推荐</p><p>283.移动零<br>844.比较含退格的字符串<br>977.有序数组的平方</p><h3 id="26-删除排序数组中的重复项"><a href="#26-删除排序数组中的重复项" class="headerlink" title="26.删除排序数组中的重复项"></a>26.删除排序数组中的重复项</h3><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>{</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">removeDuplicates</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>{</span><br><span class="line">        <span class="keyword">if</span>(nums.length==<span class="number">1</span>){</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">int</span> slow = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; nums.length; i++) {</span><br><span class="line">            <span class="keyword">if</span>(nums[slow]!=nums[i]) {</span><br><span class="line">                slow++;</span><br><span class="line">                nums[slow] = nums[i];</span><br><span class="line"></span><br><span class="line">            }</span><br><span class="line">        }<span class="keyword">return</span> slow+<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="双指针-滑动窗口"><a href="#双指针-滑动窗口" class="headerlink" title="双指针-滑动窗口"></a>双指针-滑动窗口</h3><p>所谓滑动窗口，就是不断的调节子序列的起始位置和终止位置，从而得出我们要想的结果。</p><p>在暴力解法中，是一个for循环滑动窗口的起始位置，一个for循环为滑动窗口的终止位置，用两个for循环 完成了一个不断搜索区间的过程。</p><p>那么滑动窗口如何用一个for循环来完成这个操作呢。</p><p>首先要思考 如果用一个for循环，那么应该表示 滑动窗口的起始位置，还是终止位置。<br>如果只用一个for循环来表示 滑动窗口的起始位置，那么如何遍历剩下的终止位置？<br>此时难免再次陷入 暴力解法的怪圈。<br>所以 只用一个for循环，那么这个循环的索引，一定是表示 滑动窗口的终止位置。<br>那么问题来了， 滑动窗口的起始位置如何移动呢？</p><p>在本题中实现滑动窗口，主要确定如下三点：<br>窗口内是什么？<br>如何移动窗口的起始位置？<br>如何移动窗口的结束位置？<br>left指针什么时候向后移动</p><p>窗口就是 满足其和 ≥ s 的长度最小的 连续 子数组。</p><p>窗口的起始位置如何移动：如果当前窗口的值大于s了，窗口就要向前移动了（也就是该缩小了）。</p><p>窗口的结束位置如何移动：窗口的结束位置就是遍历数组的指针，也就是for循环里的索引。</p><h4 id="滑动窗口题目特征"><a href="#滑动窗口题目特征" class="headerlink" title="滑动窗口题目特征"></a>滑动窗口题目特征</h4><p>连续</p><h4 id="滑动窗口模板"><a href="#滑动窗口模板" class="headerlink" title="滑动窗口模板"></a>滑动窗口模板</h4><p>《挑战程序设计竞赛》这本书中把滑动窗口叫做「虫取法」，我觉得非常生动形象。因为滑动窗口的两个指针移动的过程和虫子爬动的过程非常像：前脚不动，把后脚移动过来；后脚不动，把前脚向前移动。</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">int</span>[] findSubArray(<span class="keyword">int</span>[] nums){</span><br><span class="line">    <span class="keyword">int</span> n = num.length; <span class="comment">// 数组or字符串长度</span></span><br><span class="line">    <span class="keyword">int</span> l = <span class="number">0</span>, r = <span class="number">0</span>;     <span class="comment">// 双指针，表示当前遍历的区间[l, r]，闭区间</span></span><br><span class="line">    <span class="keyword">int</span> sum = <span class="number">0</span> <span class="comment">// 用于统计 子数组or子区间 是否有效，根据题目可能会改成求和or计数</span></span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span> <span class="comment">// 保存最大的满足题目要求的 子数组or子串 长度</span></span><br><span class="line">    <span class="keyword">while</span> (r &lt; n){     <span class="comment">// 当右边的指针没有搜索到 数组or字符串 的结尾</span></span><br><span class="line">        sum += nums[r]     <span class="comment">// 增加当前右边指针的数字or字符的求和or计数</span></span><br><span class="line">        <span class="keyword">while</span> 区间[l, r]不符合题意{</span><br><span class="line">            sum -= nums[l] <span class="comment">// 移动左指针前需要从sum中减少l位置字符的求和or计数</span></span><br><span class="line">            l++ <span class="comment">// 真正的移动左指针，注意不能跟上面一行代码写反</span></span><br><span class="line">        } <span class="comment">// 此时需要一直移动左指针，直至找到一个符合题意的区间</span></span><br><span class="line">        <span class="comment">// 到 while 结束时，我们找到了一个符合题意要求的 子数组or子串</span></span><br><span class="line">        res = Math.max(res, r - l + <span class="number">1</span>) <span class="comment">// 需要更新结果</span></span><br><span class="line">        r++ <span class="comment">// 移动右指针，去探索新的区间</span></span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><ol><li><p>定义两个指针 l 和 r 分别指向区间的开头和结尾，注意是闭区间；定义 sum 用来统计该区间内的各个字符出现次数；</p></li><li><p>第一重 while 循环是为了判断 r 指针的位置是否超出了数组边界；当 r 每次到了新位置，需要增加 r 指针的求和 / 计数；</p></li><li><p>第二重 while 循环是让 l 指针向右移动到 [l, r] 区间符合题意的位置；当 l 每次移动到了新位置，需要减少 l 指针的求和 / 计数；</p></li></ol><h4 id="最大连续-1-的个数-III"><a href="#最大连续-1-的个数-III" class="headerlink" title="最大连续 1 的个数 III"></a>最大连续 1 的个数 III</h4><p><a href="https://leetcode.cn/problems/max-consecutive-ones-iii/">1004. 最大连续 1 的个数 III</a></p><h4 id="长度最小的子数组"><a href="#长度最小的子数组" class="headerlink" title="长度最小的子数组"></a>长度最小的子数组</h4><p><a href="https://leetcode-cn.com/problems/minimum-size-subarray-sum/">长度最小的子数组</a></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://gitee.com/programmercarl/leetcode-master">代码随想录</a></p><p><a href="https://github.com/yangchong211/YCBlogs/blob/master/blog/06.%E7%AE%97%E6%B3%95%E5%A4%A7%E6%B1%87%E6%80%BB.md">算法汇总</a></p><p><a href="https://github.com/algorithm-visualizer/algorithm-visualizer">Algorithm Visualizer算法可视化的GitHub 地址</a></p><p><a href="https://algorithm-visualizer.org/">Algorithm Visualizer算法可视化网站</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;解题套路&quot;&gt;&lt;a href=&quot;#解题套路&quot; class=&quot;headerlink&quot; title=&quot;解题套路&quot;&gt;&lt;/a&gt;解题套路&lt;/h2&gt;&lt;h3 id=&quot;缩小问题规模&quot;&gt;&lt;a href=&quot;#缩小问题规模&quot; class=&quot;headerlink&quot; title=&quot;缩小问题规</summary>
      
    
    
    
    <category term="数据结构与算法" scheme="https://wenkex.gitee.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
    
  </entry>
  
  <entry>
    <title>云服务器</title>
    <link href="https://wenkex.gitee.io/2022/092551507.html"/>
    <id>https://wenkex.gitee.io/2022/092551507.html</id>
    <published>2022-09-25T00:32:17.000Z</published>
    <updated>2022-10-18T13:28:34.378Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-云服务器"><a href="#1-云服务器" class="headerlink" title="1. 云服务器"></a>1. 云服务器</h1><p>云服务器（Elastic Compute Service, 简称ECS），是一种简单高效，处理能力可以弹性伸缩的计算服务。ECS的相关术语说明如下：</p><p>实例（Instance）：是一个虚拟的计算环境，由CPU、内存、系统盘和运行的操作系统组成；ECS实例作为云服务器最为核心的概念，其他资源，比如磁盘、IP、镜像、快照等，只有与ECS结合后才具有使用意义。</p><p>地域（Region）：指ECS实例所在的物理位置。地域内的ECS实例内网是互通的，不同的地域之间ECS实例内网不互通。</p><p>可用区（Zone）：指在同一地域内，电力和网络互相独立的物理区域。</p><p>磁盘（Disk）：是为ECS实例提供数据块级别的数据存储。可以分为4类： 普通云盘、SSD云盘、高效云盘和本地SSD磁盘</p><p>快照（Snapshot）：是某一个时间点上某个磁盘的数据拷贝。</p><p>镜像（Image）：是ECS实例运行环境的模板，一般包括操作系统和预装的软件。</p><p>安全组（Security Group）：是一种虚拟防火墙，具备状态检测包过滤功能。每个实例至少属于一个安全组。同一个安全组内的实例之间网络互通，不同安全组的实例之间默认内网不通，但是可以授权两个安全组之间互访。</p><h2 id="1-1-虚拟主机、ECS云服务器、VPS区别汇总"><a href="#1-1-虚拟主机、ECS云服务器、VPS区别汇总" class="headerlink" title="1.1. 虚拟主机、ECS云服务器、VPS区别汇总"></a>1.1. 虚拟主机、ECS云服务器、VPS区别汇总</h2><p>1、虚拟主机</p><p>虚拟主机就是利用虚拟化的技术，将一台服务器划分出一定大小的空间，每个空间都给予单独的 FTP 权限和 Web 访问权限，多个用户共同平均使用这台服务器的硬件资源。不同配置的虚拟主机主要是在磁盘空间、数据库大小、流量上面的区别。虚拟主机也有可以分为独享的虚拟主机，和共享的虚拟主机。顾名思义，两者之间的区别在于服务器资源的独享和共享。网站主机、空间、都是一个意思。这一类的主机用户的权限很低，没有远程桌面，只有FTP权限供用户上传文档等操作。优势是比较价格便宜。</p><p>2、VPS</p><p>先说一下vps，Virtual Private Server 虚拟专用服务器,一般是将一个独立服务器通过虚拟化技术虚拟成多个虚拟专用服务器。与虚拟主机不同的是，你拥有的是一台虚拟的服务器，类似于Windows上的虚拟机一样，虽然是虚拟的，但是使用起来，和使用客户机没有什么区别。同理，VPS可以使用远程桌面登录对服务器进行维护操作。</p><p>3、ECS云服务器</p><p>现在的主流的服务器解决方案，一般理解云服务器和VPS一样，同样是虚拟化的技术虚拟出来的服务器。也有人说以前的VPS就是现在的ECS，其实不然，云服务器是一个计算，网络，存储的组合。简单点说就是通过多个CPU，内存，硬盘组成的计算池和存储池和网络的组合；在这样的平台上虚拟出的服务器，用户可以根据自己的运算需要选择配置不同的云服务器。具体区别总结如下：</p><h2 id="1-2-如何选择云服务器配置"><a href="#1-2-如何选择云服务器配置" class="headerlink" title="1.2. 如何选择云服务器配置"></a>1.2. 如何选择云服务器配置</h2><h3 id="1-2-1-地域节点"><a href="#1-2-1-地域节点" class="headerlink" title="1.2.1. 地域节点"></a>1.2.1. 地域节点</h3><p>先说地域，地域的选择遵循就近原则，就近选择地域，理论上，用户距离云服务器地域越近，网络延迟越低，速度越快，所以根据用户群所在地区选择地域。</p><p>如果服务器地域选择是大陆地区，需要备案的，如果想免备案，可选择中国香港或者国外地域的服务器，比如美国或新加坡等等。</p><p>地域的选择并不是随便选的，跟网络会有一定的关系。有些用过的小伙伴可能会说，自己就是随便选的，没觉得有啥不同啊？确实一般的用户可能感觉不到有什么区别，但是如果是需要部署大型项目，使用到负载均衡，或者是并发量很大的应用的话，地域的选择就会对使用造成影响。</p><h3 id="1-2-2-服务器的规格配置选择"><a href="#1-2-2-服务器的规格配置选择" class="headerlink" title="1.2.2. 服务器的规格配置选择"></a>1.2.2. 服务器的规格配置选择</h3><p>1、CPU是服务器的一个核心，表示云服务器的运算能力。CPU数量越多，主频越高，CPU性能越优越，对业务处理的能力也就越高，因而用户在选择上最好依据实际的情况考虑。</p><p>2、内存作为数据的中转站，内存越大，可用缓存也就越大，如果是网站，打开速度也就越快。</p><p>3、云服务器的配置取决于业务需求，一般来说对于访问量较小的个人网站，访客不会很多，1核2G更合适，当然这种轻量级业务，选择轻量应用服务器无疑是最爽的，同价位下，配置越高。</p><p>如果是2核4G的配置可满足大多数的用户需求，比如中小企业运营、一般性数据处理、并行计算处理等，对于一些对计算性能要求较高的业务，比如中大型运营活动、大型论坛、网页游戏、批量处理、ERP系统，APP应用等，则需要更高的CPU核数和内存，比如说4核8G。</p><p>4、云服务器是可以弹性升级的，如果业务量评估不足，后期你升级配置，那么1核2G内存升级到2核4G费用会远高于直接购买2核4G的费用，所以趁着新用户资格，一次性选择2核4G最合适，而且如果业务评估周期长，建议选择3年，折扣力度也最大。</p><p>5、不过对于那些云服务器租用到期的老用户，还想继续低价也不是非常难，可以找朋友家人注册一个新账号，重新参加新用户活动，然后直接将当前云数据迁移过去就ok了，官网帮助文档也有解决方案。</p><p>6、系统盘是用来存储云服务器系统的，和家用电脑的C盘差不多，购买的服务器默认会提供的系统盘一般为40G；当选择镜像安装云服务器操作系统时，系统是直接保存在系统盘的，随云服务器一起创建和释放。如果更换操作系统，系统盘数据会被清空，系统盘只能有1个，创建云服务器时必须要有系统盘。比较推荐大家选择读写速度更快的数据盘，系统盘可以选择SSD类型的；性能方面ESSD云盘 &gt; SSD云盘 &gt; 高效云盘 &gt; 普通云盘。当然ESSD云盘与SSD云盘 存储性能差距不大， 高效云盘要弱一些。</p><p>7、 数据盘是用户自行创建的，可以和购买云服务器时一起创建，也可以单独创建数据盘。一般数据小于20个G是不用去买数据盘的，放在系统盘即可，系统盘也可以回滚快照，和数据盘是一样的，所以不用担心数据丢失的问题，数据盘是给数据比较大的客户用的，比如我们公司的论坛附件超过100G了，必须要挂载数据盘。</p><p>8、带宽:指的是出网带宽，也就是数据从服务器向外传输时的带宽限制。如别人访问你的网站，这时候就是服务器数据向外传输，即出网；1m带宽：如果你的网站是博客，每篇博客1000字左右，加上2张图片，一篇博客的大小估算为100Kb。相当于每秒你差不多可以接受一个用户的访问。</p><p>配置 适用场景<br>1核CPU/2G内存/1M公网带宽 个人博客、小型网站，Web应用程序，也可以适用于开发环境、代码存储及测试<br>2核CPU/4G内存/3M公网带宽 小程序、APP、论坛、门户类网站，企业运营活动，普通数据处理服务<br>4核CPU/8G内存/8M公网带宽 APP、视频、购物类网站，ERP系统，大数据及实时在线或离线分析、深度学习、批量计算、视频编码等<br>8MCPU/16G内存/10M公网带宽 游戏开发，高性能科学和工程应用，数据分析、深度学习、批量计算等</p><h2 id="1-3-连接云服务器"><a href="#1-3-连接云服务器" class="headerlink" title="1.3. 连接云服务器"></a>1.3. 连接云服务器</h2><p>腾讯云服务器为 Windows 实例时，系统默认用户名是 Administrator。</p><p>腾讯云服务器为 Linux 实例时，系统默认用户名是 root。</p><p>腾讯云服务器为Ubuntu 系统的默认用户名是 ubuntu。</p><h2 id="1-4-服务器安全"><a href="#1-4-服务器安全" class="headerlink" title="1.4. 服务器安全"></a>1.4. 服务器安全</h2><p>防止云服务器被爆破，数据库也不能设置弱密码</p><h3 id="1-4-1-修改SSH登录端口"><a href="#1-4-1-修改SSH登录端口" class="headerlink" title="1.4.1. 修改SSH登录端口"></a>1.4.1. 修改SSH登录端口</h3><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 将<span class="comment">#Port 22去掉#，修改为10000后的端口号，保存并退出</span></span></span><br><span class="line">vi /etc/ssh/sshd_conf</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 重启SSH服务</span></span><br><span class="line">systemctl restart sshd.service</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h3 id="1-4-2-禁用root用户"><a href="#1-4-2-禁用root用户" class="headerlink" title="1.4.2. 禁用root用户"></a>1.4.2. 禁用root用户</h3><p>修改端口有一定的作用，可以躲过一些广撒网式攻击，但由于有扫描端口的工具存在，ssh服务的端口经过扫描就会被发现，所以还需要进一步加强安全 —— 禁用root用户。</p><p>禁止root用户使用密码登录，推荐使用密钥登录系统；</p><p>腾讯与服务器Ubuntu 系统的默认用户名是 ubuntu，并在安装过程中默认不设置 root 帐户和密码。您如有需要，可在设置中开启允许 root 用户登录</p><p>为提高轻量应用服务器实例的安全性，Linux 实例绑定密钥后，会默认会禁止通过密码登录 root 用户。如您仍需保留密码登录方式，可参考 修改 SSH 进行修改。</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 打开 sshd_config 配置文件。</span></span><br><span class="line">sudo vi /etc/ssh/ssh_config</span><br><span class="line"></span><br><span class="line">sudo service ssh restart     #重启ssh服务</span><br></pre></td></tr></tbody></table></figure><p>sshd_config是sshd的配置文件，其中PermitRootLogin可以限定root用户通过ssh的登录方式<br>| 参数类别                 | 是否允许ssh登陆 | 登录方式    | 交互shell    |<br>|———————-|———–|———|————|<br>| yes                  | 允许        | 没有限制    | 没有限制       |<br>| without-password     | 允许        | 除密码以外   | 没有限制       |<br>| forced-commands-only | 允许        | 仅允许使用密钥 | 仅允许已授权的命令  |<br>| no                   | 不允许       | N/A     | N/A        |</p><h3 id="1-4-3-防止端口扫描"><a href="#1-4-3-防止端口扫描" class="headerlink" title="1.4.3. 防止端口扫描"></a>1.4.3. 防止端口扫描</h3><p>为了避免别人知道你暴露哪些端口，可以设置防火墙来指定允许本机ip访问这些端口，然后再利用nigix反向代理</p><p>设置端口指定ip访问<br>宝塔面板-安全-端口设置-来源-选择指定ip-填入127.0.0.1</p><h3 id="1-4-4-限制ip登录"><a href="#1-4-4-限制ip登录" class="headerlink" title="1.4.4. 限制ip登录"></a>1.4.4. 限制ip登录</h3><p>自动获取暴力攻击设备IP信息，通过防火墙或第三方工具限制IP地址登录；</p><h3 id="1-4-5-防火墙"><a href="#1-4-5-防火墙" class="headerlink" title="1.4.5. 防火墙"></a>1.4.5. 防火墙</h3><p>腾讯云的防火墙是外层的，宝塔的防火墙是内层的<br>可以开放腾讯云的防火墙的全部端口，再用宝塔的防火墙具体开放对应端口</p><h2 id="1-5-哪吒管理面板"><a href="#1-5-哪吒管理面板" class="headerlink" title="1.5. 哪吒管理面板"></a>1.5. 哪吒管理面板</h2><p><a href="https://github.com/naiba/nezha">https://github.com/naiba/nezha</a><br><a href="https://nezhahq.github.io/index.html">https://nezhahq.github.io/index.html</a></p><h2 id="1-6-域名解析绑定"><a href="#1-6-域名解析绑定" class="headerlink" title="1.6. 域名解析绑定"></a>1.6. 域名解析绑定</h2><p>在域名控制台</p><p><strong>A记录</strong>将域名指向ip地址，主机记录填你自己设置的，值填ip地址；A记录就是解析我们常见的带www和不带www的域名，解析不带www的域名时主机记录填@或者不填，解析带www得域名时主机记录填www。</p><p><strong>CNAME</strong>也叫别名记录，用来把域名解析到别的域名上。<br>一般情况下都建议使用CNAME记录。CNAME记录可用于CDN加速，通过CDN加速别名解析网站域名，这样既可以起到加速网站的作用，又能隐藏网站的真实IP，减少被攻击的几率。</p><h2 id="1-7-wget下载github的releases的软件"><a href="#1-7-wget下载github的releases的软件" class="headerlink" title="1.7. wget下载github的releases的软件"></a>1.7. wget下载github的releases的软件</h2><p>wget <a href="https://github.com/rabbitmq/erlang-rpm/releases/download/v23.2.4/erlang-23.2.4-1.el7.x86_64.rpm">https://github.com/rabbitmq/erlang-rpm/releases/download/v23.2.4/erlang-23.2.4-1.el7.x86_64.rpm</a></p><p>v23.2.4   版本号<br>erlang-23.2.4-1.el7.x86_64.rpm  要下载的软件包</p><h1 id="2-ubuntu腾讯云服务器"><a href="#2-ubuntu腾讯云服务器" class="headerlink" title="2. ubuntu腾讯云服务器"></a>2. ubuntu腾讯云服务器</h1><p>腾讯云文档(<a href="https://cloud.tencent.com/document/product/1207/44643">https://cloud.tencent.com/document/product/1207/44643</a>)</p><h2 id="2-1-安装docker"><a href="#2-1-安装docker" class="headerlink" title="2.1. 安装docker"></a>2.1. 安装docker</h2><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 使用官方安装脚本自动安装 Docker</span></span><br><span class="line">curl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 也可以使用 daocloud 一键安装命令：</span></span><br><span class="line">curl -sSL https://get.daocloud.io/docker | sh</span><br></pre></td></tr></tbody></table></figure><h1 id="3-托管项目"><a href="#3-托管项目" class="headerlink" title="3. 托管项目"></a>3. 托管项目</h1><h2 id="3-1-Dashy监控面板"><a href="#3-1-Dashy监控面板" class="headerlink" title="3.1. Dashy监控面板"></a>3.1. Dashy监控面板</h2><p>参考<a href="https://johnrosen1.com/2022/04/14/dashy/">https://johnrosen1.com/2022/04/14/dashy/</a><br><a href="https://blog.csdn.net/wbsu2004/article/details/122728259">https://blog.csdn.net/wbsu2004/article/details/122728259</a></p><p>Dashy 是一个开源的自托管的导航页配置服务，具有易于使用的可视化编辑器、状态检查、小工具和主题等功能。你可以将自己常用的一些网站聚合起来放在一起，形成自己的导航页。</p><p>GitHub原项目地址（感谢作者的付出）：<a href="https://github.com/Lissy93/dashy%EF%BC%882.8k">https://github.com/Lissy93/dashy（2.8k</a> star）</p><p>官网地址：<a href="https://dashy.to/">https://dashy.to/</a></p><p>Demo地址：<a href="https://demo.dashy.to/">https://demo.dashy.to/</a></p><p>文档地址：<a href="https://dashy.to/docs/">https://dashy.to/docs/</a></p><h3 id="3-1-1-特点"><a href="#3-1-1-特点" class="headerlink" title="3.1.1. 特点"></a>3.1.1. 特点</h3><p>🚦 对您的每个应用程序/链接进行实时状态监测<br>📊 使用小工具来显示来自自我托管服务的信息和动态内容<br>🔎 按名称、域名或标签进行即时搜索 + 可定制的热键和键盘快捷方式<br>🎨 许多内置的颜色主题，带有UI颜色编辑器并支持自定义CSS<br>🧸 许多图标选项 - Font-Awesome、homelab图标、自动获取Favicon、图像、表情符号等。<br>💂 可选的认证，包括多用户访问、可配置的权限和SSO支持<br>🌎 多语言支持，有10多种人工翻译的语言，还有更多的语言正在开发中<br>☁ 可选的、加密的、免费的异地云备份和恢复功能<br>💼 工作区视图，可同时在多个应用程序之间轻松切换<br>🛩️ 一个最小的视图，可作为快速加载的浏览器起始页使用<br>🖱️ 选择应用程序的启动方式：新标签、同一标签、剪贴板、弹出式模式或在工作区视图中打开<br>📏️可定制布局、尺寸、文本、组件可见性、排序顺序、行为等。<br>🖼️全屏背景图片、自定义导航栏链接、HTML页脚、标题等选项。<br>🚀️容易用Docker设置，或在裸机上，或用一键云部署<br>⚙️简单的基于YAML的单文件配置，以及通过UI配置应用程序的选项。<br>✨ 正在积极开发，定期添加改进和新功能<br>ᾐ极小的软件包，完全响应的UI，和PWA的基本离线访问。<br>🆓 100%免费和开放源代码<br>🔐 高度重视隐私问题</p><p>关键，他还能添加很多小的组件，比如配合glances，监控你系统运行情况</p><h3 id="3-1-2-docker-compose搭建"><a href="#3-1-2-docker-compose搭建" class="headerlink" title="3.1.2. docker-compose搭建"></a>3.1.2. docker-compose搭建</h3><p>占用内存280m<br>1.创建一下安装的目录</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /app/dashy/{icons,public}</span><br><span class="line"></span><br><span class="line">cd /app/dashy</span><br><span class="line"></span><br><span class="line">touch docker-compose.yml</span><br><span class="line">vi /app/dashy/docker-compose.yml</span><br></pre></td></tr></tbody></table></figure><p>2.编写docker-compose.yml文件</p><figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">'3.3'</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">    <span class="attr">dashy:</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">'10022:80'</span></span><br><span class="line">        <span class="attr">volumes:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">'/app/dashy/public/conf.yml:/app/public/conf.yml'</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">'/app/dashy/icons:/app/public/item-icons/icons'</span></span><br><span class="line">        <span class="attr">container_name:</span> <span class="string">dashy</span></span><br><span class="line">        <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">'lissy93/dashy:latest'</span></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>3.编写conf.yml配置文件<br>vi /app/dashy/public/conf.yml</p><figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment"># Page meta info, like heading, footer text and nav links</span></span><br><span class="line"><span class="attr">pageInfo:</span></span><br><span class="line">  <span class="attr">title:</span> <span class="string">Dashy</span></span><br><span class="line">  <span class="attr">description:</span> <span class="string">Welcome</span> <span class="string">to</span> <span class="string">your</span> <span class="string">new</span> <span class="string">dashboard!</span></span><br><span class="line">  <span class="attr">navLinks:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">title:</span> <span class="string">dashy项目的GitHub</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">https://github.com/Lissy93/dashy</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">title:</span> <span class="string">Documentation</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">https://dashy.to/docs</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Optional app settings and configuration</span></span><br><span class="line"><span class="attr">appConfig:</span></span><br><span class="line">  <span class="attr">theme:</span> <span class="string">colorful</span></span><br><span class="line">  <span class="attr">layout:</span> <span class="string">auto</span></span><br><span class="line">  <span class="attr">iconSize:</span> <span class="string">medium</span></span><br><span class="line">  <span class="attr">language:</span> <span class="string">cn</span></span><br><span class="line">  <span class="attr">auth:</span></span><br><span class="line">    <span class="attr">users:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">user:</span> <span class="string">arts</span>   <span class="comment"># 改成自己的用户名</span></span><br><span class="line">        <span class="attr">hash:</span> <span class="string">5fbb237c8a36d80336407bd7c350db880c86fae21ab42b4dec57d512114e56a6</span>  <span class="comment"># 设置cha256 哈希加密后的密码，地址用这个： https://emn178.github.io/online-tools/sha256.html</span></span><br><span class="line">        <span class="attr">type:</span> <span class="string">admin</span></span><br><span class="line"><span class="comment"># Main content - An array of sections, each containing an array of items</span></span><br><span class="line"><span class="attr">sections:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Getting</span> <span class="string">Started</span></span><br><span class="line">  <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-rocket</span></span><br><span class="line">  <span class="attr">items:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">title:</span> <span class="string">Dashy</span> <span class="string">Live</span></span><br><span class="line">    <span class="attr">description:</span> <span class="string">Development</span> <span class="string">a</span> <span class="string">project</span> <span class="string">management</span> <span class="string">links</span> <span class="string">for</span> <span class="string">Dashy</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">https://i.ibb.co/qWWpD0v/astro-dab-128.png</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://live.dashy.to/</span></span><br><span class="line">    <span class="attr">target:</span> <span class="string">newtab</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">title:</span> <span class="string">GitHub</span></span><br><span class="line">    <span class="attr">description:</span> <span class="string">Source</span> <span class="string">Code,</span> <span class="string">Issues</span> <span class="string">and</span> <span class="string">Pull</span> <span class="string">Requests</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://github.com/lissy93/dashy</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">favicon</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">title:</span> <span class="string">Docs</span></span><br><span class="line">    <span class="attr">description:</span> <span class="string">Configuring</span> <span class="string">&amp;</span> <span class="string">Usage</span> <span class="string">Documentation</span></span><br><span class="line">    <span class="attr">provider:</span> <span class="string">Dashy.to</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">far</span> <span class="string">fa-book</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://dashy.to/docs</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">title:</span> <span class="string">Showcase</span></span><br><span class="line">    <span class="attr">description:</span> <span class="string">See</span> <span class="string">how</span> <span class="string">others</span> <span class="string">are</span> <span class="string">using</span> <span class="string">Dashy</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://github.com/Lissy93/dashy/blob/master/docs/showcase.md</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">far</span> <span class="string">fa-grin-hearts</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">title:</span> <span class="string">Config</span> <span class="string">Guide</span></span><br><span class="line">    <span class="attr">description:</span> <span class="string">See</span> <span class="string">full</span> <span class="string">list</span> <span class="string">of</span> <span class="string">configuration</span> <span class="string">options</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://github.com/Lissy93/dashy/blob/master/docs/configuring.md</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-wrench</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">title:</span> <span class="string">Support</span></span><br><span class="line">    <span class="attr">description:</span> <span class="string">Get</span> <span class="string">help</span> <span class="string">with</span> <span class="string">Dashy,</span> <span class="string">raise</span> <span class="string">a</span> <span class="string">bug,</span> <span class="string">or</span> <span class="string">get</span> <span class="string">in</span> <span class="string">contact</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://github.com/Lissy93/dashy/blob/master/.github/SUPPORT.md</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">far</span> <span class="string">fa-hands-helping</span></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>docker-compose up -d  </p><h3 id="3-1-3-配置文件"><a href="#3-1-3-配置文件" class="headerlink" title="3.1.3. 配置文件"></a>3.1.3. 配置文件</h3><p>配置文件以 YAML 格式编写，保存在容器的 /app/public/conf.yml 中，界面上可以直接启动编辑器，对 conf.yml 进行源代码编辑<br>配置文件存在三个根属性：<br>  pageInfo - 仪表盘元数据，如标题、描述、导航栏链接和页脚文本<br>  appConfig - 仪表板设置，如主题、身份验证、语言和自定义，<br>  sections - 组部分，每个部分包括一组项目，每个模块包括一个 item 配置</p><p>直接通过 UI 编辑你的配置，更改将保存在此文件中。<br>搭建好后，进入web管理界面-设置-更新设置-编辑设置</p><p>也使用 Docker volume将配置文件从主机系统挂载到容器中去，例如 -v ./host-system/my-local-conf.yml:/app/public/conf.yml，使用 docker exec -it [container-id] yarn validate-config 命令检查你的配置。编辑配置后，应用程序将在后台重建，这可能需要一分钟。</p><p>我的配置文件</p><figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment"># Page meta info, like heading, footer text and nav links</span></span><br><span class="line"><span class="attr">pageInfo:</span></span><br><span class="line">  <span class="attr">title:</span> <span class="string">Arts</span></span><br><span class="line">  <span class="attr">description:</span> <span class="string">Welcome</span> <span class="string">to</span> <span class="string">my</span> <span class="string">导航页!</span></span><br><span class="line">  <span class="attr">navLinks:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">title:</span> <span class="string">dashy项目的GitHub</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">https://github.com/Lissy93/dashy</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">title:</span> <span class="string">我的GitHub主页</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">https://github.com/wenkexia/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Optional app settings and configuration</span></span><br><span class="line"><span class="attr">appConfig:</span></span><br><span class="line">  <span class="attr">theme:</span> <span class="string">colorful</span></span><br><span class="line">  <span class="attr">layout:</span> <span class="string">auto</span></span><br><span class="line">  <span class="attr">iconSize:</span> <span class="string">medium</span></span><br><span class="line">  <span class="attr">language:</span> <span class="string">cn</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Main content - An array of sections, each containing an array of items</span></span><br><span class="line"><span class="attr">sections:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">CPU</span> <span class="string">Usage</span></span><br><span class="line">  <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-tachometer</span></span><br><span class="line">  <span class="attr">displayData:</span></span><br><span class="line">    <span class="attr">rows:</span> <span class="number">2</span></span><br><span class="line">  <span class="attr">widgets:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">gl-current-cpu</span></span><br><span class="line">    <span class="attr">options:</span></span><br><span class="line">      <span class="attr">hostname:</span> <span class="string">http://43.154.228.217:10022</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">gl-current-cores</span></span><br><span class="line">    <span class="attr">options:</span></span><br><span class="line">      <span class="attr">hostname:</span> <span class="string">http://43.154.228.217:10022</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">CPU</span> <span class="string">History</span></span><br><span class="line">  <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-microchip</span></span><br><span class="line">  <span class="attr">displayData:</span></span><br><span class="line">    <span class="attr">cols:</span> <span class="number">2</span></span><br><span class="line">  <span class="attr">widgets:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">gl-cpu-history</span></span><br><span class="line">    <span class="attr">options:</span></span><br><span class="line">      <span class="attr">hostname:</span> <span class="string">http://43.154.228.217:10022</span></span><br><span class="line">      <span class="attr">limit:</span> <span class="number">60</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Disk</span> <span class="string">Space</span></span><br><span class="line">  <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-hdd</span></span><br><span class="line">  <span class="attr">widgets:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">gl-disk-space</span></span><br><span class="line">    <span class="attr">options:</span></span><br><span class="line">      <span class="attr">hostname:</span> <span class="string">http://43.154.228.217:10022</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Network</span> <span class="string">Interfaces</span></span><br><span class="line">  <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-ethernet</span></span><br><span class="line">  <span class="attr">widgets:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">gl-network-interfaces</span></span><br><span class="line">    <span class="attr">options:</span></span><br><span class="line">      <span class="attr">hostname:</span> <span class="string">http://43.154.228.217:10022</span></span><br><span class="line">      <span class="attr">limit:</span> <span class="number">500</span></span><br><span class="line">      </span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Network</span> <span class="string">Activity</span></span><br><span class="line">  <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-exchange</span></span><br><span class="line">  <span class="attr">displayData:</span></span><br><span class="line">    <span class="attr">cols:</span> <span class="number">2</span></span><br><span class="line">  <span class="attr">widgets:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">gl-network-activity</span></span><br><span class="line">    <span class="attr">options:</span></span><br><span class="line">      <span class="attr">hostname:</span> <span class="string">http://43.154.228.217:10022</span></span><br><span class="line">      <span class="attr">limit:</span> <span class="number">500</span></span><br><span class="line">      </span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Disk</span> <span class="string">IO</span></span><br><span class="line">  <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-disc-drive</span></span><br><span class="line">  <span class="attr">widgets:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">gl-disk-io</span></span><br><span class="line">    <span class="attr">options:</span></span><br><span class="line">      <span class="attr">hostname:</span> <span class="string">http://43.154.228.217:10022</span></span><br><span class="line">       </span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Memory</span> <span class="string">Usage</span></span><br><span class="line">  <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-memory</span></span><br><span class="line">  <span class="attr">widgets:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">gl-current-mem</span></span><br><span class="line">    <span class="attr">options:</span></span><br><span class="line">      <span class="attr">hostname:</span> <span class="string">http://43.154.228.217:10022</span></span><br><span class="line">      </span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">System</span> <span class="string">Load</span></span><br><span class="line">  <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-tasks-alt</span></span><br><span class="line">  <span class="attr">widgets:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">gl-system-load</span></span><br><span class="line">    <span class="attr">options:</span></span><br><span class="line">      <span class="attr">hostname:</span> <span class="string">http://43.154.228.217:10022</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">System</span> <span class="string">Alerts</span></span><br><span class="line">  <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-sensor-alert</span></span><br><span class="line">  <span class="attr">widgets:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">gl-alerts</span></span><br><span class="line">    <span class="attr">options:</span></span><br><span class="line">      <span class="attr">hostname:</span> <span class="string">http://43.154.228.217:10022</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Productivity</span></span><br><span class="line">  <span class="attr">icon:</span> <span class="string">far</span> <span class="string">fa-briefcase</span></span><br><span class="line">  <span class="attr">items:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">title:</span> <span class="string">ProtonMail</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">favicon</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://mail.protonmail.com/</span></span><br><span class="line">    <span class="attr">description:</span> <span class="string">Primary</span> <span class="string">email</span> <span class="string">account</span></span><br><span class="line">    <span class="attr">tags:</span> [<span class="string">hosted</span>, <span class="string">personal</span>, <span class="string">email</span>, <span class="string">mail</span>]</span><br><span class="line">    <span class="attr">hotkey:</span> <span class="number">1</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">title:</span> <span class="string">CTemplar</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">favicon</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://mail.ctemplar.com/</span></span><br><span class="line">    <span class="attr">description:</span> <span class="string">Secondary</span> <span class="string">email</span> <span class="string">account</span></span><br><span class="line">    <span class="attr">tags:</span> [<span class="string">hosted</span>, <span class="string">personal</span>, <span class="string">email</span>, <span class="string">mail</span>]</span><br><span class="line">    <span class="attr">hotkey:</span> <span class="number">2</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">title:</span> <span class="string">AnonAddy</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">favicon</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://app.anonaddy.com/</span></span><br><span class="line">    <span class="attr">description:</span> <span class="string">Mail</span> <span class="string">alias</span> <span class="string">forwarder</span></span><br><span class="line">    <span class="attr">tags:</span> [<span class="string">hosted</span>, <span class="string">personal</span>, <span class="string">forwarder</span>, <span class="string">aliases</span>, <span class="string">email</span>]</span><br><span class="line">    <span class="attr">hotkey:</span> <span class="number">3</span></span><br><span class="line">    <span class="attr">statusCheckAcceptCodes:</span> <span class="string">'401'</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">title:</span> <span class="string">LessPass</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">favicon</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://lesspass.com/</span></span><br><span class="line">    <span class="attr">description:</span> <span class="string">Deterministic</span> <span class="string">password</span> <span class="string">generator</span></span><br><span class="line">    <span class="attr">tags:</span> [<span class="string">hosted</span>, <span class="string">personal</span>, <span class="string">password</span>, <span class="string">generate</span>, <span class="string">deterministic</span>]</span><br><span class="line">    <span class="attr">hotkey:</span> <span class="number">4</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">title:</span> <span class="string">EteSync</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">favicon</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://pim.etesync.com/</span></span><br><span class="line">    <span class="attr">description:</span> <span class="string">Calendar</span> <span class="string">+</span> <span class="string">Contacts,</span> <span class="string">CalDAV</span> <span class="string">sync</span></span><br><span class="line">    <span class="attr">tags:</span> [<span class="string">hosted</span>, <span class="string">personal</span>, <span class="string">caldav</span>, <span class="string">calendar</span>, <span class="string">contacts</span>, <span class="string">tasks</span>, <span class="string">planning</span>]</span><br><span class="line">    <span class="attr">hotkey:</span> <span class="number">5</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">title:</span> <span class="string">Tasks</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">https://i.ibb.co/v4jznK0/todo-list.png</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://pim.etesync.com/pim/tasks</span></span><br><span class="line">    <span class="attr">description:</span> <span class="string">Todo</span> <span class="string">list</span> <span class="string">and</span> <span class="string">tasks</span> <span class="string">from</span> <span class="string">CalDAV</span></span><br><span class="line">    <span class="attr">tags:</span> [<span class="string">hosted</span>, <span class="string">personal</span>, <span class="string">caldav</span>, <span class="string">tasks</span>, <span class="string">planning</span>]</span><br><span class="line">    <span class="attr">hotkey:</span> <span class="number">6</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">title:</span> <span class="string">Tresorit</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">favicon</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://web.tresorit.com/</span></span><br><span class="line">    <span class="attr">description:</span> <span class="string">Off-site</span> <span class="string">encrypted</span> <span class="string">file</span> <span class="string">sync</span> <span class="string">+</span> <span class="string">backup</span></span><br><span class="line">    <span class="attr">tags:</span> [<span class="string">hosted</span>, <span class="string">personal</span>, <span class="string">files</span>, <span class="string">backup</span>, <span class="string">sync</span>, <span class="string">storage</span> ]</span><br><span class="line">    <span class="attr">hotkey:</span> <span class="number">7</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">title:</span> <span class="string">StandardNotes</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">favicon</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://app.standardnotes.com/</span></span><br><span class="line">    <span class="attr">description:</span> <span class="string">Notes,</span> <span class="string">and</span> <span class="string">my</span> <span class="string">second</span> <span class="string">brain</span></span><br><span class="line">    <span class="attr">tags:</span> [<span class="string">hosted</span>, <span class="string">personal</span>, <span class="string">notes</span> ]</span><br><span class="line">    <span class="attr">hotkey:</span> <span class="number">8</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">title:</span> <span class="string">1Password</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">favicon</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://my.1password.com/</span></span><br><span class="line">    <span class="attr">description:</span> <span class="string">Password</span> <span class="string">Manager</span></span><br><span class="line">    <span class="attr">tags:</span> [<span class="string">hosted</span>, <span class="string">personal</span>, <span class="string">passwords</span> ]</span><br><span class="line">    <span class="attr">hotkey:</span> <span class="number">9</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Dev</span> <span class="string">&amp;</span> <span class="string">Cloud</span></span><br><span class="line">  <span class="attr">icon:</span> <span class="string">far</span> <span class="string">fa-code</span></span><br><span class="line">  <span class="attr">items:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">title:</span> <span class="string">GitHub</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">favicon</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://github.com/</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">title:</span> <span class="string">StackOverflow</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">favicon</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">http://stackoverflow.com/</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">title:</span> <span class="string">CloudFlare</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">favicon</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://dash.cloudflare.com/</span></span><br><span class="line">    <span class="attr">statusCheckAcceptCodes:</span> <span class="string">'403'</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">title:</span> <span class="string">DigitalOcean</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">favicon</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://cloud.digitalocean.com/</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">title:</span> <span class="string">Netlify</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">favicon</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://app.netlify.com/</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">title:</span> <span class="string">CodeSandbox</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">favicon</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://codesandbox.io/dashboard</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">title:</span> <span class="string">Hack</span> <span class="string">the</span> <span class="string">Box</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">favicon</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://www.hackthebox.com/home</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">title:</span> <span class="string">Documentation</span></span><br><span class="line">    <span class="attr">subItems:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">title:</span> <span class="string">JavaScript</span></span><br><span class="line">      <span class="attr">url:</span> <span class="string">https://developer.mozilla.org</span></span><br><span class="line">      <span class="attr">icon:</span> <span class="string">si-javascript</span></span><br><span class="line">      <span class="attr">color:</span> <span class="string">'#F7DF1E'</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">title:</span> <span class="string">TypeScript</span></span><br><span class="line">      <span class="attr">url:</span> <span class="string">https://www.typescriptlang.org/docs</span></span><br><span class="line">      <span class="attr">icon:</span> <span class="string">si-typescript</span></span><br><span class="line">      <span class="attr">color:</span> <span class="string">'#3178C6'</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">title:</span> <span class="string">Svelt</span></span><br><span class="line">      <span class="attr">url:</span> <span class="string">https://svelte.dev/docs</span></span><br><span class="line">      <span class="attr">icon:</span> <span class="string">si-svelte</span></span><br><span class="line">      <span class="attr">color:</span> <span class="string">'#FF3E00'</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">title:</span> <span class="string">Go</span></span><br><span class="line">      <span class="attr">url:</span> <span class="string">https://go.dev/doc</span></span><br><span class="line">      <span class="attr">icon:</span> <span class="string">si-go</span></span><br><span class="line">      <span class="attr">color:</span> <span class="string">'#00ADD8'</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">title:</span> <span class="string">Rust</span></span><br><span class="line">      <span class="attr">url:</span> <span class="string">https://doc.rust-lang.org/reference</span></span><br><span class="line">      <span class="attr">icon:</span> <span class="string">si-rust</span></span><br><span class="line">      <span class="attr">color:</span> <span class="string">'#000000'</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">title:</span> <span class="string">Docker</span></span><br><span class="line">      <span class="attr">url:</span> <span class="string">https://docs.docker.com/</span></span><br><span class="line">      <span class="attr">icon:</span> <span class="string">si-docker</span></span><br><span class="line">      <span class="attr">color:</span> <span class="string">'#2496ED'</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Social</span> <span class="string">&amp;</span> <span class="string">News</span></span><br><span class="line">  <span class="attr">icon:</span> <span class="string">far</span> <span class="string">fa-thumbs-up</span></span><br><span class="line">  <span class="attr">items:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">title:</span> <span class="string">Discord</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">si-discord</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://discord.com/channels/</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">title:</span> <span class="string">Mastodon</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">si-mastodon</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://mastodon.social/</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">title:</span> <span class="string">Reddit</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">si-reddit</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://www.reddit.com/</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">title:</span> <span class="string">HackerNews</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">si-ycombinator</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://news.ycombinator.com/</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">title:</span> <span class="string">Twitter</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">si-twitter</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://twitter.com/</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">title:</span> <span class="string">YouTube</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">si-youtube</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://youtube.com/</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">title:</span> <span class="string">Instagram</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">si-instagram</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://www.instagram.com/</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">title:</span> <span class="string">News</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">si-bbc</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://bbc.co.uk/news</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">title:</span> <span class="string">Crypto</span> <span class="string">Prices</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">fab</span> <span class="string">fa-bitcoin</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://www.livecoinwatch.com/</span></span><br><span class="line">    <span class="attr">description:</span> <span class="string">Real-time</span> <span class="string">crypto</span> <span class="string">prices</span> <span class="string">and</span> <span class="string">read-only</span> <span class="string">portfolio</span></span><br><span class="line">    <span class="attr">provider:</span> <span class="string">Live</span> <span class="string">Coin</span> <span class="string">Watch</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">我的站点</span></span><br><span class="line">  <span class="attr">icon:</span> <span class="string">far</span> <span class="string">fa-thumbs-up</span></span><br><span class="line">  <span class="attr">items:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">title:</span> <span class="string">博客</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">si-discord</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://halo.wenkex.top/</span></span><br></pre></td></tr></tbody></table></figure><h3 id="3-1-4-widgets"><a href="#3-1-4-widgets" class="headerlink" title="3.1.4. widgets"></a>3.1.4. widgets</h3><p>Dashy 支持以小部件的形式显示动态内容。有几个开箱即用的内置小部件，并且支持自定义小部件以显示来自几乎所有具有 API 的服务的统计信息。</p><p>具体说明在👇这里：[widgets]<a href="https://github.com/Lissy93/dashy/blob/master/docs/widgets.md">https://github.com/Lissy93/dashy/blob/master/docs/widgets.md</a></p><h3 id="3-1-5-使用样例"><a href="#3-1-5-使用样例" class="headerlink" title="3.1.5. 使用样例"></a>3.1.5. 使用样例</h3><p>官方提供了一些 conf.yml 样例，可以直接修改使用。</p><p>效果在👇下面可以看到：<br><a href="https://github.com/Lissy93/dashy/blob/master/docs/showcase.md">https://github.com/Lissy93/dashy/blob/master/docs/showcase.md</a></p><p>conf.yml 下载地址就在👇这里：<br><a href="https://gist.github.com/Lissy93/000f712a5ce98f212817d20bc16bab10">https://gist.github.com/Lissy93/000f712a5ce98f212817d20bc16bab10</a></p><p>可以直接查看官方示例 <a href="https://demo.dashy.to/%E3%80%81https://live.dashy.to/">https://demo.dashy.to/、https://live.dashy.to/</a> 了解更多信息。</p><h3 id="3-1-6-安装服务器监控插件"><a href="#3-1-6-安装服务器监控插件" class="headerlink" title="3.1.6. 安装服务器监控插件"></a>3.1.6. 安装服务器监控插件</h3><p><a href="https://blog.laoda.de/archives/docker-compose-install-dashy#7.2.1-%E5%AE%89%E8%A3%85glances">https://blog.laoda.de/archives/docker-compose-install-dashy#7.2.1-%E5%AE%89%E8%A3%85glances</a><br>Glances 是一个跨平台的、基于命令行的系统监控工具，由 Python 语言编写，使用 Python 的 psutil 库来抓取系统数据。可以监控 CPU、负载均衡、内存、网络设备、磁盘 I/O、进程和文件系统使用等。</p><p>安装服务器监控插件<br>打开SSL，监控数据无法读取<br>只能读取本机的数据，无法读取外部机器的数据</p><h2 id="3-2-Halo博客"><a href="#3-2-Halo博客" class="headerlink" title="3.2. Halo博客"></a>3.2. Halo博客</h2><p>优点<br>  1、部署方便（指用Docker）<br>  2、主题也日渐丰富<br>  3、开发者非常友好，有活跃的社区，基本上你碰到任何问题，都能在社区中找到答案（当然先要学习提问的智慧）<br>  4、维护方便（尤其是用了Docker）</p><p>缺点:因为是java写的，比较吃服务器的配置，推荐服务器内存至少1GB,占用内存680m<br><a href="https://github.com/halo-dev/halo">https://github.com/halo-dev/halo</a></p><p>文档：<a href="https://docs.halo.run/getting-started/install/docker">https://docs.halo.run/getting-started/install/docker</a></p><p>论坛：<a href="https://bbs.halo.run/">https://bbs.halo.run/</a></p><h3 id="3-2-1-docker搭建"><a href="#3-2-1-docker搭建" class="headerlink" title="3.2.1. docker搭建"></a>3.2.1. docker搭建</h3><p><a href="https://blog.laoda.de/archives/docker-install-halo">https://blog.laoda.de/archives/docker-install-halo</a></p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 创建 工作目录</span></span><br><span class="line">mkdir /app/.halo &amp;&amp; cd /app/.halo</span><br><span class="line"><span class="meta">#</span><span class="bash">下载示例配置文件到 工作目录</span></span><br><span class="line">wget https://dl.halo.run/config/application-template.yaml -O ./application.yaml</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 编辑配置文件，配置数据库或者端口等</span></span><br><span class="line">vim /app/.halo/application.yaml</span><br><span class="line"></span><br><span class="line">rm -rf /app/.halo/.leveldb</span><br><span class="line"></span><br><span class="line">docker run -it -d --name halo -p 20001:8090 -v /app/.halo:/root/.halo --restart=unless-stopped halohub/halo:latest </span><br></pre></td></tr></tbody></table></figure><p>-it： 开启输入功能并连接伪终端<br>-d： 后台运行容器<br>–name： 为容器指定一个名称<br>-p： 端口映射，格式为 主机(宿主)端口:容器端口 ，可在 application.yaml 配置。<br>-v： 工作目录映射。形式为：-v 宿主机路径:/root/.halo，后者不能修改。<br>–restart： 建议设置为 unless-stopped，在 Docker 启动的时候自动启动 Halo 容器。</p><h3 id="3-2-2-设置反代"><a href="#3-2-2-设置反代" class="headerlink" title="3.2.2. 设置反代"></a>3.2.2. 设置反代</h3><p>在宝塔的网站配置文件中设置反代</p><p>删除默认的location块，并加入以下location块</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># Reverse Porxy For halo</span><br><span class="line">    location / {</span><br><span class="line">        proxy_pass http://127.0.0.1:端口/;</span><br><span class="line">        proxy_redirect off;</span><br><span class="line">        proxy_set_header Host $host;</span><br><span class="line">        proxy_set_header Range $http_range;</span><br><span class="line">        proxy_set_header If-Range $http_if_range;</span><br><span class="line">        proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">        proxy_set_header X-Forwarded-Proto $scheme;</span><br><span class="line">        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">        client_max_body_size 20000m;</span><br><span class="line">        proxy_connect_timeout 600; #代理的连接超时时间（单位：毫秒）</span><br><span class="line">        proxy_read_timeout 600; #代理的读取资源超时时间（单位：毫秒）</span><br><span class="line">    }</span><br></pre></td></tr></tbody></table></figure><p>在域名解析控制台中，域名绑定</p><h3 id="3-2-3-主题推荐"><a href="#3-2-3-主题推荐" class="headerlink" title="3.2.3. 主题推荐"></a>3.2.3. 主题推荐</h3><p>Weicarus   下载：<a href="https://github.com/lin-liem/weicarus">https://github.com/lin-liem/weicarus</a><br>joe2.0下载:<a href="https://github.com/qinhua/halo-theme-joe2.0.git">https://github.com/qinhua/halo-theme-joe2.0.git</a><br><a href="https://github.com/nineya/halo-theme-dream.git">https://github.com/nineya/halo-theme-dream.git</a></p><h3 id="3-2-4-joe主题"><a href="#3-2-4-joe主题" class="headerlink" title="3.2.4. joe主题"></a>3.2.4. joe主题</h3><p>官网：<a href="https://halo.run/">https://halo.run</a><br>文档：<a href="https://docs.halo.run/">https://docs.halo.run</a><br>社区：<a href="https://bbs.halo.run/">https://bbs.halo.run</a><br>主题仓库：<a href="https://halo.run/themes.html">https://halo.run/themes.html</a><br>开源地址：<a href="https://github.com/halo-dev/halo">https://github.com/halo-dev/halo</a></p><p>首页文章不显示问题<br>在halo的web管理端中-主题设置-首页-关闭异步加载文章列表</p><h3 id="3-2-5-记得备份"><a href="#3-2-5-记得备份" class="headerlink" title="3.2.5. 记得备份"></a>3.2.5. 记得备份</h3><p>由于我想更改端口，所以删除了之前的容器后，再执行创建容器，发现站点无法访问<br>于是只好删除了之前的.halo里的所有文件所以一定要==备份==<br>web后台备份.json文件</p><h2 id="3-3-Wiki-js"><a href="#3-3-Wiki-js" class="headerlink" title="3.3. Wiki.js"></a>3.3. Wiki.js</h2><p>团队知识库管理软件中界面最美观友好的，同时还完美支持中文以及各种丰富的插件</p><p>Wiki.js在docker中的部署也非常简单，一个命令即可完成，前提是先部署好数据库服务器。(数据库权限设置为所有人)</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">docker run --name=wiki \</span><br><span class="line">-e DB_TYPE=mysql \</span><br><span class="line">-e DB_HOST=你的公网或内网IP地址 \</span><br><span class="line">-e DB_PORT=3306 \</span><br><span class="line">-e DB_USER=admin \</span><br><span class="line">-e DB_PASS=admin密码可自行设置 \</span><br><span class="line">-e DB_NAME=wikidb \</span><br><span class="line">-e UPGRADE_COMPANION=1 \</span><br><span class="line">--restart=unless-stopped \</span><br><span class="line">-p 3000:3000 \</span><br><span class="line">-d requarks/wiki:latest</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>防火墙开启3000端口，这样就可以通过<a href="http://你的公网ip地址:3000/">http://你的公网IP地址:3000</a> 访问Wiki.js了，第一次需要创建管理员账号。</p><h3 id="3-3-1-设置反代"><a href="#3-3-1-设置反代" class="headerlink" title="3.3.1. 设置反代"></a>3.3.1. 设置反代</h3><p>在宝塔的网站配置文件中设置反代</p><p>删除默认的location块，并加入以下location块</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># Reverse Porxy For wiki</span><br><span class="line">    location / {</span><br><span class="line">        proxy_pass http://127.0.0.1:3000/;</span><br><span class="line">        proxy_redirect off;</span><br><span class="line">        proxy_set_header Host $host;</span><br><span class="line">        proxy_set_header Range $http_range;</span><br><span class="line">        proxy_set_header If-Range $http_if_range;</span><br><span class="line">        proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">        proxy_set_header X-Forwarded-Proto $scheme;</span><br><span class="line">        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">        client_max_body_size 20000m;</span><br><span class="line">        proxy_connect_timeout 600; #代理的连接超时时间（单位：毫秒）</span><br><span class="line">        proxy_read_timeout 600; #代理的读取资源超时时间（单位：毫秒）</span><br><span class="line">    }</span><br></pre></td></tr></tbody></table></figure><p>在域名解析控制台中，域名绑定</p><h2 id="3-4-huginn"><a href="#3-4-huginn" class="headerlink" title="3.4. huginn"></a>3.4. huginn</h2><p>地址:<a href="https://github.com/huginn/huginn">https://github.com/huginn/huginn</a><br>“基于Ruby的任务自动处理工具。你可以监控事物，然后按照书面逻辑（ifttt）进行处理，例如：监控天气、天气提醒、小说或动漫追更、信息汇总发送等，它有一个稳定的框架和活跃的生态。有了它，你可以让你的生活更有效率。可以试试看。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1-云服务器&quot;&gt;&lt;a href=&quot;#1-云服务器&quot; class=&quot;headerlink&quot; title=&quot;1. 云服务器&quot;&gt;&lt;/a&gt;1. 云服务器&lt;/h1&gt;&lt;p&gt;云服务器（Elastic Compute Service, 简称ECS），是一种简单高效，处理能力可以弹</summary>
      
    
    
    
    <category term="技术" scheme="https://wenkex.gitee.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="云服务器" scheme="https://wenkex.gitee.io/tags/%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>Java-图书管理系统</title>
    <link href="https://wenkex.gitee.io/2022/092125547.html"/>
    <id>https://wenkex.gitee.io/2022/092125547.html</id>
    <published>2022-09-20T23:31:12.000Z</published>
    <updated>2022-10-18T11:56:15.657Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://gitee.com/CandyWall/spring-boot-study">https://gitee.com/CandyWall/spring-boot-study</a><br>访问：<a href="http://localhost/pages/books.html">http://localhost/pages/books.html</a></p><h2 id="数据库脚本"><a href="#数据库脚本" class="headerlink" title="数据库脚本"></a>数据库脚本</h2><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `tbl_book`;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `tbl_book`</span><br><span class="line">(</span><br><span class="line">    `id`          <span class="type">int</span>(<span class="number">11</span>)                                                 <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line">    `type`        <span class="type">varchar</span>(<span class="number">20</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci  <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    `name`        <span class="type">varchar</span>(<span class="number">50</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci  <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    `description` <span class="type">varchar</span>(<span class="number">255</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    <span class="keyword">PRIMARY</span> KEY (`id`) <span class="keyword">USING</span> BTREE</span><br><span class="line">) ENGINE <span class="operator">=</span> InnoDB</span><br><span class="line">  AUTO_INCREMENT <span class="operator">=</span> <span class="number">51</span></span><br><span class="line">  <span class="type">CHARACTER</span> <span class="keyword">SET</span> <span class="operator">=</span> utf8</span><br><span class="line">  <span class="keyword">COLLATE</span> <span class="operator">=</span> utf8_general_ci</span><br><span class="line">  ROW_FORMAT <span class="operator">=</span> <span class="keyword">Dynamic</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Records of tbl_book</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `tbl_book`</span><br><span class="line"><span class="keyword">VALUES</span> (<span class="number">1</span>, <span class="string">'计算机理论'</span>, <span class="string">'Spring实战 第5版'</span>, <span class="string">'Spring入门经典教程，深入理解Spring原理技术内幕'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `tbl_book`</span><br><span class="line"><span class="keyword">VALUES</span> (<span class="number">2</span>, <span class="string">'计算机理论'</span>, <span class="string">'Spring 5核心原理与30个类手写实战'</span>, <span class="string">'十年沉淀之作，手写Spring精华思想'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `tbl_book`</span><br><span class="line"><span class="keyword">VALUES</span> (<span class="number">3</span>, <span class="string">'计算机理论'</span>, <span class="string">'Spring 5 设计模式'</span>, <span class="string">'深入Spring源码剖析Spring源码中蕴含的10大设计模式'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `tbl_book`</span><br><span class="line"><span class="keyword">VALUES</span> (<span class="number">4</span>, <span class="string">'计算机理论'</span>, <span class="string">'Spring MVC+MyBatis开发从入门到项目实战'</span>, <span class="string">'全方位解析面向Web应用的轻量级框架，带你成为Spring MVC开发高手'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `tbl_book`</span><br><span class="line"><span class="keyword">VALUES</span> (<span class="number">5</span>, <span class="string">'计算机理论'</span>, <span class="string">'轻量级Java Web企业应用实战'</span>, <span class="string">'源码级剖析Spring框架，适合已掌握Java基础的读者'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `tbl_book`</span><br><span class="line"><span class="keyword">VALUES</span> (<span class="number">6</span>, <span class="string">'计算机理论'</span>, <span class="string">'Java核心技术 卷I 基础知识（原书第11版）'</span>, <span class="string">'Core Java 第11版，Jolt大奖获奖作品，针对Java SE9、10、11全面更新'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `tbl_book`</span><br><span class="line"><span class="keyword">VALUES</span> (<span class="number">7</span>, <span class="string">'计算机理论'</span>, <span class="string">'深入理解Java虚拟机'</span>, <span class="string">'5个维度全面剖析JVM，大厂面试知识点全覆盖'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `tbl_book`</span><br><span class="line"><span class="keyword">VALUES</span> (<span class="number">8</span>, <span class="string">'计算机理论'</span>, <span class="string">'Java编程思想（第4版）'</span>, <span class="string">'Java学习必读经典,殿堂级著作！赢得了全球程序员的广泛赞誉'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `tbl_book`</span><br><span class="line"><span class="keyword">VALUES</span> (<span class="number">9</span>, <span class="string">'计算机理论'</span>, <span class="string">'零基础学Java（全彩版）'</span>, <span class="string">'零基础自学编程的入门图书，由浅入深，详解Java语言的编程思想和核心技术'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `tbl_book`</span><br><span class="line"><span class="keyword">VALUES</span> (<span class="number">10</span>, <span class="string">'市场营销'</span>, <span class="string">'直播就该这么做：主播高效沟通实战指南'</span>, <span class="string">'李子柒、李佳琦、薇娅成长为网红的秘密都在书中'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `tbl_book`</span><br><span class="line"><span class="keyword">VALUES</span> (<span class="number">11</span>, <span class="string">'市场营销'</span>, <span class="string">'直播销讲实战一本通'</span>, <span class="string">'和秋叶一起学系列网络营销书籍'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `tbl_book`</span><br><span class="line"><span class="keyword">VALUES</span> (<span class="number">12</span>, <span class="string">'市场营销'</span>, <span class="string">'直播带货：淘宝、天猫直播从新手到高手'</span>, <span class="string">'一本教你如何玩转直播的书，10堂课轻松实现带货月入3W+'</span>);</span><br></pre></td></tr></tbody></table></figure><h2 id="实体层"><a href="#实体层" class="headerlink" title="实体层"></a>实体层</h2><p>实体类开发</p><p>根据上述表结构，制作对应的实体类<br>domain层</p><p><strong>​Lombok</strong>，一个Java类库，提供了一组注解，简化POJO实体类开发，SpringBoot目前默认集成了lombok技术，并提供了对应的版本控制，所以只需要提供对应的坐标即可，</p><h3 id="引入lombok"><a href="#引入lombok" class="headerlink" title="引入lombok"></a>引入lombok</h3><p>在pom.xml中添加lombok的坐标。</p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--lombok--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h3 id="编写实体类代码"><a href="#编写实体类代码" class="headerlink" title="编写实体类代码"></a>编写实体类代码</h3><p>​ 使用lombok可以通过一个注解@Data完成一个实体类对应的getter，setter，toString，equals，hashCode等操作的快速添加</p><p>/domain/Book.java</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Book</span> </span>{</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String type;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String description;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="数据层开发"><a href="#数据层开发" class="headerlink" title="数据层开发"></a>数据层开发</h2><h3 id="1-基础CRUD"><a href="#1-基础CRUD" class="headerlink" title="1.基础CRUD"></a>1.基础CRUD</h3><h4 id="导入坐标"><a href="#导入坐标" class="headerlink" title="导入坐标"></a>导入坐标</h4><p>​ 数据层开发本次使用MyBatisPlus技术，数据源使用前面学习的Druid，学都学了都用上</p><p><strong>步骤①</strong>：导入MyBatisPlus与Druid对应的starter，当然mysql的驱动不能少</p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.4.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h4 id="配置数据源"><a href="#配置数据源" class="headerlink" title="配置数据源"></a>配置数据源</h4><p>application.yml中添加数据源配置</p><p><strong>步骤②</strong>：配置数据库连接相关的数据源配置</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">druid:</span></span><br><span class="line">      <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">      <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/ssm_db?serverTimezone=UTC</span></span><br><span class="line">      <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">      <span class="attr">password:</span> <span class="string">root</span></span><br></pre></td></tr></tbody></table></figure><h4 id="开发数据层接口"><a href="#开发数据层接口" class="headerlink" title="开发数据层接口"></a>开发数据层接口</h4><p>mybatis-plus快速开发</p><p>/dao/BookDao<br>开发Dao接口（继承BaseMapper）</p><p><strong>步骤③</strong>：使用MP的标准通用接口BaseMapper加速开发，别忘了@Mapper和泛型的指定</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@Mapper</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">BookDao</span> <span class="keyword">extends</span> <span class="title">BaseMapper</span>&lt;<span class="title">Book</span>&gt; </span>{</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h4 id="制作测试类测试结果"><a href="#制作测试类测试结果" class="headerlink" title="制作测试类测试结果"></a>制作测试类测试结果</h4><p><strong>步骤④</strong>：制作测试类测试结果，这个测试类制作是个好习惯，不过在企业开发中往往都为加速开发跳过此步，且行且珍惜吧</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.conditions.query.LambdaQueryWrapper;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.metadata.IPage;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.plugins.pagination.Page;</span><br><span class="line"><span class="keyword">import</span> com.itheima.domain.Book;</span><br><span class="line"><span class="keyword">import</span> org.junit.jupiter.api.Test;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.test.context.SpringBootTest;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BookDaoTestCase</span> </span>{</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> BookDao bookDao;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">testGetById</span><span class="params">()</span> </span>{</span><br><span class="line">        System.out.println(bookDao.selectById(<span class="number">1</span>));</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">testSave</span><span class="params">()</span> </span>{</span><br><span class="line">        Book book = <span class="keyword">new</span> Book();</span><br><span class="line">        book.setType(<span class="string">"测试数据123"</span>);</span><br><span class="line">        book.setName(<span class="string">"测试数据123"</span>);</span><br><span class="line">        book.setDescription(<span class="string">"测试数据123"</span>);</span><br><span class="line">        bookDao.insert(book);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">testUpdate</span><span class="params">()</span> </span>{</span><br><span class="line">        Book book = <span class="keyword">new</span> Book();</span><br><span class="line">        book.setId(<span class="number">17</span>);</span><br><span class="line">        book.setType(<span class="string">"测试数据abcdefg"</span>);</span><br><span class="line">        book.setName(<span class="string">"测试数据123"</span>);</span><br><span class="line">        book.setDescription(<span class="string">"测试数据123"</span>);</span><br><span class="line">        bookDao.updateById(book);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">testDelete</span><span class="params">()</span> </span>{</span><br><span class="line">        bookDao.deleteById(<span class="number">16</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">testGetAll</span><span class="params">()</span> </span>{</span><br><span class="line">        bookDao.selectList(<span class="keyword">null</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p><font color="#f0f"><b>温馨提示</b></font></p><p>​ MP技术默认的主键生成策略为雪花算法，生成的主键ID长度较大，和目前的数据库设定规则不相符，需要配置一下使MP使用数据库的主键生成策略，方式嘛还是老一套，做配置。在application.yml中添加对应配置即可，具体如下</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">druid:</span></span><br><span class="line">      <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">      <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/ssm_db?serverTimezone=UTC</span></span><br><span class="line">      <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">      <span class="attr">password:</span> <span class="string">root</span></span><br><span class="line"></span><br><span class="line"><span class="attr">mybatis-plus:</span></span><br><span class="line">  <span class="attr">global-config:</span></span><br><span class="line">    <span class="attr">db-config:</span></span><br><span class="line">      <span class="attr">table-prefix:</span> <span class="string">tbl_</span>        <span class="comment">#设置表名通用前缀</span></span><br><span class="line">      <span class="attr">id-type:</span> <span class="string">auto</span>                <span class="comment">#设置主键id字段的生成策略为参照数据库设定的策略，当前数据库设置id生成策略为自增</span></span><br></pre></td></tr></tbody></table></figure><h4 id="查看MP运行日志"><a href="#查看MP运行日志" class="headerlink" title="查看MP运行日志"></a>查看MP运行日志</h4><ul><li>使用配置方式开启日志，设置日志输出方式为标准输出即可查阅SQL执行日志</li></ul><p>-</p><p>​在进行数据层测试的时候，因为基础的CRUD操作均由MP给我们提供了，所以就出现了一个局面，开发者不需要书写SQL语句了，这样程序运行的时候总有一种感觉，一切的一切都是黑盒的，作为开发者我们啥也不知道就完了。如果程序正常运行还好，如果报错了，这个时候就很崩溃，你甚至都不知道从何下手，因为传递参数、封装SQL语句这些操作完全不是你干预开发出来的，所以查看执行期运行的SQL语句就成为当务之急。</p><ul><li>SpringBoot整合MP的时候充分考虑到了这点，通过配置的形式就可以查阅执行期SQL语句，配置如下</li></ul><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">mybatis-plus:</span></span><br><span class="line">  <span class="attr">global-config:</span></span><br><span class="line">    <span class="attr">db-config:</span></span><br><span class="line">      <span class="attr">table-prefix:</span> <span class="string">tbl_</span></span><br><span class="line">      <span class="attr">id-type:</span> <span class="string">auto</span></span><br><span class="line">  <span class="attr">configuration:</span></span><br><span class="line">    <span class="attr">log-impl:</span> <span class="string">org.apache.ibatis.logging.stdout.StdOutImpl</span></span><br></pre></td></tr></tbody></table></figure><h3 id="3-分页功能制作"><a href="#3-分页功能制作" class="headerlink" title="3.分页功能制作"></a>3.分页功能制作</h3><h4 id="使用IPage封装分页数据"><a href="#使用IPage封装分页数据" class="headerlink" title="使用IPage封装分页数据"></a>使用IPage封装分页数据</h4><p>前面仅仅是使用了MP提供的基础CRUD功能，实际上MP给我们提供了几乎所有的基础操作，这一节说一下如果实现数据库端的分页操作</p><p>MP提供的分页操作API如下</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">testGetPage</span><span class="params">()</span></span>{</span><br><span class="line">        IPage page=<span class="keyword">new</span> Page(<span class="number">2</span>,<span class="number">5</span>);   <span class="comment">//传入当前显示第几页 ,每页显示几条数据</span></span><br><span class="line"></span><br><span class="line">        bookDao.selectPage(page,<span class="keyword">null</span>); <span class="comment">//selectPage方法需要传入一个封装分页数据的对象，这个对象包含了分页的信息，如当前页码、每页显示的条数等，还有过滤条件</span></span><br><span class="line">        System.out.println(page.getCurrent());</span><br><span class="line">        System.out.println(page.getSize());</span><br><span class="line">        System.out.println(page.getTotal());</span><br><span class="line">        System.out.println(page.getPages());</span><br><span class="line">        System.out.println(page.getRecords());</span><br><span class="line">        }</span><br></pre></td></tr></tbody></table></figure><p>将该对象传入到查询方法selectPage后，可以得到查询结果，但是我们会发现当前操作查询结果返回值仍然是一个IPage对象，这又是怎么回事？</p><p>原来这个IPage对象中封装了若干个数据，而查询的结果作为IPage对象封装的一个数据存在的，可以理解为查询结果得到后，又塞到了这个IPage对象中，其实还是为了高度的封装，一个IPage描述了分页所有的信息。下面5个操作就是IPage对象中封装的所有信息了</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">testGetPage</span><span class="params">()</span></span>{</span><br><span class="line">        IPage page=<span class="keyword">new</span> Page(<span class="number">2</span>,<span class="number">5</span>);</span><br><span class="line">        bookDao.selectPage(page,<span class="keyword">null</span>);</span><br><span class="line">        System.out.println(page.getCurrent());        <span class="comment">//当前页码值</span></span><br><span class="line">        System.out.println(page.getSize());            <span class="comment">//每页显示数</span></span><br><span class="line">        System.out.println(page.getTotal());        <span class="comment">//数据总量</span></span><br><span class="line">        System.out.println(page.getPages());        <span class="comment">//总页数</span></span><br><span class="line">        System.out.println(page.getRecords());        <span class="comment">//详细数据</span></span><br><span class="line">        }</span><br></pre></td></tr></tbody></table></figure><h4 id="分页操作依赖MyBatisPlus分页拦截器实现功能"><a href="#分页操作依赖MyBatisPlus分页拦截器实现功能" class="headerlink" title="分页操作依赖MyBatisPlus分页拦截器实现功能"></a>分页操作依赖MyBatisPlus分页拦截器实现功能</h4><p>到这里就知道这些数据如何获取了，但是当你去执行这个操作时，你会发现并不像我们分析的这样，实际上这个分页当前是无效的。为什么这样呢？这个要源于MP的内部机制。</p><p>对于MySQL的分页操作使用limit关键字进行，而并不是所有的数据库都使用limit关键字实现的，这个时候MP为了制作的兼容性强，将分页操作设置为基础查询操作的升级版，你可以理解为IPhone6与IPhone6S-PLUS的关系。</p><p>基础操作中有查询全部的功能，而在这个基础上只需要升级一下（PLUS）就可以得到分页操作。所以MP将分页操作做成了一个开关，你用分页功能就分页操作是没有的。这个开关是通过MP的拦截器的形式存在的，其中的原理这里不分析了，有兴趣的小伙伴可以学习MyBatisPlus这门课程进行详细解读。具体设置方式如下<br>把开关开启，不用就不需要开启这个开关。而我们现在没有开启这个开关，所以<br><strong>定义MP拦截器并将其设置为Spring管控的bean</strong></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MPConfig</span> </span>{</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> MybatisPlusInterceptor <span class="title">mybatisPlusInterceptor</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="comment">//创建MP的拦截器栈，这个时候拦截器栈中没有具体的拦截器</span></span><br><span class="line">        MybatisPlusInterceptor interceptor = <span class="keyword">new</span> MybatisPlusInterceptor(); <span class="comment">//1.定义Mp拦截器</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//初始化了分页拦截器，并添加到拦截器栈中。如果后期开发其他功能，需要添加全新的拦截器，按照第二行的格式继续add进去新的拦截器就可以了。</span></span><br><span class="line">        interceptor.addInnerInterceptor(<span class="keyword">new</span> PaginationInnerInterceptor()); <span class="comment">//2.添加具体的拦截器</span></span><br><span class="line">        <span class="keyword">return</span> interceptor;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="4-条件查询功能制作"><a href="#4-条件查询功能制作" class="headerlink" title="4.条件查询功能制作"></a>4.条件查询功能制作</h3><p>除了分页功能，MP还提供有强大的条件查询功能。以往我们写条件查询要自己动态拼写复杂的SQL语句，现在简单了，MP将这些操作都制作成API接口，调用一个又一个的方法就可以实现各种套件的拼装。这里给大家普及一下基本格式，详细的操作还是到MP的课程中查阅吧</p><p>下面的操作就是执行一个模糊匹配对应的操作，由like条件书写变为了like方法的调用</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">testGetBy</span><span class="params">()</span></span>{</span><br><span class="line">        QueryWrapper&lt;Book&gt; qw=<span class="keyword">new</span> QueryWrapper&lt;&gt;();</span><br><span class="line">        qw.like(<span class="string">"name"</span>,<span class="string">"Spring"</span>);</span><br><span class="line">        bookDao.selectList(qw);</span><br><span class="line">        }</span><br></pre></td></tr></tbody></table></figure><p>其中第一句QueryWrapper对象是一个用于封装查询条件的对象，该对象可以动态使用API调用的方法添加条件，最终转化成对应的SQL语句。第二句就是一个条件了，需要什么条件，使用QueryWapper对象直接调用对应操作即可。比如做大于小于关系，就可以使用lt或gt方法，等于使用eq方法，等等，此处不做更多的解释了。</p><p>这组API使用还是比较简单的，但是关于属性字段名的书写存在着安全隐患，比如查询字段name，当前是以字符串的形态书写的，万一写错，编译器还没有办法发现，只能将问题抛到运行器通过异常堆栈告诉开发者，不太友好。</p><p>MP针对字段检查进行了功能升级，全面支持Lambda表达式，就有了下面这组API。由QueryWrapper对象升级为LambdaQueryWrapper对象，这下就变了上述问题的出现</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">testGetBy2</span><span class="params">()</span></span>{</span><br><span class="line">        String name=<span class="string">"1"</span>;</span><br><span class="line">        LambdaQueryWrapper&lt;Book&gt; lqw=<span class="keyword">new</span> LambdaQueryWrapper&lt;Book&gt;();</span><br><span class="line">        lqw.like(Book::getName,name);</span><br><span class="line">        bookDao.selectList(lqw);</span><br><span class="line">        }</span><br></pre></td></tr></tbody></table></figure><p>​ 为了便于开发者动态拼写SQL，防止将null数据作为条件使用，MP还提供了动态拼装SQL的快捷书写方式</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">testGetBy2</span><span class="params">()</span></span>{</span><br><span class="line">        String name=<span class="string">"1"</span>;</span><br><span class="line">        LambdaQueryWrapper&lt;Book&gt; lqw=<span class="keyword">new</span> LambdaQueryWrapper&lt;Book&gt;();</span><br><span class="line">        <span class="comment">//if(name != null) lqw.like(Book::getName,name);  //方式一：JAVA代码控制</span></span><br><span class="line">        lqw.like(name!=<span class="keyword">null</span>,Book::getName,name);                <span class="comment">//方式二：API接口提供控制开关</span></span><br><span class="line">        bookDao.selectList(lqw);</span><br><span class="line">        }</span><br></pre></td></tr></tbody></table></figure><p>​ 其实就是个格式，没有区别。关于MP的基础操作就说到这里吧，如果这一块知识不太熟悉的小伙伴还是去完整的学习一下MP的知识吧，这里只是蜻蜓点水的用了几个操作而已。</p><p><strong>总结</strong></p><ol><li><p>使用QueryWrapper对象封装查询条件</p></li><li><p>推荐使用LambdaQueryWrapper对象</p></li><li><p>所有查询操作封装成方法调用</p></li><li><p>查询条件支持动态条件拼装</p></li></ol><h2 id="业务层"><a href="#业务层" class="headerlink" title="业务层"></a>业务层</h2><p>其实标准业务层开发很多初学者认为就是调用数据层，怎么说呢？这个理解是没有大问题的，更精准的说法应该是组织业务逻辑功能，并根据业务需求，对数据持久层发起调用。</p><p>有什么差别呢？目标是为了组织出符合需求的业务逻辑功能，至于调不调用数据层还真不好说，有需求就调用，没有需求就不调用。</p><p>​ 一个常识性的知识普及一下，业务层的方法名定义一定要与业务有关，例如登录操作</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">login(String username,String password);</span><br></pre></td></tr></tbody></table></figure><p>​ 而数据层的方法名定义一定与业务无关，是一定，不是可能，也不是有可能，例如根据用户名密码查询</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">selectByUserNameAndPassword(String username,String password);</span><br></pre></td></tr></tbody></table></figure><p>​ 我们在开发的时候是可以根据完成的工作不同划分成不同职能的开发团队的。比如一个哥们制作数据层，他就可以不知道业务是什么样子，拿到的需求文档要求可能是这样的</p><figure class="highlight tex"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">接口：传入用户名与密码字段，查询出对应结果，结果是单条数据</span><br><span class="line">接口：传入ID字段，查询出对应结果，结果是单条数据</span><br><span class="line">接口：传入离职字段，查询出对应结果，结果是多条数据</span><br></pre></td></tr></tbody></table></figure><p>​ 但是进行业务功能开发的哥们，拿到的需求文档要求差别就很大</p><figure class="highlight tex"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">接口：传入用户名与密码字段，对用户名字段做长度校验，4-15位，对密码字段做长度校验，8到24位，对喵喵喵字段做特殊字符校验，不允许存在空格，查询结果为对象。如果为null，返回BusinessException，封装消息码INFO<span class="built_in">_</span>LOGON<span class="built_in">_</span>USERNAME<span class="built_in">_</span>PASSWORD<span class="built_in">_</span>ERROR</span><br></pre></td></tr></tbody></table></figure><p>​ 你比较一下，能是一回事吗？差别太大了，所以说业务层方法定义与数据层方法定义差异化很大，只不过有些入门级的开发者手懒或者没有使用过公司相关的ISO标准化文档而已。</p><h3 id="业务层接口"><a href="#业务层接口" class="headerlink" title="业务层接口"></a>业务层接口</h3><p>业务层接口定义如下：<br>/service/BookService.java</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">BookService</span> </span>{</span><br><span class="line">    <span class="function">Boolean <span class="title">save</span><span class="params">(Book book)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Boolean <span class="title">update</span><span class="params">(Book book)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Boolean <span class="title">delete</span><span class="params">(Integer id)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Book <span class="title">getById</span><span class="params">(Integer id)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">List&lt;Book&gt; <span class="title">getAll</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">IPage&lt;Book&gt; <span class="title">getPage</span><span class="params">(<span class="keyword">int</span> currentPage, <span class="keyword">int</span> pageSize)</span></span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="业务层实现类"><a href="#业务层实现类" class="headerlink" title="业务层实现类"></a>业务层实现类</h3><p>/service/Impl/BookServiceImpl.java<br>​<strong>业务层实现类</strong>如下，转调数据层即可</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BookServiceImpl</span> <span class="keyword">implements</span> <span class="title">BookService</span> </span>{</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> BookDao bookDao;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Boolean <span class="title">save</span><span class="params">(Book book)</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> bookDao.insert(book) &gt; <span class="number">0</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Boolean <span class="title">update</span><span class="params">(Book book)</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> bookDao.updateById(book) &gt; <span class="number">0</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Boolean <span class="title">delete</span><span class="params">(Integer id)</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> bookDao.deleteById(id) &gt; <span class="number">0</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Book <span class="title">getById</span><span class="params">(Integer id)</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> bookDao.selectById(id);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Book&gt; <span class="title">getAll</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> bookDao.selectList(<span class="keyword">null</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> IPage&lt;Book&gt; <span class="title">getPage</span><span class="params">(<span class="keyword">int</span> currentPage, <span class="keyword">int</span> pageSize)</span> </span>{</span><br><span class="line">        IPage page = <span class="keyword">new</span> Page(currentPage, pageSize);</span><br><span class="line">        bookDao.selectPage(page, <span class="keyword">null</span>);</span><br><span class="line">        <span class="keyword">return</span> page;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="测试类"><a href="#测试类" class="headerlink" title="测试类"></a>测试类</h3><p>​ 别忘了对业务层接口进行测试，测试类如下</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BookServiceTest</span> </span>{</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> IBookService bookService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">testGetById</span><span class="params">()</span> </span>{</span><br><span class="line">        System.out.println(bookService.getById(<span class="number">4</span>));</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">testSave</span><span class="params">()</span> </span>{</span><br><span class="line">        Book book = <span class="keyword">new</span> Book();</span><br><span class="line">        book.setType(<span class="string">"测试数据123"</span>);</span><br><span class="line">        book.setName(<span class="string">"测试数据123"</span>);</span><br><span class="line">        book.setDescription(<span class="string">"测试数据123"</span>);</span><br><span class="line">        bookService.save(book);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">testUpdate</span><span class="params">()</span> </span>{</span><br><span class="line">        Book book = <span class="keyword">new</span> Book();</span><br><span class="line">        book.setId(<span class="number">17</span>);</span><br><span class="line">        book.setType(<span class="string">"-----------------"</span>);</span><br><span class="line">        book.setName(<span class="string">"测试数据123"</span>);</span><br><span class="line">        book.setDescription(<span class="string">"测试数据123"</span>);</span><br><span class="line">        bookService.updateById(book);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">testDelete</span><span class="params">()</span> </span>{</span><br><span class="line">        bookService.removeById(<span class="number">18</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">testGetAll</span><span class="params">()</span> </span>{</span><br><span class="line">        bookService.list();</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">testGetPage</span><span class="params">()</span> </span>{</span><br><span class="line">        IPage&lt;Book&gt; page = <span class="keyword">new</span> Page&lt;Book&gt;(<span class="number">2</span>, <span class="number">5</span>);</span><br><span class="line">        bookService.page(page);</span><br><span class="line">        System.out.println(page.getCurrent());</span><br><span class="line">        System.out.println(page.getSize());</span><br><span class="line">        System.out.println(page.getTotal());</span><br><span class="line">        System.out.println(page.getPages());</span><br><span class="line">        System.out.println(page.getRecords());</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p><strong>总结</strong></p><ol><li>Service接口名称定义成业务名称，并与Dao接口名称进行区分</li><li>制作测试类测试Service功能是否有效</li></ol><h3 id="业务层快速开发"><a href="#业务层快速开发" class="headerlink" title="业务层快速开发"></a>业务层快速开发</h3><p>其实MP技术不仅提供了数据层快速开发方案，业务层MP也给了一个通用接口，个人观点不推荐使用，凑合能用吧，其实就是一个封装+继承的思想，代码给出，实际开发慎用</p><h4 id="业务层接口快速开发"><a href="#业务层接口快速开发" class="headerlink" title="业务层接口快速开发"></a>业务层接口快速开发</h4><p>/service/Impl/IBookService.java</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">IBookService</span> <span class="keyword">extends</span> <span class="title">IService</span>&lt;<span class="title">Book</span>&gt; </span>{</span><br><span class="line">    <span class="comment">//添加非通用操作API接口</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h4 id="业务层接口实现类"><a href="#业务层接口实现类" class="headerlink" title="业务层接口实现类"></a>业务层接口实现类</h4><p>/service/Impl/BookServiceImpl.java<br>业务层接口实现类快速开发，关注继承的类需要传入两个泛型，一个是数据层接口，另一个是实体类</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BookServiceImpl</span> <span class="keyword">extends</span> <span class="title">ServiceImpl</span>&lt;<span class="title">BookDao</span>, <span class="title">Book</span>&gt; <span class="keyword">implements</span> <span class="title">IBookService</span> </span>{</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> BookDao bookDao;</span><br><span class="line">    <span class="comment">//添加非通用操作API</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>如果感觉MP提供的功能不足以支撑你的使用需要，其实是一定不能支撑的，因为需求不可能是通用的，在原始接口基础上接着定义新的API接口就行了，此处不再说太多了，就是自定义自己的操作了，但是不要和已有的API接口名冲突即可。</p><p><strong>总结</strong></p><ol><li>使用通用接口（ISerivce<t>）快速开发Service</t></li><li>使用通用实现类（ServiceImpl&lt;M,T&gt;）快速开发ServiceImpl</li><li>可以在通用接口基础上做功能重载或功能追加</li><li>注意重载时不要覆盖原始操作，避免原始提供的功能丢失</li></ol><h2 id="6-表现层开发"><a href="#6-表现层开发" class="headerlink" title="6.表现层开发"></a>6.表现层开发</h2><p>表现层/控制器层的开发使用基于Restful的表现层接口开发，功能测试通过Postman工具进行</p><p>/controller/BookController.java<br>​ 表现层接口如下:</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping("/books")</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BookController2</span> </span>{</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> IBookService bookService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Book&gt; <span class="title">getAll</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> bookService.list();</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Boolean <span class="title">save</span><span class="params">(<span class="meta">@RequestBody</span> Book book)</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> bookService.save(book);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PutMapping</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Boolean <span class="title">update</span><span class="params">(<span class="meta">@RequestBody</span> Book book)</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> bookService.modify(book);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@DeleteMapping("{id}")</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Boolean <span class="title">delete</span><span class="params">(<span class="meta">@PathVariable</span> Integer id)</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> bookService.delete(id);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping("{id}")</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Book <span class="title">getById</span><span class="params">(<span class="meta">@PathVariable</span> Integer id)</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> bookService.getById(id);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping("{currentPage}/{pageSize}")</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> IPage&lt;Book&gt; <span class="title">getPage</span><span class="params">(<span class="meta">@PathVariable</span> <span class="keyword">int</span> currentPage, <span class="meta">@PathVariable</span> <span class="keyword">int</span> pageSize)</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> bookService.getPage(currentPage, pageSize, <span class="keyword">null</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>​ 在实用Postman测试时关注提交类型，对应上即可，不然就会报405的错误码了</p><p><strong>普通GET请求</strong></p><p><img src="img%5Cimage-20211129152237371.png" alt="image-20211129152237371"></p><p><strong>PUT请求传递json数据，后台实用@RequestBody接收数据</strong></p><p><img src="img%5Cimage-20211129152300177.png" alt="image-20211129152300177"></p><p><strong>GET请求传递路径变量，后台实用@PathVariable接收数据</strong></p><p><img src="C:\Users\itcast\AppData\Roaming\Typora\typora-user-images\image-20211129152320073.png" alt="image-20211129152320073"></p><p><strong>总结</strong></p><ol><li>基于Restful制作表现层接口<ul><li>新增：POST</li><li>删除：DELETE</li><li>修改：PUT</li><li>查询：GET</li></ul></li><li>接收参数<ul><li>实体数据：@RequestBody</li><li>路径变量：@PathVariable</li></ul></li></ol><h3 id="7-表现层消息一致性处理"><a href="#7-表现层消息一致性处理" class="headerlink" title="7.表现层消息一致性处理"></a>7.表现层消息一致性处理</h3><p>目前我们通过Postman测试后业务层接口功能时通的，但是这样的结果给到前端开发者会出现一个小问题。不同的操作结果所展示的数据格式差异化严重</p><p><strong>增删改操作结果</strong></p><figure class="highlight tex"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">true</span><br></pre></td></tr></tbody></table></figure><p>​    <strong>查询单个数据操作结果</strong></p><figure class="highlight json"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">{</span><br><span class="line">  <span class="attr">"id"</span>: <span class="number">1</span>,</span><br><span class="line">  <span class="attr">"type"</span>: <span class="string">"计算机理论"</span>,</span><br><span class="line">  <span class="attr">"name"</span>: <span class="string">"Spring实战&nbsp;第5版"</span>,</span><br><span class="line">  <span class="attr">"description"</span>: <span class="string">"Spring入门经典教程"</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>​    <strong>查询全部数据操作结果</strong></p><figure class="highlight json"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">  {</span><br><span class="line">    <span class="attr">"id"</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="attr">"type"</span>: <span class="string">"计算机理论"</span>,</span><br><span class="line">    <span class="attr">"name"</span>: <span class="string">"Spring实战&nbsp;第5版"</span>,</span><br><span class="line">    <span class="attr">"description"</span>: <span class="string">"Spring入门经典教程"</span></span><br><span class="line">  },</span><br><span class="line">  {</span><br><span class="line">    <span class="attr">"id"</span>: <span class="number">2</span>,</span><br><span class="line">    <span class="attr">"type"</span>: <span class="string">"计算机理论"</span>,</span><br><span class="line">    <span class="attr">"name"</span>: <span class="string">"Spring&nbsp;5核心原理与30个类手写实战"</span>,</span><br><span class="line">    <span class="attr">"description"</span>: <span class="string">"十年沉淀之作"</span></span><br><span class="line">  }</span><br><span class="line">]</span><br></pre></td></tr></tbody></table></figure><p>每种不同操作返回的数据格式都不一样，而且还不知道以后还会有什么格式，这样的结果让前端人员看了是很容易让人崩溃的，必须将所有操作的操作结果数据格式统一起来，需要设计表现层返回结果的模型类，用于后端与前端进行数据格式统一，也称为**<br>前后端数据协议**</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">R</span> </span>{</span><br><span class="line">    <span class="keyword">private</span> Boolean flag;</span><br><span class="line">    <span class="keyword">private</span> Object data;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>​ 其中flag用于标识操作是否成功，data用于封装操作数据，现在的数据格式就变了</p><figure class="highlight json"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">{</span><br><span class="line">  <span class="attr">"flag"</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">"data"</span>: {</span><br><span class="line">    <span class="attr">"id"</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="attr">"type"</span>: <span class="string">"计算机理论"</span>,</span><br><span class="line">    <span class="attr">"name"</span>: <span class="string">"Spring实战&nbsp;第5版"</span>,</span><br><span class="line">    <span class="attr">"description"</span>: <span class="string">"Spring入门经典教程"</span></span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>​ 表现层开发格式也需要转换一下</p><img src="img\image-20211129153301262.png" alt="image-20211129153301262" style="zoom:80%;"><img src="img\image-20211129153319052.png" alt="image-20211129153319052" style="zoom:80%;"><img src="img\image-20211129153332499.png" alt="image-20211129153332499" style="zoom:80%;"><p>​ 结果这么一折腾，全格式统一，现在后端发送给前端的数据格式就统一了，免去了不少前端解析数据的麻烦。</p><p><strong>总结</strong></p><ol><li><p>设计统一的返回值结果类型便于前端开发读取数据</p></li><li><p>返回值结果类型可以根据需求自行设定，没有固定格式</p></li><li><p>返回值结果模型类用于后端与前端进行数据格式统一，也称为前后端数据协议</p></li></ol><h2 id="8-前后端联通性测试"><a href="#8-前后端联通性测试" class="headerlink" title="8.前后端联通性测试"></a>8.前后端联通性测试</h2><p>​ 后端的表现层接口开发完毕，就可以进行前端的开发了。</p><p>​ 将前端人员开发的页面保存到lresources目录下的static目录中，建议执行maven的clean生命周期，避免缓存的问题出现。</p><p>​  <img src="img%5Cimage-20211129153831990.png" alt="image-20211129153831990"></p><p>​ 在进行具体的功能开发之前，先做联通性的测试，通过页面发送异步提交（axios），这一步调试通过后再进行进一步的功能开发</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//列表</span></span><br><span class="line"><span class="function"><span class="title">getAll</span>(<span class="params"></span>)</span></span><br><span class="line">{</span><br><span class="line">    axios.get(<span class="string">"/books"</span>).then(<span class="function">(<span class="params">res</span>) =&gt;</span> {</span><br><span class="line">        <span class="built_in">console</span>.log(res.data);</span><br><span class="line">    });</span><br><span class="line">}</span><br><span class="line">,</span><br></pre></td></tr></tbody></table></figure><p>​ 只要后台代码能够正常工作，前端能够在日志中接收到数据，就证明前后端是通的，也就可以进行下一步的功能开发了</p><p><strong>总结</strong></p><ol><li>单体项目中页面放置在resources/static目录下</li><li>created钩子函数用于初始化页面时发起调用</li><li>页面使用axios发送异步请求获取数据后确认前后端是否联通</li></ol><h2 id="9-页面基础功能开发"><a href="#9-页面基础功能开发" class="headerlink" title="9.页面基础功能开发"></a>9.页面基础功能开发</h2><h3 id="列表功能（非分页版）"><a href="#列表功能（非分页版）" class="headerlink" title="列表功能（非分页版）"></a>列表功能（非分页版）</h3><p>列表功能主要操作就是加载完数据，将数据展示到页面上，此处要利用VUE的数据模型绑定，发送请求得到数据，然后页面上读取指定数据即可</p><p><strong>页面数据模型定义</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">data:{</span><br><span class="line"> dataList: [],//当前页要展示的列表数据</span><br><span class="line"> ...</span><br><span class="line">},</span><br></pre></td></tr></tbody></table></figure><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//列表</span></span><br><span class="line"><span class="function"><span class="title">getAll</span>(<span class="params"></span>)</span></span><br><span class="line">{</span><br><span class="line">    <span class="comment">// 异步请求获取数据，这样在页面加载时就可以获取到数据，并且由VUE将数据展示到页面上了</span></span><br><span class="line">    axios.get(<span class="string">"/books"</span>).then(<span class="function">(<span class="params">res</span>) =&gt;</span> {</span><br><span class="line">        <span class="built_in">this</span>.dataList = res.data.data; <span class="comment">//将查询数据返回到页面，利用前端数据绑定进行数据展示</span></span><br><span class="line">    });</span><br><span class="line">}</span><br><span class="line">,</span><br></pre></td></tr></tbody></table></figure><h3 id="添加功能"><a href="#添加功能" class="headerlink" title="添加功能"></a>添加功能</h3><p>添加功能用于收集数据的表单是通过一个弹窗展示的，因此在添加操作前首先要进行弹窗的展示，添加后隐藏弹窗即可。因为这个弹窗一直存在，因此当页面加载时首先设置这个弹窗为不可显示状态，需要展示，切换状态即可</p><h4 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h4><p><strong>默认状态</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">data:{</span><br><span class="line"> dialogFormVisible: false,//添加表单是否可见</span><br><span class="line"> ...</span><br><span class="line">},</span><br></pre></td></tr></tbody></table></figure><p><strong>切换为显示状态</strong></p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//弹出添加窗口</span></span><br><span class="line"><span class="function"><span class="title">handleCreate</span>(<span class="params"></span>)</span></span><br><span class="line">{</span><br><span class="line">    <span class="built_in">this</span>.dialogFormVisible = <span class="literal">true</span>;</span><br><span class="line">}</span><br><span class="line">,</span><br></pre></td></tr></tbody></table></figure><p>由于每次添加数据都是使用同一个弹窗录入数据，所以每次操作的痕迹将在下一次操作时展示出来，需要在每次操作之前清理掉上次操作的痕迹</p><p><strong>定义清理数据操作</strong></p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//重置表单</span></span><br><span class="line"><span class="function"><span class="title">resetForm</span>(<span class="params"></span>)</span></span><br><span class="line">{</span><br><span class="line">    <span class="built_in">this</span>.formData = {};</span><br><span class="line">}</span><br><span class="line">,</span><br></pre></td></tr></tbody></table></figure><p>​        <strong>切换弹窗状态时清理数据</strong></p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//弹出添加窗口</span></span><br><span class="line"><span class="function"><span class="title">handleCreate</span>(<span class="params"></span>)</span></span><br><span class="line">{</span><br><span class="line">    <span class="built_in">this</span>.dialogFormVisible = <span class="literal">true</span>;</span><br><span class="line">    <span class="built_in">this</span>.resetForm();</span><br><span class="line">}</span><br><span class="line">,</span><br></pre></td></tr></tbody></table></figure><p>​ 至此准备工作完成，下面就要调用后台完成添加操作了</p><h4 id="添加操作"><a href="#添加操作" class="headerlink" title="添加操作"></a><strong>添加操作</strong></h4><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//添加</span></span><br><span class="line"><span class="function"><span class="title">handleAdd</span>(<span class="params"></span>)</span></span><br><span class="line">{</span><br><span class="line">    <span class="comment">//发送异步请求</span></span><br><span class="line">    axios.post(<span class="string">"/books"</span>, <span class="built_in">this</span>.formData).then(<span class="function">(<span class="params">res</span>) =&gt;</span> {</span><br><span class="line">        <span class="comment">//如果操作成功，关闭弹层，显示数据</span></span><br><span class="line">        <span class="keyword">if</span> (res.data.flag) {</span><br><span class="line">            <span class="built_in">this</span>.dialogFormVisible = <span class="literal">false</span>;</span><br><span class="line">            <span class="built_in">this</span>.$message.success(<span class="string">"添加成功"</span>);</span><br><span class="line">        } <span class="keyword">else</span> {</span><br><span class="line">            <span class="built_in">this</span>.$message.error(<span class="string">"添加失败"</span>);</span><br><span class="line">        }</span><br><span class="line">    }).finally(<span class="function">() =&gt;</span> {</span><br><span class="line">        <span class="built_in">this</span>.getAll();</span><br><span class="line">    });</span><br><span class="line">}</span><br><span class="line">,</span><br></pre></td></tr></tbody></table></figure><ol><li>将要保存的数据传递到后台，通过post请求的第二个参数传递json数据到后台</li><li>根据返回的操作结果决定下一步操作<ul><li>如何是true就关闭添加窗口，显示添加成功的消息</li><li>如果是false保留添加窗口，显示添加失败的消息</li></ul></li><li>无论添加是否成功，页面均进行刷新，动态加载数据（对getAll操作发起调用）</li></ol><h4 id="取消添加操作"><a href="#取消添加操作" class="headerlink" title="取消添加操作"></a><strong>取消添加操作</strong></h4><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//取消</span></span><br><span class="line"><span class="function"><span class="title">cancel</span>(<span class="params"></span>)</span></span><br><span class="line">{</span><br><span class="line">    <span class="built_in">this</span>.dialogFormVisible = <span class="literal">false</span>;</span><br><span class="line">    <span class="built_in">this</span>.$message.info(<span class="string">"操作取消"</span>);</span><br><span class="line">}</span><br><span class="line">,</span><br></pre></td></tr></tbody></table></figure><p><strong>总结</strong></p><ol><li>请求方式使用POST调用后台对应操作</li><li>添加操作结束后动态刷新页面加载数据</li><li>根据操作结果不同，显示对应的提示信息</li><li>弹出添加Div时清除表单数据</li></ol><h3 id="删除功能"><a href="#删除功能" class="headerlink" title="删除功能"></a>删除功能</h3><p>模仿添加操作制作删除功能，差别之处在于删除操作仅传递一个待删除的数据id到后台即可</p><p><strong>删除操作</strong></p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 删除</span></span><br><span class="line"><span class="function"><span class="title">handleDelete</span>(<span class="params">row</span>)</span></span><br><span class="line">{</span><br><span class="line">    axios.delete(<span class="string">"/books/"</span> + row.id).then(<span class="function">(<span class="params">res</span>) =&gt;</span> {</span><br><span class="line">        <span class="keyword">if</span> (res.data.flag) {</span><br><span class="line">            <span class="built_in">this</span>.$message.success(<span class="string">"删除成功"</span>);</span><br><span class="line">        } <span class="keyword">else</span> {</span><br><span class="line">            <span class="built_in">this</span>.$message.error(<span class="string">"删除失败"</span>);</span><br><span class="line">        }</span><br><span class="line">    }).finally(<span class="function">() =&gt;</span> {</span><br><span class="line">        <span class="built_in">this</span>.getAll();</span><br><span class="line">    });</span><br><span class="line">}</span><br><span class="line">,</span><br></pre></td></tr></tbody></table></figure><p>​        <strong>删除操作提示信息</strong></p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 删除</span></span><br><span class="line"><span class="function"><span class="title">handleDelete</span>(<span class="params">row</span>)</span></span><br><span class="line">{</span><br><span class="line">    <span class="comment">//1.弹出提示框</span></span><br><span class="line">    <span class="built_in">this</span>.$confirm(<span class="string">"此操作永久删除当前数据，是否继续？"</span>, <span class="string">"提示"</span>, {</span><br><span class="line">        <span class="attr">type</span>: <span class="string">'info'</span></span><br><span class="line">    }).then(<span class="function">() =&gt;</span> {</span><br><span class="line">        <span class="comment">//2.做删除业务</span></span><br><span class="line">        axios.delete(<span class="string">"/books/"</span> + row.id).then(<span class="function">(<span class="params">res</span>) =&gt;</span> {</span><br><span class="line">            <span class="keyword">if</span> (res.data.flag) {</span><br><span class="line">                <span class="built_in">this</span>.$message.success(<span class="string">"删除成功"</span>);</span><br><span class="line">            } <span class="keyword">else</span> {</span><br><span class="line">                <span class="built_in">this</span>.$message.error(<span class="string">"删除失败"</span>);</span><br><span class="line">            }</span><br><span class="line">        }).finally(<span class="function">() =&gt;</span> {</span><br><span class="line">            <span class="built_in">this</span>.getAll();</span><br><span class="line">        });</span><br><span class="line">    }).catch(<span class="function">() =&gt;</span> {</span><br><span class="line">        <span class="comment">//3.取消删除</span></span><br><span class="line">        <span class="built_in">this</span>.$message.info(<span class="string">"取消删除操作"</span>);</span><br><span class="line">    });</span><br><span class="line">}，    </span><br></pre></td></tr></tbody></table></figure><p><strong>总结</strong></p><ol><li>请求方式使用Delete调用后台对应操作</li><li>删除操作需要传递当前行数据对应的id值到后台</li><li>删除操作结束后动态刷新页面加载数据</li><li>根据操作结果不同，显示对应的提示信息</li><li>删除操作前弹出提示框避免误操作</li></ol><h3 id="F-4-修改功能"><a href="#F-4-修改功能" class="headerlink" title="F-4.修改功能"></a>F-4.修改功能</h3><p>​ 修改功能可以说是列表功能、删除功能与添加功能的合体。几个相似点如下：</p><ol><li><p>页面也需要有一个弹窗用来加载修改的数据，这一点与添加相同，都是要弹窗</p></li><li><p>弹出窗口中要加载待修改的数据，而数据需要通过查询得到，这一点与查询全部相同，都是要查数据</p></li><li><p>查询操作需要将要修改的数据id发送到后台，这一点与删除相同，都是传递id到后台</p></li><li><p>查询得到数据后需要展示到弹窗中，这一点与查询全部相同，都是要通过数据模型绑定展示数据</p></li><li><p>修改数据时需要将被修改的数据传递到后台，这一点与添加相同，都是要传递数据</p><p>所以整体上来看，修改功能就是前面几个功能的大合体</p><p><strong>查询并展示数据</strong></p></li></ol><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//弹出编辑窗口</span></span><br><span class="line"><span class="function"><span class="title">handleUpdate</span>(<span class="params">row</span>)</span></span><br><span class="line">{</span><br><span class="line">    axios.get(<span class="string">"/books/"</span> + row.id).then(<span class="function">(<span class="params">res</span>) =&gt;</span> {</span><br><span class="line">        <span class="keyword">if</span> (res.data.flag) {</span><br><span class="line">            <span class="comment">//展示弹层，加载数据</span></span><br><span class="line">            <span class="built_in">this</span>.formData = res.data.data;</span><br><span class="line">            <span class="built_in">this</span>.dialogFormVisible4Edit = <span class="literal">true</span>;</span><br><span class="line">        } <span class="keyword">else</span> {</span><br><span class="line">            <span class="built_in">this</span>.$message.error(<span class="string">"数据同步失败，自动刷新"</span>);</span><br><span class="line">        }</span><br><span class="line">    });</span><br><span class="line">}</span><br><span class="line">,</span><br></pre></td></tr></tbody></table></figure><p>​        <strong>修改操作</strong></p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//修改</span></span><br><span class="line"><span class="function"><span class="title">handleEdit</span>(<span class="params"></span>)</span></span><br><span class="line">{</span><br><span class="line">    axios.put(<span class="string">"/books"</span>, <span class="built_in">this</span>.formData).then(<span class="function">(<span class="params">res</span>) =&gt;</span> {</span><br><span class="line">        <span class="comment">//如果操作成功，关闭弹层并刷新页面</span></span><br><span class="line">        <span class="keyword">if</span> (res.data.flag) {</span><br><span class="line">            <span class="built_in">this</span>.dialogFormVisible4Edit = <span class="literal">false</span>;</span><br><span class="line">            <span class="built_in">this</span>.$message.success(<span class="string">"修改成功"</span>);</span><br><span class="line">        } <span class="keyword">else</span> {</span><br><span class="line">            <span class="built_in">this</span>.$message.error(<span class="string">"修改失败，请重试"</span>);</span><br><span class="line">        }</span><br><span class="line">    }).finally(<span class="function">() =&gt;</span> {</span><br><span class="line">        <span class="built_in">this</span>.getAll();</span><br><span class="line">    });</span><br><span class="line">}</span><br><span class="line">,</span><br></pre></td></tr></tbody></table></figure><p><strong>总结</strong></p><ol><li>加载要修改数据通过传递当前行数据对应的id值到后台查询数据（同删除与查询全部）</li><li>利用前端双向数据绑定将查询到的数据进行回显（同查询全部）</li><li>请求方式使用PUT调用后台对应操作（同新增传递数据）</li><li>修改操作结束后动态刷新页面加载数据（同新增）</li><li>根据操作结果不同，显示对应的提示信息（同新增）</li></ol><p>​</p><h2 id="10-业务消息一致性处理"><a href="#10-业务消息一致性处理" class="headerlink" title="10.业务消息一致性处理"></a>10.业务消息一致性处理</h2><h3 id="为什么要一致性处理"><a href="#为什么要一致性处理" class="headerlink" title="为什么要一致性处理"></a>为什么要一致性处理</h3><p>目前的功能制作基本上达成了正常使用的情况，什么叫正常使用呢？也就是这个程序不出BUG，如果我们搞一个BUG出来，你会发现程序马上崩溃掉。比如后台手工抛出一个异常，看看前端接收到的数据什么样子</p><figure class="highlight json"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">{</span><br><span class="line">  <span class="attr">"timestamp"</span>: <span class="string">"2021-09-15T03:27:31.038+00:00"</span>,</span><br><span class="line">  <span class="attr">"status"</span>: <span class="number">500</span>,</span><br><span class="line">  <span class="attr">"error"</span>: <span class="string">"Internal&nbsp;Server&nbsp;Error"</span>,</span><br><span class="line">  <span class="attr">"path"</span>: <span class="string">"/books"</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>​ 面对这种情况，前端的同学又不会了，这又是什么格式？怎么和之前的格式不一样？</p><figure class="highlight json"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">{</span><br><span class="line">  <span class="attr">"flag"</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">"data"</span>: {</span><br><span class="line">    <span class="attr">"id"</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="attr">"type"</span>: <span class="string">"计算机理论"</span>,</span><br><span class="line">    <span class="attr">"name"</span>: <span class="string">"Spring实战&nbsp;第5版"</span>,</span><br><span class="line">    <span class="attr">"description"</span>: <span class="string">"Spring入门经典教程"</span></span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="处理数据格式"><a href="#处理数据格式" class="headerlink" title="处理数据格式"></a>处理数据格式</h3><p>看来不仅要对正确的操作数据格式做处理，还要对错误的操作数据格式做同样的格式处理</p><p>首先在当前的数据结果中添加消息字段，用来兼容后台出现的操作消息<br>/controller/util/R.java<br>为了防止链式调用</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">R</span> </span>{</span><br><span class="line">    <span class="keyword">private</span> Boolean flag;</span><br><span class="line">    <span class="keyword">private</span> Object data;</span><br><span class="line">    <span class="keyword">private</span> String msg;        <span class="comment">//用于封装消息</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>​ 后台代码也要根据情况做处理，当前是模拟的错误</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PostMapping</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> R <span class="title">save</span><span class="params">(<span class="meta">@RequestBody</span> Book book)</span><span class="keyword">throws</span> IOException</span>{</span><br><span class="line">        Boolean flag=bookService.insert(book);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> R(flag,flag?<span class="string">"添加成功^_^"</span>:<span class="string">"添加失败-_-!"</span>);</span><br><span class="line">        }</span><br></pre></td></tr></tbody></table></figure><p>​ 然后在表现层做统一的异常处理，使用SpringMVC提供的异常处理器做统一的异常处理</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@RestControllerAdvice</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ProjectExceptionAdvice</span> </span>{</span><br><span class="line">    <span class="meta">@ExceptionHandler(Exception.class)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> R <span class="title">doOtherException</span><span class="params">(Exception ex)</span> </span>{</span><br><span class="line">        <span class="comment">//记录日志</span></span><br><span class="line">        <span class="comment">//发送消息给运维</span></span><br><span class="line">        <span class="comment">//发送邮件给开发人员,ex对象发送给开发人员</span></span><br><span class="line">        ex.printStackTrace();</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> R(<span class="keyword">false</span>, <span class="keyword">null</span>, <span class="string">"系统错误，请稍后再试！"</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>​ 页面上得到数据后，先判定是否有后台传递过来的消息，标志就是当前操作是否成功，如果返回操作结果false，就读取后台传递的消息</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//添加</span></span><br><span class="line"><span class="function"><span class="title">handleAdd</span>(<span class="params"></span>)</span></span><br><span class="line">{</span><br><span class="line">    <span class="comment">//发送ajax请求</span></span><br><span class="line">    axios.post(<span class="string">"/books"</span>, <span class="built_in">this</span>.formData).then(<span class="function">(<span class="params">res</span>) =&gt;</span> {</span><br><span class="line">        <span class="comment">//如果操作成功，关闭弹层，显示数据</span></span><br><span class="line">        <span class="keyword">if</span> (res.data.flag) {</span><br><span class="line">            <span class="built_in">this</span>.dialogFormVisible = <span class="literal">false</span>;</span><br><span class="line">            <span class="built_in">this</span>.$message.success(<span class="string">"添加成功"</span>);</span><br><span class="line">        } <span class="keyword">else</span> {</span><br><span class="line">            <span class="built_in">this</span>.$message.error(res.data.msg);   <span class="comment">//消息来自于后台传递过来，而非固定内容</span></span><br><span class="line">        }</span><br><span class="line">    }).finally(<span class="function">() =&gt;</span> {</span><br><span class="line">        <span class="built_in">this</span>.getAll();</span><br><span class="line">    });</span><br><span class="line">}</span><br><span class="line">,</span><br></pre></td></tr></tbody></table></figure><p><strong>总结</strong></p><ol><li>使用注解@RestControllerAdvice定义SpringMVC异常处理器用来处理异常的</li><li>异常处理器必须被扫描加载，否则无法生效</li><li>表现层返回结果的模型类中添加消息属性用来传递消息到页面</li></ol><p>​</p><h2 id="11-页面功能开发"><a href="#11-页面功能开发" class="headerlink" title="11.页面功能开发"></a>11.页面功能开发</h2><h3 id="分页功能"><a href="#分页功能" class="headerlink" title="分页功能"></a>分页功能</h3><p>​ 分页功能的制作用于替换前面的查询全部，其中要使用到elementUI提供的分页组件</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--分页组件--&gt;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pagination-container"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">el-pagination</span></span></span></span><br><span class="line"><span class="tag"><span class="xml">        <span class="attr">class</span>=<span class="string">"pagiantion"</span></span></span></span><br><span class="line"><span class="tag"><span class="xml">    @<span class="attr">current-change</span>=<span class="string">"handleCurrentChange"</span></span></span></span><br><span class="line"><span class="tag"><span class="xml">    <span class="attr">:current-page</span>=<span class="string">"pagination.currentPage"</span></span></span></span><br><span class="line"><span class="tag"><span class="xml">    <span class="attr">:page-size</span>=<span class="string">"pagination.pageSize"</span></span></span></span><br><span class="line"><span class="tag"><span class="xml">    <span class="attr">layout</span>=<span class="string">"total, prev, pager, next, jumper"</span></span></span></span><br><span class="line"><span class="tag"><span class="xml">    <span class="attr">:total</span>=<span class="string">"pagination.total"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">el-pagination</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></tbody></table></figure><p>​ 为了配合分页组件，封装分页对应的数据模型</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">data:{</span><br><span class="line"> pagination: { </span><br><span class="line">  //分页相关模型数据</span><br><span class="line">  currentPage: 1, //当前页码</span><br><span class="line">  pageSize:10, //每页显示的记录数</span><br><span class="line">  total:0,  //总记录数</span><br><span class="line"> }</span><br><span class="line">},</span><br></pre></td></tr></tbody></table></figure><p>​ 修改查询全部功能为分页查询，通过路径变量传递页码信息参数</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">getAll</span>(<span class="params"></span>)</span></span><br><span class="line">{</span><br><span class="line">    axios.get(<span class="string">"/books/"</span> + <span class="built_in">this</span>.pagination.currentPage + <span class="string">"/"</span> + <span class="built_in">this</span>.pagination.pageSize).then(<span class="function">(<span class="params">res</span>) =&gt;</span> {</span><br><span class="line">    });</span><br><span class="line">}</span><br><span class="line">,</span><br></pre></td></tr></tbody></table></figure><p>​ 后台提供对应的分页功能</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping("/{currentPage}/{pageSize}")</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> R <span class="title">getAll</span><span class="params">(<span class="meta">@PathVariable</span> Integer currentPage,<span class="meta">@PathVariable</span> Integer pageSize)</span></span>{</span><br><span class="line">        IPage&lt;Book&gt; pageBook=bookService.getPage(currentPage,pageSize);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> R(<span class="keyword">null</span>!=pageBook,pageBook);</span><br><span class="line">        }</span><br></pre></td></tr></tbody></table></figure><p>​ 页面根据分页操作结果读取对应数据，并进行数据模型绑定</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">getAll</span>(<span class="params"></span>)</span></span><br><span class="line">{</span><br><span class="line">    axios.get(<span class="string">"/books/"</span> + <span class="built_in">this</span>.pagination.currentPage + <span class="string">"/"</span> + <span class="built_in">this</span>.pagination.pageSize).then(<span class="function">(<span class="params">res</span>) =&gt;</span> {</span><br><span class="line">        <span class="built_in">this</span>.pagination.total = res.data.data.total;</span><br><span class="line">        <span class="built_in">this</span>.pagination.currentPage = res.data.data.current;</span><br><span class="line">        <span class="built_in">this</span>.pagination.pagesize = res.data.data.size;</span><br><span class="line">        <span class="built_in">this</span>.dataList = res.data.data.records;</span><br><span class="line">    });</span><br><span class="line">}</span><br><span class="line">,</span><br></pre></td></tr></tbody></table></figure><p>​ 对切换页码操作设置调用当前分页操作</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//切换页码</span></span><br><span class="line"><span class="function"><span class="title">handleCurrentChange</span>(<span class="params">currentPage</span>)</span></span><br><span class="line">{</span><br><span class="line">    <span class="built_in">this</span>.pagination.currentPage = currentPage;</span><br><span class="line">    <span class="built_in">this</span>.getAll();</span><br><span class="line">}</span><br><span class="line">,</span><br></pre></td></tr></tbody></table></figure><p><strong>总结</strong></p><ol><li>使用el分页组件</li><li>定义分页组件绑定的数据模型</li><li>异步调用获取分页数据</li><li>分页数据页面回显</li></ol><h3 id="删除功能维护"><a href="#删除功能维护" class="headerlink" title="删除功能维护"></a>删除功能维护</h3><p>​ 由于使用了分页功能，当最后一页只有一条数据时，删除操作就会出现BUG，最后一页无数据但是独立展示，对分页查询功能进行后台功能维护，如果当前页码值大于最大页码值，重新执行查询。其实这个问题解决方案很多，这里给出比较简单的一种处理方案</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping("{currentPage}/{pageSize}")</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> R <span class="title">getPage</span><span class="params">(<span class="meta">@PathVariable</span> <span class="keyword">int</span> currentPage,<span class="meta">@PathVariable</span> <span class="keyword">int</span> pageSize)</span></span>{</span><br><span class="line">        IPage&lt;Book&gt; page=bookService.getPage(currentPage,pageSize);</span><br><span class="line">        <span class="comment">//如果当前页码值大于了总页码值，那么重新执行查询操作，使用最大页码值作为当前页码值</span></span><br><span class="line">        <span class="keyword">if</span>(currentPage&gt;page.getPages()){</span><br><span class="line">        page=bookService.getPage((<span class="keyword">int</span>)page.getPages(),pageSize);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> R(<span class="keyword">true</span>,page);</span><br><span class="line">        }</span><br></pre></td></tr></tbody></table></figure><h3 id="条件查询功能"><a href="#条件查询功能" class="headerlink" title="条件查询功能"></a>条件查询功能</h3><p>​ 最后一个功能来做条件查询，其实条件查询可以理解为分页查询的时候除了携带分页数据再多带几个数据的查询。这些多带的数据就是查询条件。比较一下不带条件的分页查询与带条件的分页查询差别之处，这个功能就好做了</p><ul><li><p>页面封装的数据：带不带条件影响的仅仅是一次性传递到后台的数据总量，由传递2个分页相关的数据转换成2个分页数据加若干个条件</p></li><li><p>后台查询功能：查询时由不带条件，转换成带条件，反正不带条件的时候查询条件对象使用的是null，现在换成具体条件，差别不大</p></li><li><p>查询结果：不管带不带条件，出来的数据只是有数量上的差别，其他都差别，这个可以忽略</p><p>经过上述分析，看来需要在页面发送请求的格式方面做一定的修改，后台的调用数据层操作时发送修改，其他没有区别</p><p>页面发送请求时，两个分页数据仍然使用路径变量，其他条件采用动态拼装url参数的形式传递</p><p><strong>页面封装查询条件字段</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">pagination: {  </span><br><span class="line">//分页相关模型数据</span><br><span class="line"> currentPage: 1,  //当前页码</span><br><span class="line"> pageSize:10,  //每页显示的记录数</span><br><span class="line"> total:0,   //总记录数</span><br><span class="line"> name: "",</span><br><span class="line"> type: "",</span><br><span class="line"> description: ""</span><br><span class="line">},</span><br></pre></td></tr></tbody></table></figure><p>页面添加查询条件字段对应的数据模型绑定名称</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"filter-container"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">placeholder</span>=<span class="string">"图书类别"</span> <span class="attr">v-model</span>=<span class="string">"pagination.type"</span> <span class="attr">class</span>=<span class="string">"filter-item"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">placeholder</span>=<span class="string">"图书名称"</span> <span class="attr">v-model</span>=<span class="string">"pagination.name"</span> <span class="attr">class</span>=<span class="string">"filter-item"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">placeholder</span>=<span class="string">"图书描述"</span> <span class="attr">v-model</span>=<span class="string">"pagination.description"</span> <span class="attr">class</span>=<span class="string">"filter-item"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-button</span> @<span class="attr">click</span>=<span class="string">"getAll()"</span> <span class="attr">class</span>=<span class="string">"dalfBut"</span>&gt;</span>查询<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">"primary"</span> <span class="attr">class</span>=<span class="string">"butT"</span> @<span class="attr">click</span>=<span class="string">"handleCreate()"</span>&gt;</span>新建<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>将查询条件组织成url参数，添加到请求url地址中，这里可以借助其他类库快速开发，当前使用手工形式拼接，降低学习要求</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">getAll</span>(<span class="params"></span>)</span> {</span><br><span class="line">    <span class="comment">//1.获取查询条件,拼接查询条件</span></span><br><span class="line">    param = <span class="string">"?name="</span>+<span class="built_in">this</span>.pagination.name;</span><br><span class="line">    param += <span class="string">"&amp;type="</span>+<span class="built_in">this</span>.pagination.type;</span><br><span class="line">    param += <span class="string">"&amp;description="</span>+<span class="built_in">this</span>.pagination.description;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"-----------------"</span>+ param);</span><br><span class="line">    axios.get(<span class="string">"/books/"</span>+<span class="built_in">this</span>.pagination.currentPage+<span class="string">"/"</span>+<span class="built_in">this</span>.pagination.pageSize+param).then(<span class="function">(<span class="params">res</span>) =&gt;</span> {</span><br><span class="line">        <span class="built_in">this</span>.dataList = res.data.data.records;</span><br><span class="line">    });</span><br><span class="line">},</span><br></pre></td></tr></tbody></table></figure><p>后台代码中定义实体类封查询条件</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping("{currentPage}/{pageSize}")</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> R <span class="title">getAll</span><span class="params">(<span class="meta">@PathVariable</span> <span class="keyword">int</span> currentPage,<span class="meta">@PathVariable</span> <span class="keyword">int</span> pageSize,Book book)</span> </span>{</span><br><span class="line">    System.out.println(<span class="string">"参数=====&gt;"</span>+book);</span><br><span class="line">    IPage&lt;Book&gt; pageBook = bookService.getPage(currentPage,pageSize);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> R(<span class="keyword">null</span> != pageBook ,pageBook);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>对应业务层接口与实现类进行修正</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">IBookService</span> <span class="keyword">extends</span> <span class="title">IService</span>&lt;<span class="title">Book</span>&gt; </span>{</span><br><span class="line">    <span class="function">IPage&lt;Book&gt; <span class="title">getPage</span><span class="params">(Integer currentPage,Integer pageSize,Book queryBook)</span></span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BookServiceImpl2</span> <span class="keyword">extends</span> <span class="title">ServiceImpl</span>&lt;<span class="title">BookDao</span>,<span class="title">Book</span>&gt; <span class="keyword">implements</span> <span class="title">IBookService</span> </span>{</span><br><span class="line">    <span class="function"><span class="keyword">public</span> IPage&lt;Book&gt; <span class="title">getPage</span><span class="params">(Integer currentPage,Integer pageSize,Book queryBook)</span></span>{</span><br><span class="line">        IPage page = <span class="keyword">new</span> Page(currentPage,pageSize);</span><br><span class="line">        LambdaQueryWrapper&lt;Book&gt; lqw = <span class="keyword">new</span> LambdaQueryWrapper&lt;Book&gt;();</span><br><span class="line">        lqw.like(Strings.isNotEmpty(queryBook.getName()),Book::getName,queryBook.getName());</span><br><span class="line">        lqw.like(Strings.isNotEmpty(queryBook.getType()),Book::getType,queryBook.getType());</span><br><span class="line">        lqw.like(Strings.isNotEmpty(queryBook.getDescription()),Book::getDescription,queryBook.getDescription());</span><br><span class="line">        <span class="keyword">return</span> bookDao.selectPage(page,lqw);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>页面回显数据</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">getAll</span>(<span class="params"></span>)</span> {</span><br><span class="line">    <span class="comment">//1.获取查询条件,拼接查询条件</span></span><br><span class="line">    param = <span class="string">"?name="</span>+<span class="built_in">this</span>.pagination.name;</span><br><span class="line">    param += <span class="string">"&amp;type="</span>+<span class="built_in">this</span>.pagination.type;</span><br><span class="line">    param += <span class="string">"&amp;description="</span>+<span class="built_in">this</span>.pagination.description;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"-----------------"</span>+ param);</span><br><span class="line">    axios.get(<span class="string">"/books/"</span>+<span class="built_in">this</span>.pagination.currentPage+<span class="string">"/"</span>+<span class="built_in">this</span>.pagination.pageSize+param).then(<span class="function">(<span class="params">res</span>) =&gt;</span> {</span><br><span class="line">        <span class="built_in">this</span>.pagination.total = res.data.data.total;</span><br><span class="line">        <span class="built_in">this</span>.pagination.currentPage = res.data.data.current;</span><br><span class="line">        <span class="built_in">this</span>.pagination.pagesize = res.data.data.size;</span><br><span class="line">        <span class="built_in">this</span>.dataList = res.data.data.records;</span><br><span class="line">    });</span><br><span class="line">},</span><br></pre></td></tr></tbody></table></figure></li></ul><p><strong>总结</strong></p><ol><li>定义查询条件数据模型（当前封装到分页数据模型中）</li><li>异步调用分页功能并通过请求参数传递数据到后台</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://gitee.com/CandyWall/spring-boot-study&quot;&gt;https://gitee.com/CandyWall/spring-boot-study&lt;/a&gt;&lt;br&gt;访问：&lt;a href=&quot;http://localhost</summary>
      
    
    
    
    <category term="Java" scheme="https://wenkex.gitee.io/categories/Java/"/>
    
    
    <category term="springboot" scheme="https://wenkex.gitee.io/tags/springboot/"/>
    
  </entry>
  
  <entry>
    <title>黑马瑞吉外卖</title>
    <link href="https://wenkex.gitee.io/2022/09185610.html"/>
    <id>https://wenkex.gitee.io/2022/09185610.html</id>
    <published>2022-09-18T07:59:24.000Z</published>
    <updated>2022-10-18T11:56:15.654Z</updated>
    
    <content type="html"><![CDATA[<h1 id="软件开发流程"><a href="#软件开发流程" class="headerlink" title="软件开发流程"></a>软件开发流程</h1><h2 id="需求分析"><a href="#需求分析" class="headerlink" title="需求分析"></a>需求分析</h2><ul><li><input disabled="" type="checkbox"> <strong>后台系统</strong></li></ul><p>​ 菜品管理（批量删除、起售停售）<br>​ 套餐管理（修改、起售停售）<br>​ 订单明细</p><ul><li><input disabled="" type="checkbox"> <strong>移动端</strong></li></ul><p> 个人中心（退出登录、最新订单查询、历史订单、地址管理-修改地址、地址管理-删除地址）<br> 购物车（删除购物车中的商品)</p><h2 id="详细设计"><a href="#详细设计" class="headerlink" title="详细设计"></a>详细设计</h2><p>在概要设计的基础上，开发者需要进行软件系统的详细设计。在详细设计中，描述实现具体模块所涉及到的主要算法、数据结构、类的层次结构及调用关系，需要说明软件系统各个层次中的每一个程序(每个模块或子程序)的设计考虑，以便进行编码和测试。应当保证软件的需求完全分配给整个软件。详细设计应当足够详细，能够根据详细设计报告进行编码。<br>产品文档，UI界面设计，概要设计，数据库设计</p><h2 id="编码"><a href="#编码" class="headerlink" title="编码"></a>编码</h2><p>在软件编码阶段，开发者根据《软件系统详细设计报告》中对数据结构、算法分析和模块实现等方面的设计要求，开始具体的编写程序工作，分别实现各模块的功能，从而实现对目标系统的功能、性能、接口、界面等方面的要求。<br>项目代码，单元测试</p><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>测试编写好的系统。交给用户使用，用户使用后一个一个的确认每个功能。测试同样是项目研发中一个相当重要的步骤，对于一个大型软件，3个月到1年的外部测试都是正常的，因为永远都会有不可预料的问题存在。完成测试后，完成验收并完成最后的一些帮助文档，整体项目才算告一段落，当然日后少不了升级，修补等等工作，只要不是想通过一锤子买卖骗钱，就要不停的跟踪软件的运营状况并持续修补升级，直到这个软件被彻底淘汰为止。</p><h1 id="项目介绍"><a href="#项目介绍" class="headerlink" title="项目介绍"></a>项目介绍</h1><p><a href="https://www.cnblogs.com/KizunaAI/p/16253032.html">https://www.cnblogs.com/KizunaAI/p/16253032.html</a><br>本项目（瑞吉外卖）是专门为餐饮企业(餐厅、饭店)定制的一款软件产品，包括系统管理后台和移动端应用两部分。<br>其中系统管理后台主要提供给餐饮企业内部员工使用，可以对餐厅的菜品、套餐、订单等进行管理维护。</p><p>移动端应用主要提供给消费者使用，可以在线浏览菜品、添加购物车、下单等。</p><p>本项目共分为3期进行开发：<br>第一期主要实现基本需求，其中移动端应用通过H5实现，用户可以通过手机浏览器访问。<br>第二期主要针对移动端应用进行改进，使用微信小程序实现，用户使用起来更加方便。<br>第三期主要针对系统进行优化升级，提高系统的访问性能。</p><h2 id="技术选型"><a href="#技术选型" class="headerlink" title="技术选型"></a>技术选型</h2><p>用户层,H5,VUE.js,ElementUl,微信小程序<br>网关层Nginx,<br>应用层,Spring,Swagger,lombok,Spring Boot,Spring MVC,Spring Session<br>数据层,Mysql,Mybatis,Mybatis Plus,Redis<br>工具git,,maven,junit</p><h2 id="功能架构"><a href="#功能架构" class="headerlink" title="功能架构"></a>功能架构</h2><h3 id="移动端前台-H5、微信小程序"><a href="#移动端前台-H5、微信小程序" class="headerlink" title="移动端前台(H5、微信小程序"></a>移动端前台(H5、微信小程序</h3><p>手机号登录<br>微信登录<br>地址管理<br>历史订单</p><p>菜品规格<br>购物车<br>下单<br>菜品浏览</p><h3 id="系统管理后台"><a href="#系统管理后台" class="headerlink" title="系统管理后台"></a>系统管理后台</h3><p>分类管理<br>菜品管理<br>套餐管理<br>菜品口味管理<br>员工登录<br>员工退出<br>员工管理<br>订单管理</p><h1 id="开发环境搭建"><a href="#开发环境搭建" class="headerlink" title="开发环境搭建"></a>开发环境搭建</h1><h2 id="数据库环境搭建"><a href="#数据库环境搭建" class="headerlink" title="数据库环境搭建"></a>数据库环境搭建</h2><p>employee  员工表<br>category  菜品和套餐分类表<br>dish     菜品表<br>setmeal   套餐表<br>setmeal_dish   套餐菜品关系表<br>dish flavor   菜品口味关系表<br>user     用户表(C端)<br>address_book    地址簿表<br>shopping_cart   购物车表<br>orders   订单表<br>order_detail   订单明细表</p><h2 id="设置静态资源映射"><a href="#设置静态资源映射" class="headerlink" title="设置静态资源映射"></a>设置静态资源映射</h2><p>/config/WebMvcConfig.java</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WebMvcConfig</span> <span class="keyword">extends</span> <span class="title">WebMvcConfigurationSupport</span> </span>{</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">addResourceHandlers</span><span class="params">(ResourceHandlerRegistry registry)</span> </span>{</span><br><span class="line">        log.info(<span class="string">"开始静态资源映射"</span>);</span><br><span class="line">        registry.addResourceHandler(<span class="string">"/backend/**"</span>).addResourceLocations(<span class="string">"classpath:/backend/"</span>);</span><br><span class="line">        registry.addResourceHandler(<span class="string">"/front/**"</span>).addResourceLocations(<span class="string">"classpath:/front/"</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h1 id="开发"><a href="#开发" class="headerlink" title="开发"></a>开发</h1><h2 id="后台登录功能开发"><a href="#后台登录功能开发" class="headerlink" title="后台登录功能开发"></a>后台登录功能开发</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;软件开发流程&quot;&gt;&lt;a href=&quot;#软件开发流程&quot; class=&quot;headerlink&quot; title=&quot;软件开发流程&quot;&gt;&lt;/a&gt;软件开发流程&lt;/h1&gt;&lt;h2 id=&quot;需求分析&quot;&gt;&lt;a href=&quot;#需求分析&quot; class=&quot;headerlink&quot; title=&quot;需</summary>
      
    
    
    
    <category term="Java" scheme="https://wenkex.gitee.io/categories/Java/"/>
    
    
    <category term="spring boot" scheme="https://wenkex.gitee.io/tags/spring-boot/"/>
    
  </entry>
  
  <entry>
    <title>云计算-OpenStack</title>
    <link href="https://wenkex.gitee.io/2022/091616699.html"/>
    <id>https://wenkex.gitee.io/2022/091616699.html</id>
    <published>2022-09-16T05:58:24.000Z</published>
    <updated>2022-10-18T13:28:34.378Z</updated>
    
    <content type="html"><![CDATA[<h1 id="OpenStack"><a href="#OpenStack" class="headerlink" title="OpenStack"></a>OpenStack</h1><p>OpenStack是一个云平台管理的项目，它不是一个软件，它是由几个主要的组件组合起来，为公有云、私有云和混合云的建设与管理提供软件的开源项目。现在已经有来自100多个国家的数万名个人和200多家企业参与到OpenStack的开发，如 NASA、华为、谷歌、惠普、Intel、IBM、微软等。这些机构与个人将 OpenStack作为基础设施即服务资源的通用前端。Openstack项目的首要任务是简化云的部署过程并为其带来良好的可扩展性。OpenStack系统或其演变版本目前被广泛应用在各行各业，包括自建私有云、公共云、租赁私有云及混合云，用户包括思科、英特尔、IBM、华为、希捷等，OpenStack 支持 KVM、Xen、Lvc、Docker等虚拟机软件或容器。</p><p>OpenStack从一开始，就是为了云计算服务的。简单来说，它就是一个操作系统，一套软件，一套IaaS软件。</p><p>管理“基础设施资源”，便于用户调用和使用，是OpenStack的首要任务。<br>基础设施资源，主要包括三个方面：计算、存储、网络。说通俗点，就是CPU，硬盘，网卡。</p><p>OpenStack给每个版本都单独取了一个名字</p><h2 id="受欢迎"><a href="#受欢迎" class="headerlink" title="受欢迎"></a>受欢迎</h2><p>OpenStack之所以这么受欢迎，主要原因有三个方面：</p><p>首先是快速。OpenStack安装部署所需要的时间很少，而时间就是价值。</p><p>其次是灵活。OpenStack获得了各大领导厂商的广泛支持，兼容性和适用性极强，使用起来非常方便可靠。</p><p>最后是便宜。作为开源项目，OpenStack的使用成本相对低廉，还能获得源源不断的更新，因为开源社区在为项目贡献活力。</p><p>总而言之，Openstack拥有非常大的发展潜力，目前处于高速发展的上升期。在未来很长一段时间内，这种趋势都不会改变。</p><h2 id="OpenStack能做什么"><a href="#OpenStack能做什么" class="headerlink" title="OpenStack能做什么"></a>OpenStack能做什么</h2><p>OpenStack的主要目标是管理数据中心的资源，简化资源分配。它管理三部分资源，分别是：</p><p>计算资源：OpenStack可以规划并管理大量虚拟机，从而允许企业或服务提供商按需提供计算资源；开发者可以通过API访问计算资源从而创建云应用，管理员与用户则可以通过web访问这些资源；<br>存储资源：OpenStack可以为云服务或云应用提供所需的对象及块存储资源。因为对性能及价格有需求，很多组织已经不能满足于传统的企业级存储技术，因此OpenStack可以根据用户需要提供可配置的对象存储或块存储功能；<br>网络资源：如今的数据中心存在大量的配置工作，如服务器、网络设备、存储设备、安全设备均需要配置，而它们还将被划分成更多的虚拟设备或虚拟网络；这会导致 IP 地址的数量、路由配置、安全规则将爆炸式增长；传统的网络管理技术无法真正的可高扩展、高自动化地管理下一代网络；因而OpenStack 提供了插件式、可扩展、API 驱动型的网络及IP管理功能；</p><h2 id="学习"><a href="#学习" class="headerlink" title="学习"></a>学习</h2><p>网上也有很多手把手进行教学的文档和视频，可以方便新人学习时进行参考。</p><p>推荐几个大咖，大家可以百度找他们的博客来看：陈沙克、何明桂、孔令贤，Cloudman。</p><h2 id="Openstack框架图"><a href="#Openstack框架图" class="headerlink" title="Openstack框架图"></a>Openstack框架图</h2><p>Keystone：认证服务、授权中心，完成用户登录的一致性<br>Nova：提供云主机，nova通过管理libvirtd来启动虚拟机<br>Glance：镜像服务、管理模板<br>Neutron：网络服务，分配ip<br>Cinder：提供块存储服务<br>Ceph：存储<br>Horizon：提供ui，web界面<br>Heat：编排，编排资源的一个工具，一次启动10台云主机<br>Cellometer：监控服务，监控neutron带宽、cinder存储额外的磁盘、快照glance占用空间</p><h2 id="组件"><a href="#组件" class="headerlink" title="组件"></a>组件</h2><p>Nova<br>Nova是整个Openstack里面最核心的组件。当初Rackspace和NASA贡献代码时，NASA贡献的那部分就是Nova最早的代码（Rackspace贡献的代码是Swift）。OpenStack云实例生命期所需的各种动作都将由Nova进行处理和支撑，它负责管理整个云的计算资源、网络、授权及测度。</p><p>Keystone<br>Keystone为所有的OpenStack组件提供认证和访问策略服务，主要对（但不限于）Swift、Glance、Nova等进行认证与授权。</p><p>Horizon<br>Horizon是一个用以管理、控制OpenStack服务的Web控制面板。用户可以通过这个界面对OpenStack状态进行查看和管理。</p><h2 id="单节点的OpenStack一体化部署"><a href="#单节点的OpenStack一体化部署" class="headerlink" title="单节点的OpenStack一体化部署"></a>单节点的OpenStack一体化部署</h2><p>RDO的Packstack非常适合使用单一的AIl-in-One（一体化）节点来验证OpenStack云部署。</p><h3 id="创建虚拟机"><a href="#创建虚拟机" class="headerlink" title="创建虚拟机"></a>创建虚拟机</h3><p>在启用或关闭window功能中关闭Hyper-v<br>打开Windows安全中心&gt;设备安全性&gt;内核隔离，关闭了内核隔离</p><p>建议采用16GB内存，使用8GB也能运行。<br>CPU双核且支持虚拟化。如InterVT或AMD V技术<br>硬盘不低于200GB.<br>网卡（网络适配器）以桥接模式接入主机（物理机）网络。</p><h3 id="网络配置"><a href="#网络配置" class="headerlink" title="网络配置"></a>网络配置</h3><h4 id="1-设置静态ip-192-168-88-140"><a href="#1-设置静态ip-192-168-88-140" class="headerlink" title="1.设置静态ip(192.168.88.140)"></a>1.设置静态ip(192.168.88.140)</h4><h4 id="2-关闭网络管理器"><a href="#2-关闭网络管理器" class="headerlink" title="2.关闭网络管理器"></a>2.关闭网络管理器</h4><p>CentOS7网络默认由NetworkManager（网络管理器）负责管理，但是NetworkManager与OpenStack网络组件Neutron有冲突，应停用它，改用传统的网络服务Network来管理网络。</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 停止网络管理器服务</span></span><br><span class="line">systemctl stop NetworkManager</span><br><span class="line"><span class="meta">#</span><span class="bash"> 关闭网络管理器开机自启动</span></span><br><span class="line">systemctl disable NetworkManager</span><br></pre></td></tr></tbody></table></figure><h4 id="3-关闭防火墙"><a href="#3-关闭防火墙" class="headerlink" title="3.关闭防火墙"></a>3.关闭防火墙</h4><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop firewalld</span><br><span class="line">systemctl disable firewalld</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h4 id="4-关闭SELinux"><a href="#4-关闭SELinux" class="headerlink" title="4.关闭SELinux"></a>4.关闭SELinux</h4><p>编辑/etc/selinux/config文件，将“SELINUX”的值设置为“disabled”，重启系统使禁用SELinux<br>生效。</p><h2 id="devstack搭建"><a href="#devstack搭建" class="headerlink" title="devstack搭建"></a>devstack搭建</h2><p><a href="https://zhuanlan.zhihu.com/p/440120871">https://zhuanlan.zhihu.com/p/440120871</a></p><p>devstack：OpenStack为入门者和开发者推出了一个OpenStack开发环境：devstack。通过devstack，你可以在一个主机节点上部署一个“五脏俱全”的OpenStack Cloud。</p><p>Github: <a href="https://github.com/openstack-dev/devstack">https://github.com/openstack-dev/devstack</a></p><p>Wiki: <a href="https://wiki.openstack.org/wiki">https://wiki.openstack.org/wiki</a></p><h2 id="Rdo搭建"><a href="#Rdo搭建" class="headerlink" title="Rdo搭建"></a>Rdo搭建</h2><p>红帽推出了OpenStack的快捷安装部署项目，这个项目就是RDO。RDO项目的原理是整合上游的OpenStack版本，然后根据红帽的系统做裁剪和定制，帮助用户进行选择，对用户来说，就是简单的几步，完成了OpenStack的部署。</p><p>Docs：<a href="https://www.rdoproject.org/install/">https://www.rdoproject.org/install/</a></p><h2 id="手动部署"><a href="#手动部署" class="headerlink" title="手动部署"></a>手动部署</h2><p>手动部署all-in-one、multi-node、multi-HA-node环境。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;OpenStack&quot;&gt;&lt;a href=&quot;#OpenStack&quot; class=&quot;headerlink&quot; title=&quot;OpenStack&quot;&gt;&lt;/a&gt;OpenStack&lt;/h1&gt;&lt;p&gt;OpenStack是一个云平台管理的项目，它不是一个软件，它是由几个主要的组件组合起</summary>
      
    
    
    
    <category term="大数据" scheme="https://wenkex.gitee.io/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
    <category term="OpenStack" scheme="https://wenkex.gitee.io/tags/OpenStack/"/>
    
  </entry>
  
  <entry>
    <title>数据格式</title>
    <link href="https://wenkex.gitee.io/2022/091525750.html"/>
    <id>https://wenkex.gitee.io/2022/091525750.html</id>
    <published>2022-09-15T02:59:24.000Z</published>
    <updated>2022-10-18T13:28:34.378Z</updated>
    
    <content type="html"><![CDATA[<h2 id="XML"><a href="#XML" class="headerlink" title="XML"></a>XML</h2><p>• XML是指可扩展标记语言(Xtensible Markup Language),它是一种标记语言，html是用于显示数据，xml主要功能是为了存储数据，xml也可以显示数据（不是主要功能)<br>• XML标签没有被预定义，需要用户自行定义标签。</p><p>XML的应用<br>1.不同的系统之间传输数据</p><p>2.用来表示生活中有关系的数据</p><p>3.经常用在配置文件<br>    例如现在连接数据库知道数据库的用户名和密码，数据名称，修改数据库的信息，不需要修改源代码，只要修改配置文件就可以了</p><h2 id="JSON语言"><a href="#JSON语言" class="headerlink" title="JSON语言"></a>JSON语言</h2><p>在开发中凡是涉及到『跨平台数据传输』，JSON格式一定是首选</p><p>JSON（JavaScript Object Notation，即JS对象标记）是一种轻量级的数据交换语言，该语言以易于让人阅读的文字（纯文本）为基础，用来传输由属性值或者序列性的值组成的数据对象。尽管JSON是最初只是Javascript中一种创建对象的字面量语法，但它在当下更是一种独立于语言的数据格式，很多编程语言都支持JSON格式数据的生成和解析，Python内置的json模块也提供了这方面的功能。由于JSON是纯文本，它和<a href="https://zh.wikipedia.org/wiki/XML">XML</a>一样都适用于异构系统之间的数据交换，而相较于XML，JSON显得更加的轻便和优雅。下面是表达同样信息的XML和JSON，而JSON的优势是相当直观的。</p><p>它是基于 ECMAScript （欧洲计算机协会制定的js规范）的一个子集，从JavaScript脚本语言中演变而来的，采用完全独立于编程语言的文本格式来存储和表示数据。由于JSON有简洁、清晰的层次结构，因此使得JSON成为理想的数据交换语言。JSON易于程序开发者阅读和编写，同时也易于机器解析和生成，并有效地提升网络传输的效率。</p><p>XML的例子：</p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">message</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">from</span>&gt;</span>Alice<span class="tag">&lt;/<span class="name">from</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">to</span>&gt;</span>Bob<span class="tag">&lt;/<span class="name">to</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">content</span>&gt;</span>Will you marry me?<span class="tag">&lt;/<span class="name">content</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">message</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>JSON的例子：</p><figure class="highlight json"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">{</span><br><span class="line">    <span class="attr">"from"</span>: <span class="string">"Alice"</span>,</span><br><span class="line">    <span class="attr">"to"</span>: <span class="string">"Bob"</span>,</span><br><span class="line">    <span class="attr">"content"</span>: <span class="string">"Will you marry me?"</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="JSON格式定义"><a href="#JSON格式定义" class="headerlink" title="JSON格式定义"></a>JSON格式定义</h3><p>{}定义JSON对象<br>[]定义JSON数组</p><figure class="highlight json"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// JSON对象的格式是：</span></span><br><span class="line">{key:value,key:value,...,key:value}</span><br><span class="line"></span><br><span class="line"><span class="comment">// JOSN数组的格式是：</span></span><br><span class="line">[value,value,...,value]</span><br></pre></td></tr></tbody></table></figure><p>key的类型固定是字符串<br>value的类型可以是：<br>基本数据类型<br>引用类型：JSON对象或JSON数组</p><h2 id="yaml"><a href="#yaml" class="headerlink" title="yaml"></a>yaml</h2><p>后缀使用.yml或者.yaml都行</p><h3 id="优点："><a href="#优点：" class="headerlink" title="优点："></a>优点：</h3><p>易阅读<br>易于脚本语言交互<br>以数据为核心，重数据轻格式</p><h3 id="语法规则"><a href="#语法规则" class="headerlink" title="语法规则"></a>语法规则</h3><p>1.大小写敏感<br>2.属性层级关系使用多行描述，每行结尾使用冒号结束<br>3.使用缩进表示层级关系，同层级左侧对齐，只允许使用空格(不允许使用Tab键)<br>4.属性值前面添加空格(属性名与属性值之间使用冒号+空格作为分隔)<br>5.#表示注释<br>6.使用” “括住的内容可以使用转义字符</p><h3 id="常用"><a href="#常用" class="headerlink" title="常用"></a>常用</h3><p>用$进行变量引用<br>path: c:\user\bin</p><p>temp: ${path}\temp</p><figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">boolean:</span> <span class="literal">TRUE</span>                        <span class="comment">#TRUE,true,True,FALSE,false，False均可</span></span><br><span class="line"><span class="attr">float:</span> <span class="number">3.14</span>                            <span class="comment">#6.8523015e+5  #支持科学计数法</span></span><br><span class="line"><span class="attr">int:</span> <span class="number">123</span>                            <span class="comment">#0b1010_0111_0100_1010_1110    #支持二进制、八进制、十六进制</span></span><br><span class="line"><span class="attr">null:</span> <span class="string">~</span>                                <span class="comment">#使用~表示null</span></span><br><span class="line"><span class="attr">string:</span> <span class="string">HelloWorld</span>                <span class="comment">#字符串可以直接书写</span></span><br><span class="line"><span class="attr">string2:</span> <span class="string">"Hello World"</span>            <span class="comment">#可以使用双引号包裹特殊字符</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2018-02-17</span>                    <span class="comment">#日期必须使用yyyy-MM-dd格式</span></span><br><span class="line"><span class="attr">datetime:</span> <span class="number">2018-02-17T15:02:31+08:00</span>  <span class="comment">#时间和日期之间使用T连接，最后使用+代表时区</span></span><br></pre></td></tr></tbody></table></figure><h3 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h3><h4 id="对象："><a href="#对象：" class="headerlink" title="对象："></a>对象：</h4><p>键值对的集合，又称为映射(mapping)/ 哈希(hashes) / 字典(dictionary)</p><h4 id="数组："><a href="#数组：" class="headerlink" title="数组："></a>数组：</h4><p>一组按次序排列的值，又称为序列(sequence) / 列表(list)</p><p>使用一个短横线+一个空格代表一个数组项：</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">subject:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">Java</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">前端</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">大数据</span></span><br><span class="line"><span class="attr">enterprise:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">itcast</span></span><br><span class="line">    <span class="attr">age:</span> <span class="number">16</span></span><br><span class="line">    <span class="attr">subject:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">Java</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">前端</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">大数据</span></span><br><span class="line"><span class="attr">likes:</span> [ <span class="string">王者荣耀</span>,<span class="string">刺激战场</span> ]            <span class="comment">#数组书写缩略格式</span></span><br><span class="line"><span class="attr">users:</span> <span class="comment">#对象数组格式一</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Tom</span></span><br><span class="line">    <span class="attr">age:</span> <span class="number">4</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Jerry</span></span><br><span class="line">    <span class="attr">age:</span> <span class="number">5</span></span><br><span class="line"><span class="attr">users:</span> <span class="comment">#对象数组格式二</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Tom</span></span><br><span class="line">    <span class="attr">age:</span> <span class="number">4</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Jerry</span></span><br><span class="line">    <span class="attr">age:</span> <span class="number">5</span></span><br><span class="line"><span class="attr">users2:</span> [ { <span class="string">name:Tom</span> , <span class="string">age:4</span> } , { <span class="string">name:Jerry</span> , <span class="string">age:5</span> } ]    <span class="comment">#对象数组缩略格式</span></span><br></pre></td></tr></tbody></table></figure><h4 id="纯量"><a href="#纯量" class="headerlink" title="纯量"></a>纯量</h4><p>(scalars)：单个的、不可再分的值</p><h3 id="读取yml数据"><a href="#读取yml数据" class="headerlink" title="读取yml数据"></a>读取yml数据</h3><figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">lesson:</span> <span class="string">SpringBoot</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">82</span></span><br><span class="line"><span class="attr">enterprise:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">itcast</span></span><br><span class="line">  <span class="attr">age:</span> <span class="number">16</span></span><br><span class="line">  <span class="attr">tel:</span> <span class="number">4006184000</span></span><br><span class="line">  <span class="attr">subject:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">Java</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">前端</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">大数据</span></span><br><span class="line"><span class="attr">datasource:</span></span><br><span class="line">  <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">  <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/ssm_db?serverTimezone=UTC</span></span><br><span class="line">  <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">  <span class="attr">password:</span> <span class="string">root</span></span><br></pre></td></tr></tbody></table></figure><h4 id="读取单个数据"><a href="#读取单个数据" class="headerlink" title="读取单个数据"></a>读取单个数据</h4><p>使用@Value读取单个数据，属性名引用方式：${一级属性名.二级属性名……}</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping("/books")</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BookController</span> </span>{</span><br><span class="line">    <span class="meta">@Value("${lesson}")</span></span><br><span class="line">    <span class="keyword">private</span> String lessonName;</span><br><span class="line">    <span class="meta">@Value("${server.port}")</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> port;</span><br><span class="line">    <span class="meta">@Value("${enterprise.subject[1]}")</span></span><br><span class="line">    <span class="keyword">private</span> String[] subject_01;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>在配置文件中可以使用属性名引用方式引用属性</p><figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">baseDir:</span> <span class="string">/usr/local/fire</span></span><br><span class="line"><span class="attr">center:</span></span><br><span class="line">  <span class="attr">dataDir:</span> <span class="string">${baseDir}/data</span></span><br><span class="line">  <span class="attr">tmpDir:</span> <span class="string">${baseDir}/tmp</span></span><br><span class="line">  <span class="attr">logDir:</span> <span class="string">${baseDir}/log</span></span><br><span class="line">  <span class="attr">msgDir:</span> <span class="string">${baseDir}/msgDir</span></span><br></pre></td></tr></tbody></table></figure><p> 属性值中如果出现转移字符，需要使用双引号包裹<br><code>lesson: "Spring\tboot\nlesson"</code></p><h4 id="读取全部数据"><a href="#读取全部数据" class="headerlink" title="读取全部数据"></a>读取全部数据</h4><p>封装全部数据到Environment对象</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping("/books")</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BookController</span> </span>{</span><br><span class="line">    <span class="meta">@Autowired</span>   <span class="comment">//自动装配数据到Environment对象中</span></span><br><span class="line">    <span class="keyword">private</span> Environment env;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping("/{id}")</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getById</span><span class="params">(<span class="meta">@PathVariable</span> Integer id)</span> </span>{</span><br><span class="line">        System.out.println(env.getProperty(<span class="string">"lesson"</span>));</span><br><span class="line">        System.out.println(env.getProperty(<span class="string">"enterprise.name"</span>));</span><br><span class="line">        System.out.println(env.getProperty(<span class="string">"enterprise.subject[0]"</span>));</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"hello , spring boot!"</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h4 id="读取指定数据"><a href="#读取指定数据" class="headerlink" title="读取指定数据"></a>读取指定数据</h4><p>自定义对象封装指定数据</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@ConfigurationProperties(prefix = "enterprise")</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Enterprise</span> </span>{</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    <span class="keyword">private</span> String[] subject;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping("/books")</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BookController</span> </span>{</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> Enterprise enterprise;</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h2 id="电子书格式"><a href="#电子书格式" class="headerlink" title="电子书格式"></a>电子书格式</h2><p>EPUB （英语：Electronic Publication，电子出版物）是一种电子图书标准，由国际数字出版论坛（IDPF）提出，常见的电子书格式之一，市面上大部分的阅读设备和软件都支持 epub 格式 （除了 Kindle）。EPub 是一个自由的开源标准，是一种富文本格式，可以自动重新排版，也就是文字内容可以根据阅读设备的特性，以最适于阅读的方式显示。所以我们把 .epub 格式作为第一选择。</p><p>PDF（英语：Portable Document Format，便携式文档格式）是一种用独立于应用程序、硬件、操作系统的方式呈现文档的文件格式。是一种富文本格式。独立特性使得 PDF 成为最通用的电子书格式，可以在大屏设备上很方便地阅读而不用担心信息遗失或遭修改。但这也意味着不可重排，所以不太适合小屏设备阅读。所以我们把 .pdf 格式作为第二选择。</p><p>mobi, azw(3)：亚马逊电子书私有格式，是富文本格式，Kindle 阅读器支持以上三种格式。本着开源与自由的精神，不推荐这些格式。</p><p>txt：最简单的的文本，非富文本格式。由于功能单一，不推荐这一格式。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;XML&quot;&gt;&lt;a href=&quot;#XML&quot; class=&quot;headerlink&quot; title=&quot;XML&quot;&gt;&lt;/a&gt;XML&lt;/h2&gt;&lt;p&gt;• XML是指可扩展标记语言(Xtensible Markup Language),它是一种标记语言，html是用于显示数据，xml</summary>
      
    
    
    
    <category term="技术" scheme="https://wenkex.gitee.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="数据格式" scheme="https://wenkex.gitee.io/tags/%E6%95%B0%E6%8D%AE%E6%A0%BC%E5%BC%8F/"/>
    
  </entry>
  
</feed>
