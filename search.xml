<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>window终端</title>
      <link href="/2022/030155434.html"/>
      <url>/2022/030155434.html</url>
      
        <content type="html"><![CDATA[<h1 id="Windows-Terminal"><a href="#Windows-Terminal" class="headerlink" title="Windows Terminal"></a>Windows Terminal</h1><p>是管理各种命令行的工具，它把目前 Windows 上的 PowerShell、CMD 以及 Windows Linux 子系统（WSL）三大环境实现了统一。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>打开系统自带的 Microsoft Store，搜索 Windows Terminal 直接安装就可以了。</p><h1 id="PowerShell"><a href="#PowerShell" class="headerlink" title="PowerShell"></a>PowerShell</h1><p>是命令行程序，真正执行指令的程序，</p><h2 id="在-Windows-上安装-PowerShell"><a href="#在-Windows-上安装-PowerShell" class="headerlink" title="在 Windows 上安装 PowerShell"></a>在 Windows 上安装 PowerShell</h2><p><a href="https://docs.microsoft.com/zh-cn/powershell/scripting/install/installing-powershell-on-windows?view=powershell-7.1">https://docs.microsoft.com/zh-cn/powershell/scripting/install/installing-powershell-on-windows?view=powershell-7.1</a></p><h2 id="安装-oh-my-posh-和-posh-git"><a href="#安装-oh-my-posh-和-posh-git" class="headerlink" title="安装 oh-my-posh 和 posh-git"></a>安装 oh-my-posh 和 posh-git</h2><p>oh-my-posh 是 PowerShell 主题管理工具<br>posh-git 可以实现类似 oh-my-zsh 一样的 Git 命令增强工具（命令别名和显示分支信息等）</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Install-Module posh-git</span><br><span class="line">Install-Module oh-my-posh</span><br></pre></td></tr></tbody></table></figure><h2 id="配置-PowerShell"><a href="#配置-PowerShell" class="headerlink" title="配置 PowerShell"></a>配置 PowerShell</h2><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 这是开启默认配置的</span><br><span class="line">Set-Prompt</span><br><span class="line"># 设置主题，Agnoster 是主题名</span><br><span class="line">Set-Theme Agnoster</span><br></pre></td></tr></tbody></table></figure><h1 id="美化"><a href="#美化" class="headerlink" title="美化"></a>美化</h1><h2 id="安装Scoop"><a href="#安装Scoop" class="headerlink" title="安装Scoop"></a>安装Scoop</h2><p>强大的 Windows 包管理工具 Scoop<br>Scoop 可以帮你一行命令安装 git 工具、java 环境、chrome 浏览器、vscode 等等，统一目录管理，而且自动配置环境变量，卸载也只需要一行命令，方便的不能在方便了<br>设置安装路径（可选）。默认 Scoop 是安装在 C 盘的，以及通过 Scoop 安装的软件也是在 C 盘的。如果你的 C 盘空间不够或想安装到其他盘，可以执行以下操作。</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 设置 scoop 安装路径为 D:\scoop</span><br><span class="line">$env:SCOOP='D:\scoop'</span><br><span class="line">[environment]::setEnvironmentVariable('SCOOP',$env:SCOOP,'User')</span><br></pre></td></tr></tbody></table></figure><p>安装 Scoop</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 将执行权限改为本地无需签名</span><br><span class="line">Set-ExecutionPolicy RemoteSigned -scope CurrentUser</span><br><span class="line"># 下载并执行脚本</span><br><span class="line">iwr -useb get.scoop.sh | iex</span><br></pre></td></tr></tbody></table></figure><h1 id="git-bash"><a href="#git-bash" class="headerlink" title="git bash"></a>git bash</h1><p>是Windows下的命令行工具。有git分布式版本控制工具，也主要用于git。</p><p>1 在windows下使用linux命令操作</p><p>2 登陆远程linux服务器&nbsp;ssh</p><h2 id="在window-terminal中添加git-bash"><a href="#在window-terminal中添加git-bash" class="headerlink" title="在window terminal中添加git bash"></a>在window terminal中添加git bash</h2><p><a href="https://www.cnblogs.com/cong-wang/p/15026535.html">https://www.cnblogs.com/cong-wang/p/15026535.html</a><br>打开设置文件settings.json，在profiles的list中添加一项：</p><figure class="highlight json"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">{</span><br><span class="line">  <span class="attr">"guid"</span> : <span class="string">"{5D1F95DF-36E8-56AD-C203-EA75CE06422C}"</span>,</span><br><span class="line">  <span class="attr">"name"</span> : <span class="string">"Git Bash"</span>,</span><br><span class="line">  <span class="attr">"commandline"</span> : <span class="string">"D:\\ruanjian\\Git\\bin\\bash.exe --login -i"</span>,</span><br><span class="line">  <span class="attr">"icon"</span> : <span class="string">"D:\\ruanjian\\Git\\git-bash.png"</span></span><br><span class="line">},</span><br></pre></td></tr></tbody></table></figure><p>guid：唯一标识本命令行配置，可以使用在线guid工具随机生成一个和list中其他配置不一样的guid即可<br>name：本命令行配置的名字，会显示在菜单中<br>commandline：表示怎么启动一个命令行，这里填的是”E:\Git\bin\bash.exe –login -i”，需要找到你的Git的安装目录，将E:\Git\bin\bash.exe替换成你自己的路径<br>icon：显示在菜单中的图标</p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 待分 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux</title>
      <link href="/2022/022615691.html"/>
      <url>/2022/022615691.html</url>
      
        <content type="html"><![CDATA[<p><a href="https://mp.weixin.qq.com/s/MP6gWfkyKaBLNCpEOHhk_g">使用linux的好处</a></p><h1 id="使用linux的好处"><a href="#使用linux的好处" class="headerlink" title="使用linux的好处"></a>使用linux的好处</h1><h2 id="Linux-是优雅的"><a href="#Linux-是优雅的" class="headerlink" title="Linux 是优雅的"></a>Linux 是优雅的</h2><p>在 linux 下，apt install 或者 yum install 之类的命令，就能搞定整个软件安装。</p><p>Linux 不需要选择软件是放 c 盘还是 d 盘，已经定义好了哪些文件该放在哪些地方，<br>不需要杀毒软件，不需要清理垃圾，不需要释放内存，不需要激活系统，它是开源免费的，不需要磁盘优化，没有烦人的弹窗，没有强制更新。</p><h2 id="Linux-是高效的"><a href="#Linux-是高效的" class="headerlink" title="Linux 是高效的"></a>Linux 是高效的</h2><p>命令行不是一种落后的操控计算机的方式。相反，它一直很高效且富有表达性。<br>当你想要复制、剪切或删除一个文件时，我相信打开文件管理器在不同窗口之间跳转是没有一条命令来得快。</p><p>当你想要查看系统运行状态，我相信移动鼠标，右键，选择任务管理器是没有一条命令来得快。</p><p>当你想要编写一个简单的脚本或文件时，我相信打开编辑器，新建文件，编写，选择文件位置保存是没有一条命令来得快。<br>…<br>鼠标是很好的工具，但是它有它的局限，毕竟它只有三个按钮。而命令行中使用参数的表达力是无穷的。</p><p>减少使用鼠标</p><p>通过命令行，浏览器的 Vimium 插件（类似于 Vim 的方式操作浏览器界面），Albert（通过指定按键唤出一个输入框，可以打开 app ， 文件 ，url ，直接搜索 ，计算器 …），系统快捷键再加上IDEA（它的设计思想是键盘优先）我能够很少的使用鼠标。</p><p>当然不是鼠标烫手，当你的双手在键盘上飞快的敲打时，直接使用键盘是比右手挪到鼠标上再挪回来要快的，而且这种不中断的体验非常舒畅。</p><p>至于这为什么是 linux 的优点，在我过去多年的 Windows 使用经验中，我没有找到自定义系统快捷键的入口，更不用说自定义宏了。Windows 当然也有命令行，不过我认为它的命令丰富程度和各个命令之间的配合是不如 linux 的（有人称之为附属品）。</p><p>减少重复劳动</p><p>我有一个文件夹，专门存放着我写的各式各样的脚本。大部分时候，你的问题市面上的软件都可以解决，但是当有一些细碎、独特、重复的小任务时。脚本能够帮你很好的解决这些。</p><p>比如，我有一个监控生产环境的脚本（其实应该是项目本身自带的），有一个OA守护脚本（其实就是监控我有没有写日报，没有的话发个短信提醒我），甚至还有一个定时发送微信的脚本…</p><p>这些脚本能一定程度的解决信息世界的重复劳动，让我更专注于具有创造性的工作上。</p><h2 id="启动速度"><a href="#启动速度" class="headerlink" title="启动速度"></a>启动速度</h2><p>在我的电脑上，无论是从系统启动速度，还是软件（IDEA，Chrome）启动速度都略胜 Windows 一筹。</p><p>使用经验所得，未有准确测试数据。不过IDEA是测过的，快了一秒多</p><h1 id="WSL2"><a href="#WSL2" class="headerlink" title="WSL2"></a>WSL2</h1><p><a href="https://docs.microsoft.com/zh-cn/windows/wsl/">官方文档</a></p><h2 id="WSL2安装"><a href="#WSL2安装" class="headerlink" title="WSL2安装"></a>WSL2安装</h2><p>WSL2采用在Hyper-V虚拟机中运行的方案,实现了与 windows 的高度集成,wsl2 的开启速度有了非常明显的提升，几乎无需等待。</p><p>启用适用于 Linux 的 Windows 子系统</p><p><code>dism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart</code></p><p>启用虚拟机平台功能</p><p><code>dism.exe /online /enable-feature /featurename:VirtualMachinePlatform /all /norestart</code></p><p>以管理者模式进入cmd安装<br><code>wsl --install</code> </p><p>切换WSL的默认版本为WSL2。<br><code>wsl --set-default-version 2 </code></p><p>以管理者cmd进行更新操作<br><code>wsl --update</code> </p><p>重启，更新才能生效<br><code>wsl --shutdown</code></p><p>Microsoft Store 中找一个 Linux 发行版进行安装</p><p>查看系统版本<br><code>wsl -l -v</code></p><h2 id="wsl2修改默认安装目录到其他盘"><a href="#wsl2修改默认安装目录到其他盘" class="headerlink" title="wsl2修改默认安装目录到其他盘"></a>wsl2修改默认安装目录到其他盘</h2><ol><li>查看已安装的linux发行版本<br> <code>wsl -l --all -v</code></li><li> 导出分发版为tar文件到d盘<br><code>wsl --export Ubuntu d:\wsl-ubuntu.tar</code></li><li>注销当前分发版<br><code>wsl --unregister Ubuntu</code></li><li>重新导入并安装WSL在D盘<br><code>wsl --import Ubuntu "d:\wsl-ubuntu" "d:\wsl-ubuntu.tar"  </code></li><li>设置默认登陆用户为安装时用户名<br><code>ubuntu config --default-user USERNAME</code></li><li>删除wsl-ubuntu20.04.tar<br><code>del d:\wsl-ubuntu.tar</code></li></ol><h2 id="设置-Linux-用户名和密码"><a href="#设置-Linux-用户名和密码" class="headerlink" title="设置 Linux 用户名和密码"></a>设置 Linux 用户名和密码</h2><p>若要更改或重置密码，请打开 Linux 发行版并输入命令：<code>passwd</code><br>如果忘记了 Linux 分发版的密码：<br>1.请打开 PowerShell，并使用以下命令进入默认 WSL 分发版的根目录：wsl -u root</p><p>如果需要在非默认分发版中更新忘记的密码，请使用命令：wsl -d Debian -u root，并将 Debian 替换为目标分发版的名称。</p><p>2.在 PowerShell 内的根级别打开 WSL 发行版后，可使用此命令更新密码：passwd <username>，其中 <username> 是发行版中帐户的用户名，而你忘记了它的密码。</username></username></p><h2 id="关闭虚拟机"><a href="#关闭虚拟机" class="headerlink" title="关闭虚拟机"></a>关闭虚拟机</h2><p>WSL2实际上是在虚拟机中运行。我们一旦进入WSL2 Linux的命令行，虚拟机会自动启动运行。如果我们查看任务管理器，会发现一个Vmmem进程,它比较占内存。不使用WSL2的时候我们可以关闭它以节省内存。关闭WSL2 Linux的方法如下。使用管理员打开CMD，运行：<code>wsl --shutdown</code></p><h2 id="为发行版linux更换国内源"><a href="#为发行版linux更换国内源" class="headerlink" title="为发行版linux更换国内源"></a>为发行版linux更换国内源</h2><p><a href="https://blog.csdn.net/weixin_41529012/article/details/117226884">https://blog.csdn.net/weixin_41529012/article/details/117226884</a></p><p>打开\wsl.localhost\Ubuntu\etc\apt地址下的sources.list文件，更改国内源<br>中科大</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">deb https://mirrors.ustc.edu.cn/ubuntu/ bionic main restricted universe multiverse</span><br><span class="line">deb-src https://mirrors.ustc.edu.cn/ubuntu/ bionic main restricted universe multiverse</span><br><span class="line">deb https://mirrors.ustc.edu.cn/ubuntu/ bionic-updates main restricted universe multiverse</span><br><span class="line">deb-src https://mirrors.ustc.edu.cn/ubuntu/ bionic-updates main restricted universe multiverse</span><br><span class="line">deb https://mirrors.ustc.edu.cn/ubuntu/ bionic-backports main restricted universe multiverse</span><br><span class="line">deb-src https://mirrors.ustc.edu.cn/ubuntu/ bionic-backports main restricted universe multiverse</span><br><span class="line">deb https://mirrors.ustc.edu.cn/ubuntu/ bionic-security main restricted universe multiverse</span><br><span class="line">deb-src https://mirrors.ustc.edu.cn/ubuntu/ bionic-security main restricted universe multiverse</span><br><span class="line">deb https://mirrors.ustc.edu.cn/ubuntu/ bionic-proposed main restricted universe multiverse</span><br><span class="line">deb-src https://mirrors.ustc.edu.cn/ubuntu/ bionic-proposed main restricted universe multiverse</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>更新镜像源列表</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update &amp;&amp; sudo apt upgrade</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h2 id="wsl2中linux与window间的文件操作"><a href="#wsl2中linux与window间的文件操作" class="headerlink" title="wsl2中linux与window间的文件操作"></a>wsl2中linux与window间的文件操作</h2><h2 id="使用-Visual-Studio-Code"><a href="#使用-Visual-Studio-Code" class="headerlink" title="使用 Visual Studio Code"></a>使用 Visual Studio Code</h2><p>安装Remote Development扩展包<br>除了 Remote - SSH 和 Remote - Containers 扩展之外，此扩展包还包含 Remote - WSL 扩展，使你能够打开容器中、远程计算机上或 WSL 中的任何文件夹。</p><h3 id="在-Visual-Studio-Code-中打开-WSL-项目"><a href="#在-Visual-Studio-Code-中打开-WSL-项目" class="headerlink" title="在 Visual Studio Code 中打开 WSL 项目"></a>在 Visual Studio Code 中打开 WSL 项目</h3><p>1.从 WSL 发行版打开项目，请打开发行版的命令行并输入：code .</p><p>从 VS Code 中打开项目，通过使用 VS Code 中的快捷方式 CTRL+SHIFT+P 调出命令面板，以访问更多 VS Code 远程选项。 如果随后键入 Remote-WSL，将看到可用的 VS Code 远程选项列表，使你可以在远程会话中重新打开文件夹，指定要在哪个发行版中打开，等等。</p><h2 id="使用数据库"><a href="#使用数据库" class="headerlink" title="使用数据库"></a>使用数据库</h2><p>安装 MySQL：<br><code>sudo apt install mysql-server</code><br>确认安装并获取版本号：<br><code>mysql --version</code></p><p>若要在 VS Code 中使用 MySQL 数据库，请尝试使用 MySQL 扩展</p><h2 id="Docker-远程容器入门"><a href="#Docker-远程容器入门" class="headerlink" title="Docker 远程容器入门"></a>Docker 远程容器入门</h2><p>1.下载 <a href="https://docs.docker.com/desktop/windows/wsl/">Docker Desktop</a> 并按照安装说明进行操作。</p><p>2.安装后，从 Windows 开始菜单启动 Docker Desktop，然后从任务栏的隐藏图标菜单中选择 Docker 图标。 右键单击该图标以显示 Docker 命令菜单，然后选择“设置”。</p><p>3.确保在“设置”“常规”中选中“使用基于 WSL 2 的引擎”。</p><p>4.通过转到“设置”“资源”“WSL 集成”，从要启用 Docker 集成的已安装 WSL 2 发行版中进行选择。</p><p>5.若要确认已安装 Docker，请打开 WSL 发行版（例如 Ubuntu），并通过输入 docker –version 来显示版本和内部版本号</p><p>6.通过使用 docker run hello-world 运行简单的内置 Docker 映像，测试安装是否正常工作</p><h3 id="使用-VS-Code-在远程容器中开发"><a href="#使用-VS-Code-在远程容器中开发" class="headerlink" title="使用 VS Code 在远程容器中开发"></a>使用 VS Code 在远程容器中开发</h3><p>安装 VS Code Remote-WSL 扩展。 此扩展使你能够在 VS Code 中打开在 WSL 上运行的 Linux 项目（无需担心路径问题、二进制兼容性或其他跨 OS 的难题）。</p><p>安装 VS code Remote-Containers 扩展。 此扩展使你能够打开容器内的项目文件夹或存储库，并利用 Visual Studio Code 的完整功能集在容器中执行开发工作。</p><p>安装 VS Code Docker 扩展。 此扩展添加了从 VS Code 内生成、管理和部署容器化应用程序的功能。 （需要 Remote-Container 扩展才能实际使用容器作为开发环境。）</p><h2 id="安装-Node-js"><a href="#安装-Node-js" class="headerlink" title="安装 Node.js"></a>安装 Node.js</h2><h1 id="基于VMware使用linux"><a href="#基于VMware使用linux" class="headerlink" title="基于VMware使用linux"></a>基于VMware使用linux</h1><h2 id="VMWare-和-Hyper-V-共存"><a href="#VMWare-和-Hyper-V-共存" class="headerlink" title="VMWare 和 Hyper-V 共存"></a>VMWare 和 Hyper-V 共存</h2><p>将 Windows 版本升级到 Windows 10 20H1 或更高版本。<br>将 VMWare Workstation/Player 升级到 15.5.5 或更高版本<br>在安装时，勾选“自动安装 Windows Hypervisor Platform (WHP)”。<br>打开虚拟机的设置选项，找到“处理器”，去掉如图所示的三个选项前面的钩，点击“确定”</p><h2 id="网络连接方式"><a href="#网络连接方式" class="headerlink" title="网络连接方式"></a>网络连接方式</h2><p>NAT模式（默认）：网络地址转换方式，linux可以访问外网，不会造成ip冲突</p><p>桥接模式：可以与其它系统进行通信，但可能造成ip冲突</p><p>主机模式：你的Linux是一个独立的主机，不能访问外网</p><h1 id="xshell"><a href="#xshell" class="headerlink" title="xshell"></a>xshell</h1><p>XShell是一个强大的安全终端模拟软件,可以在Windows界面下用来访问远端不同系统下的服务器，从而比较好的达到远程控制终端的目的。<br><a href="https://xshell.en.softonic.com/">安装</a><br><a href="https://www.jianshu.com/p/4716cc35750f">参考</a></p><h2 id="远程连接"><a href="#远程连接" class="headerlink" title="远程连接"></a>远程连接</h2><p>选择导航菜单的文件 –&gt; 新建，输入名称和主机IP，协议默认SSH，端口默认22，如果不知道主机IP可以登录虚拟机的Linux系统，输入命令ifconfig查看(inet addr)</p><p>然后在左侧用户身份验证中输入用户名和密码，这样下次就可以直接连接了，当然如果为了安全考虑也可以不输入密码，在每次连接时再输入。</p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>图像相关</title>
      <link href="/2022/022126260.html"/>
      <url>/2022/022126260.html</url>
      
        <content type="html"><![CDATA[<h1 id="怎么看手机分辨率"><a href="#怎么看手机分辨率" class="headerlink" title="怎么看手机分辨率"></a>怎么看手机分辨率</h1><p>上网查自己手机型号<br>查看自己手机截图信息的尺寸即分辨率</p><h1 id="怎么将图片改成自己想要的尺寸"><a href="#怎么将图片改成自己想要的尺寸" class="headerlink" title="怎么将图片改成自己想要的尺寸"></a>怎么将图片改成自己想要的尺寸</h1>]]></content>
      
      
      <categories>
          
          <category> 知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 待分 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据结构</title>
      <link href="/2022/02191106.html"/>
      <url>/2022/02191106.html</url>
      
        <content type="html"><![CDATA[<p><a href="https://mp.weixin.qq.com/s/ZVwIUN-xf9FuxOFXW8H3Nw">原文</a></p><p>对于一个成熟的程序员而言，熟悉和掌握数据结构和算法也是基本功之一。数据结构本身其实不过是数据按照特点关系进行存储或者组织的集合，特殊的结构在不同的应用场景中往往会带来不一样的处理效率。</p><h1 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h1><p>数组可以说是最基本最常见的数据结构。数组一般用来存储相同类型的数据，可通过数组名和下标进行数据的访问和更新。数组中元素的存储是按照先后顺序进行的，同时在内存中也是按照这个顺序进行连续存放。数组相邻元素之间的内存地址的间隔一般就是数组数据类型的大小。</p><p>图片</p><h1 id="链表"><a href="#链表" class="headerlink" title="链表"></a>链表</h1><p>链表相较于数组，除了数据域，还增加了指针域用于构建链式的存储数据。链表中每一个节点都包含此节点的数据和指向下一节点地址的指针。由于是通过指针进行下一个数据元素的查找和访问，使得链表的自由度更高。</p><p>这表现在对节点进行增加和删除时，只需要对上一节点的指针地址进行修改，而无需变动其它的节点。不过事物皆有两极，指针带来高自由度的同时，自然会牺牲数据查找的效率和多余空间的使用。</p><p>一般常见的是有头有尾的单链表，对指针域进行反向链接，还可以形成双向链表或者循环链表。</p><p>图片</p><p>链表和数组对比<br>链表和数组在实际的使用过程中需要根据自身的优劣势进行选择。链表和数组的异同点也是面试中高频的考察点之一。这里对单链表和数组的区别进行了对比和总结。</p><p>图片</p><h1 id="跳表"><a href="#跳表" class="headerlink" title="跳表"></a>跳表</h1><p>从上面的对比中可以看出，链表虽然通过增加指针域提升了自由度，但是却导致数据的查询效率恶化。特别是当链表长度很长的时候，对数据的查询还得从头依次查询，这样的效率会更低。跳表的产生就是为了解决链表过长的问题，通过增加链表的多级索引来加快原始链表的查询效率。这样的方式可以让查询的时间复杂度从O(n)提升至O(logn)。</p><p>图片</p><p>跳表通过增加的多级索引能够实现高效的动态插入和删除，其效率和红黑树和平衡二叉树不相上下。目前redis和levelDB都有用到跳表。</p><p>从上图可以看出，索引级的指针域除了指向下一个索引位置的指针，还有一个down指针指向低一级的链表位置，这样才能实现跳跃查询的目的。</p><h1 id="栈"><a href="#栈" class="headerlink" title="栈"></a>栈</h1><p>栈是一种比较简单的数据结构，常用一句话描述其特性，后进先出。栈本身是一个线性表，但是在这个表中只有一个口子允许数据的进出。这种模式可以参考腔肠动物…即进食和排泄都用一个口…</p><p>栈的常用操作包括入栈push和出栈pop，对应于数据的压入和压出。还有访问栈顶数据、判断栈是否为空和判断栈的大小等。由于栈后进先出的特性，常可以作为数据操作的临时容器，对数据的顺序进行调控，与其它数据结构相结合可获得许多灵活的处理。</p><p>图片</p><h1 id="队列"><a href="#队列" class="headerlink" title="队列"></a>队列</h1><p>队列是栈的兄弟结构，与栈的后进先出相对应，队列是一种先进先出的数据结构。顾名思义，队列的数据存储是如同排队一般，先存入的数据先被压出。常与栈一同配合，可发挥最大的实力。</p><p>图片</p><h1 id="树"><a href="#树" class="headerlink" title="树"></a>树</h1><p>树作为一种树状的数据结构，其数据节点之间的关系也如大树一样，将有限个节点根据不同层次关系进行排列，从而形成数据与数据之间的父子关系。常见的数的表示形式更接近“倒挂的树”，因为它将根朝上，叶朝下。</p><p>树的数据存储在结点中，每个结点有零个或者多个子结点。没有父结点的结点在最顶端，成为根节点；没有非根结点有且只有一个父节点；每个非根节点又可以分为多个不相交的子树。</p><p>这意味着树是具备层次关系的，父子关系清晰，家庭血缘关系明朗；这也是树与图之间最主要的区别。</p><p>图片</p><p>别看树好像很高级，其实可看作是链表的高配版。树的实现就是对链表的指针域进行了扩充，增加了多个地址指向子结点。同时将“链表”竖起来，从而凸显了结点之间的层次关系，更便于分析和理解。</p><p>树可以衍生出许多的结构，若将指针域设置为双指针，那么即可形成最常见的二叉树，即每个结点最多有两个子树的树结构。二叉树根据结点的排列和数量还可进一度划分为完全二叉树、满二叉树、平衡二叉树、红黑树等。</p><p>图片</p><p>完全二叉树：除了最后一层结点，其它层的结点数都达到了最大值；同时最后一层的结点都是按照从左到右依次排布。</p><p>满二叉树：除了最后一层，其它层的结点都有两个子结点。</p><p>平衡二叉树<br>平衡二叉树又被称为AVL树，它是一棵二叉排序树，且具有以下性质：它是一棵空树或它的左右两个子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树。</p><p>二叉排序树：是一棵空树，或者：若它的左子树不空，则左子树上所有结点的值均小于它的根结点的值；若它的右子树不空，则右子树上所有结点的值均大于它的根结点的值；它的左、右子树也分别为二叉排序树。</p><p>树的高度：结点层次的最大值</p><p>平衡因子：左子树高度 - 右子树高度</p><p>二叉排序树意味着二叉树中的数据是排好序的，顺序为左结点&lt;根节点&lt;右结点，这表明二叉排序树的中序遍历结果是有序的。（还不懂二叉树四种遍历方式[前序遍历、中序遍历、后序遍历、层序遍历]的同学赶紧补习！）</p><p>图片</p><p>平衡二叉树的产生是为了解决二叉排序树在插入时发生线性排列的现象。由于二叉排序树本身为有序，当插入一个有序程度十分高的序列时，生成的二叉排序树会持续在某个方向的字数上插入数据，导致最终的二叉排序树会退化为链表，从而使得二叉树的查询和插入效率恶化。</p><p>图片</p><p>平衡二叉树的出现能够解决上述问题，但是在构造平衡二叉树时，却需要采用不同的调整方式，使得二叉树在插入数据后保持平衡。主要的四种调整方式有LL（左旋）、RR（右旋）、LR（先左旋再右旋）、RL（先右旋再左旋）。这里先给大家介绍下简单的单旋转操作，左旋和右旋。LR和RL本质上只是LL和RR的组合。</p><p>在插入一个结点后应该沿搜索路径将路径上的结点平衡因子进行修改，当平衡因子大于1时，就需要进行平衡化处理。从发生不平衡的结点起，沿刚才回溯的路径取直接下两层的结点，如果这三个结点在一条直线上，则采用单旋转进行平衡化，如果这三个结点位于一条折线上，则采用双旋转进行平衡化。</p><p>左旋：S为当前需要左旋的结点，E为当前结点的父节点。</p><p>图片</p><p>左旋的操作可以用一句话简单表示：将当前结点S的左孩子旋转为当前结点父结点E的右孩子，同时将父结点E旋转为当前结点S的左孩子。可用动画表示：</p><p>图片</p><p>右旋：S为当前需要左旋的结点，E为当前结点的父节点。右单旋是左单旋的镜像旋转。</p><p>图片</p><p>左旋的操作同样可以用一句话简单表示：将当前结点S的左孩子E的右孩子旋转为当前结点S的左孩子，同时将当前结点S旋转为左孩子E的右孩子。可用动画表示：</p><p>图片</p><p>红黑树<br>平衡二叉树（AVL）为了追求高度平衡，需要通过平衡处理使得左右子树的高度差必须小于等于1。高度平衡带来的好处是能够提供更高的搜索效率，其最坏的查找时间复杂度都是O(logN)。但是由于需要维持这份高度平衡，所付出的代价就是当对树种结点进行插入和删除时，需要经过多次旋转实现复衡。这导致AVL的插入和删除效率并不高。</p><p>为了解决这样的问题，能不能找一种结构能够兼顾搜索和插入删除的效率呢？这时候红黑树便申请出战了。</p><p>红黑树具有五个特性：</p><p>每个结点要么是红的要么是黑的。<br>根结点是黑的。<br>每个叶结点（叶结点即指树尾端NIL指针或NULL结点）都是黑的。<br>如果一个结点是红的，那么它的两个儿子都是黑的。<br>对于任意结点而言，其到叶结点树尾端NIL指针的每条路径都包含相同数目的黑结点。<br>图片红黑树通过将结点进行红黑着色，使得原本高度平衡的树结构被稍微打乱，平衡程度降低。红黑树不追求完全平衡，只要求达到部分平衡。这是一种折中的方案，大大提高了结点删除和插入的效率。C++中的STL就常用到红黑树作为底层的数据结构。</p><p>红黑树VS平衡二叉树<br>图片</p><p>除了上面所提及的树结构，还有许多广泛应用在数据库、磁盘存储等场景下的树结构。比如B树、B+树等。这里就先不介绍了诶，下次在讲述相关存储原理的时候将会着重介绍。（其实是因为懒）</p><p> 7  堆<br>了解完二叉树，再来理解堆就不是什么难事了。堆通常是一个可以被看做一棵树的数组对象。堆的具体实现一般不通过指针域，而是通过构建一个一维数组与二叉树的父子结点进行对应，因此堆总是一颗完全二叉树。</p><p>对于任意一个父节点的序号n来说（这里n从0算），它的子节点的序号一定是2n+1，2n+2，因此可以直接用数组来表示一个堆。</p><p>不仅如此，堆还有一个性质：堆中某个节点的值总是不大于或不小于其父节点的值。将根节点最大的堆叫做最大堆或大根堆，根节点最小的堆叫做最小堆或小根堆。</p><p>图片</p><p>堆常用来实现优先队列，在面试中经常考的问题都是与排序有关，比如堆排序、topK问题等。由于堆的根节点是序列中最大或者最小值，因而可以在建堆以及重建堆的过程中，筛选出数据序列中的极值，从而达到排序或者挑选topK值的目的。</p><p> 8  散列表<br>散列表也叫哈希表，是一种通过键值对直接访问数据的机构。在初中，我们就学过一种能够将一个x值通过一个函数获得对应的一个y值的操作，叫做映射。散列表的实现原理正是映射的原理，通过设定的一个关键字和一个映射函数，就可以直接获得访问数据的地址，实现O(1)的数据访问效率。在映射的过程中，事先设定的函数就是一个映射表，也可以称作散列函数或者哈希函数。</p><p>图片</p><p>散列表的实现最关键的就是散列函数的定义和选择。一般常用的有以下几种散列函数：</p><p>直接寻址法：取关键字或关键字的某个线性函数值为散列地址。</p><p>数字分析法：通过对数据的分析，发现数据中冲突较少的部分，并构造散列地址。例如同学们的学号，通常同一届学生的学号，其中前面的部分差别不太大，所以用后面的部分来构造散列地址。</p><p>平方取中法：当无法确定关键字里哪几位的分布相对比较均匀时，可以先求出关键字的平方值，然后按需要取平方值的中间几位作为散列地址。这是因为：计算平方之后的中间几位和关键字中的每一位都相关，所以不同的关键字会以较高的概率产生不同的散列地址。</p><p>取随机数法：使用一个随机函数，取关键字的随机值作为散列地址，这种方式通常用于关键字长度不同的场合。</p><p>除留取余法：取关键字被某个不大于散列表的表长 n 的数 m 除后所得的余数 p 为散列地址。这种方式也可以在用过其他方法后再使用。该函数对 m 的选择很重要，一般取素数或者直接用 n。</p><p>确定好散列函数之后，通过某个key值的确会得到一个唯一的value地址。但是却会出现一些特殊情况。即通过不同的key值可能会访问到同一个地址，这个现象称之为冲突。</p><p>冲突在发生之后，当在对不同的key值进行操作时会使得造成相同地址的数据发生覆盖或者丢失，是非常危险的。所以在设计散列表往往还需要采用冲突解决的办法。</p><p>常用的冲突处理方式有很多，常用的包括以下几种：</p><p>开放地址法（也叫开放寻址法）：实际上就是当需要存储值时，对Key哈希之后，发现这个地址已经有值了，这时该怎么办？不能放在这个地址，不然之前的映射会被覆盖。这时对计算出来的地址进行一个探测再哈希，比如往后移动一个地址，如果没人占用，就用这个地址。如果超过最大长度，则可以对总长度取余。这里移动的地址是产生冲突时的增列序量。</p><p>再哈希法：在产生冲突之后，使用关键字的其他部分继续计算地址，如果还是有冲突，则继续使用其他部分再计算地址。这种方式的缺点是时间增加了。</p><p>链地址法：链地址法其实就是对Key通过哈希之后落在同一个地址上的值，做一个链表。其实在很多高级语言的实现当中，也是使用这种方式处理冲突的。</p><p>公共溢出区：这种方式是建立一个公共溢出区，当地址存在冲突时，把新的地址放在公共溢出区里。</p><p>目前比较常用的冲突解决方法是链地址法，一般可以通过数组和链表的结合达到冲突数据缓存的目的。</p><p>图片</p><p>左侧数组的每个成员包括一个指针，指向一个链表的头。每发生一个冲突的数据，就将该数据作为链表的节点链接到链表尾部。这样一来，就可以保证冲突的数据能够区分并顺利访问。<br>考虑到链表过长造成的问题，还可以使用红黑树替换链表进行冲突数据的处理操作，来提高散列表的查询稳定性。</p><p> 9  图<br>图相较于上文的几个结构可能接触的不多，但是在实际的应用场景中却经常出现。比方说交通中的线路图，常见的思维导图都可以看作是图的具体表现形式。</p><p>图结构一般包括顶点和边，顶点通常用圆圈来表示，边就是这些圆圈之间的连线。边还可以根据顶点之间的关系设置不同的权重，默认权重相同皆为1。此外根据边的方向性，还可将图分为有向图和无向图。</p><p>图片</p><p>图结构用抽象的图线来表示十分简单，顶点和边之间的关系非常清晰明了。但是在具体的代码实现中，为了将各个顶点和边的关系存储下来，却不是一件易事。</p><p>邻接矩阵<br>目前常用的图存储方式为邻接矩阵，通过所有顶点的二维矩阵来存储两个顶点之间是否相连，或者存储两顶点间的边权重。</p><p>图片</p><p>无向图的邻接矩阵是一个对称矩阵，是因为边不具有方向性，若能从此顶点能够到达彼顶点，那么彼顶点自然也能够达到此顶点。此外，由于顶点本身与本身相连没有意义，所以在邻接矩阵中对角线上皆为0。</p><p>图片</p><p>有向图由于边具有方向性，因此彼此顶点之间并不能相互达到，所以其邻接矩阵的对称性不再。<br>用邻接矩阵可以直接从二维关系中获得任意两个顶点的关系，可直接判断是否相连。但是在对矩阵进行存储时，却需要完整的一个二维数组。若图中顶点数过多，会导致二维数组的大小剧增，从而占用大量的内存空间。</p><p>而根据实际情况可以分析得，图中的顶点并不是任意两个顶点间都会相连，不是都需要对其边上权重进行存储。那么存储的邻接矩阵实际上会存在大量的0。虽然可以通过稀疏表示等方式对稀疏性高的矩阵进行关键信息的存储，但是却增加了图存储的复杂性。</p><p>因此，为了解决上述问题，一种可以只存储相连顶点关系的邻接表应运而生。</p><p>邻接表<br>在邻接表中，图的每一个顶点都是一个链表的头节点，其后连接着该顶点能够直接达到的相邻顶点。相较于无向图，有向图的情况更为复杂，因此这里采用有向图进行实例分析。</p><p>图片在邻接表中，每一个顶点都对应着一条链表，链表中存储的是顶点能够达到的相邻顶点。存储的顺序可以按照顶点的编号顺序进行。比如上图中对于顶点B来说，其通过有向边可以到达顶点A和顶点E，那么其对应的邻接表中的顺序即B-&gt;A-&gt;E，其它顶点亦如此。</p><p>通过邻接表可以获得从某个顶点出发能够到达的顶点，从而省去了对不相连顶点的存储空间。然而，这还不够。对于有向图而言，图中有效信息除了从顶点“指出去”的信息，还包括从别的顶点“指进来”的信息。这里的“指出去”和“指进来”可以用出度和入度来表示。</p><p>入度：有向图的某个顶点作为终点的次数和。</p><p>出度：有向图的某个顶点作为起点的次数和。</p><p>由此看出，在对有向图进行表示时，邻接表只能求出图的出度，而无法求出入度。这个问题很好解决，那就是增加一个表用来存储能够到达某个顶点的相邻顶点。这个表称作逆邻接表。</p><p>逆邻接表<br>逆邻接表与邻接表结构类似，只不过图的顶点链接着能够到达该顶点的相邻顶点。也就是说，邻接表时顺着图中的箭头寻找相邻顶点，而逆邻接表时逆着图中的箭头寻找相邻顶点。</p><p>图片</p><p>邻接表和逆邻接表的共同使用下，就能够把一个完整的有向图结构进行表示。可以发现，邻接表和逆邻接表实际上有一部分数据时重合的，因此可以将两个表合二为一，从而得到了所谓的十字链表。</p><p>十字链表<br>十字链表似乎很简单，只需要通过相同的顶点分别链向以该顶点为终点和起点的相邻顶点即可。</p><p>图片</p><p>但这并不是最优的表示方式。虽然这样的方式共用了中间的顶点存储空间，但是邻接表和逆邻接表的链表节点中重复出现的顶点并没有得到重复利用，反而是进行了再次存储。因此，上图的表示方式还可以进行进一步优化。</p><p>十字链表优化后，可通过扩展的顶点结构和边结构来进行正逆邻接表的存储：（下面的弧头可看作是边的箭头那端，弧尾可看作是边的圆点那端）</p><p>data：用于存储该顶点中的数据；</p><p>firstin指针：用于连接以当前顶点为弧头的其他顶点构成的链表，即从别的顶点指进来的顶点；</p><p>firstout指针：用于连接以当前顶点为弧尾的其他顶点构成的链表，即从该顶点指出去的顶点；</p><p>边结构通过存储两个顶点来确定一条边，同时通过分别代表这两个顶点的指针来与相邻顶点进行链接：</p><p>tailvex：用于存储作为弧尾的顶点的编号；</p><p>headvex：用于存储作为弧头的顶点的编号；</p><p>headlink 指针：用于链接下一个存储作为弧头的顶点的节点；</p><p>taillink 指针：用于链接下一个存储作为弧尾的顶点的节点；</p><p>图片</p><p>以上图为例子，对于顶点A而言，其作为起点能够到达顶点E。因此在邻接表中顶点A要通过边AE（即边04）指向顶点E，顶点A的firstout指针需要指向边04的tailvex。同时，从B出发能够到达A，所以在逆邻接表中顶点A要通过边AB（即边10）指向B，顶点A的firstin指针需要指向边10的弧头，即headlink指针。依次类推。</p><p>十字链表采用了一种看起来比较繁乱的方式对边的方向性进行了表示，能够在尽可能降低存储空间的情况下增加指针保留顶点之间的方向性。具体的操作可能一时间不好弄懂，建议多看几次上图，弄清指针指向的意义，明白正向和逆向邻接表的表示。</p><p> 10  总结<br>数据结构博大精深，没有高等数学的讳莫如深，也没有量子力学的玄乎其神，但是其在计算机科学的各个领域都具有强大的力量。本文试图采用图解的方式对九种数据结构进行理论上的介绍，但是其实这都是不够的。</p><p>即便是简单的数组、栈、队列等结构，在实际使用以及底层实现上都会有许多优化设计以及使用技巧，这意味着还需要真正把它们灵活的用起来，才能够算是真正意义上的熟悉和精通。但是本文可以作为常见数据结构的一个总结，当你对某些结构有些淡忘的时候，不妨重新回来看看。</p>]]></content>
      
      
      <categories>
          
          <category> 知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 待分 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微信小程序</title>
      <link href="/2022/012435506.html"/>
      <url>/2022/012435506.html</url>
      
        <content type="html"><![CDATA[<h1 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h1><p>pages用来存放所有小程序的页面<br>utils用来存放工具性质的模块(例如：格式化时间的自定义模块)<br>app. js小程序项目的入口文件<br>app.json小程序项目的全局配置文件<br>app.Wxss小程序项目的全局样式文件<br>project. config. json项目的配置文件<br>sitemap json用来配置小程序及其页面是否允许被微信索引 </p>]]></content>
      
      
      <categories>
          
          <category> 知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>自动化</title>
      <link href="/2022/012223479.html"/>
      <url>/2022/012223479.html</url>
      
        <content type="html"><![CDATA[<h1 id="Chrome-Recorder"><a href="#Chrome-Recorder" class="headerlink" title="Chrome Recorder"></a>Chrome Recorder</h1><p>自动化工具 </p><p>谷歌官方网页自动化神器<br><a href="https://testerhome.com/topics/31731">https://testerhome.com/topics/31731</a><br><a href="https://mp.weixin.qq.com/s/lLtR8Y9tlgVpvViXV14muw">https://mp.weixin.qq.com/s/lLtR8Y9tlgVpvViXV14muw</a></p>]]></content>
      
      
      <categories>
          
          <category> 知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 自动化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>window操作</title>
      <link href="/2022/012246677.html"/>
      <url>/2022/012246677.html</url>
      
        <content type="html"><![CDATA[<h1 id="输入法"><a href="#输入法" class="headerlink" title="输入法"></a>输入法</h1><h2 id="不认识的汉字怎么打"><a href="#不认识的汉字怎么打" class="headerlink" title="不认识的汉字怎么打"></a>不认识的汉字怎么打</h2><p>u+汉字各部分的拼音</p><h1 id="扩展屏幕"><a href="#扩展屏幕" class="headerlink" title="扩展屏幕"></a>扩展屏幕</h1><p>如何在笔记本盖上盖子时，扩展显示屏也能显示。<br>在设置中搜索打开控制面板，然后找到电源选项打开，找到选择关闭笔记本计算机盖的功能<br><img src="https://gitee.com/wenkex/blogimage/raw/master/Quicker_20220122_091908.png"></p><h1 id="文件无法删除"><a href="#文件无法删除" class="headerlink" title="文件无法删除"></a>文件无法删除</h1><p>解决Windows10中“其中文件夹或文件已在另一程序中打开”引起的文件删不掉问题</p><h2 id="打开任务管理器"><a href="#打开任务管理器" class="headerlink" title="打开任务管理器"></a>打开任务管理器</h2><h2 id="打开资源监视器"><a href="#打开资源监视器" class="headerlink" title="打开资源监视器"></a>打开资源监视器</h2><p>1.切换任务管理器到“性能”选项页，点击最下方的“打开资源监视器”字。<br><img src="https://gitee.com/wenkex/blogimage/raw/master/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20220104192240.png"><br>2.搜索与该文件关联的程序并关闭</p><p>以删除word文件“文件123.docx”为例：删除桌面上“文件123.docx”文件，显示该文件已被其他程序打开，暂时无法删除。</p><p>此时在资源监视器搜索句柄处填上文件123，即可搜索与这个文件相关联的应用程序句柄。<br><img src="https://gitee.com/wenkex/blogimage/raw/master/v2-48385ce4a09d453981e9b06b1202065d_r.jpg"><br>点击与文件123相关联的句柄，然后点击鼠标右键，选择结束进程<br>此时会弹出结束进程确认对话框。<br>点击“结束进程”关闭与“文件123.docx”关联的进程。</p><p>怎样关闭Win10安装软件、改变设置时的弹窗？<br>打开更改用户账户设置  </p><p>Windows系统hosts文件路径为：C:\Windows\System32\drivers\etc</p><p>Win10电脑设置定时关机命令：<br>Win +r  输入：shutdown -s -t 3600            一小时后关机</p><p>Win10进入开机自启文件夹<br>Win+r进入运行，输入shell:startup</p><h1 id="快捷键汇总"><a href="#快捷键汇总" class="headerlink" title="快捷键汇总"></a>快捷键汇总</h1><p>win+上下箭头键：【最大化】【还原】【最小化】当前窗口</p><p>win+左右箭头键：将窗口靠左、靠右。如果有两个窗口则并列</p><p>按住ctrl 可多选文件</p><p>Win+Shift+S 截图、</p><p>Win+g  截图录屏</p><p>在英文输入状态下，按住shift输入字母可以大写</p><p>按住alt双击文件   快速打开属性</p><p>Ctrl+shift+Esc 一键打开任务管理器</p><p>Ctrl +shift+n 快速新建文件夹</p><p>按住ctrl拖动文件 就是复制</p><p>Alt+F4键：关闭当前窗口，如果没有活动窗口就带开【关闭计算机】对话框</p><p>win+A键：快速打开【系统通知和控制中心】</p><p>Win+E键：快速打开【资源管理器】</p><p>win+G键：快速打开【Xbox工具】，这个工具非常实用，包含了截图、录屏等功能</p><p>win+I键：快速打开【计算机设置】</p><p>win+K键：快速打开【无线连接】</p><p>win+L键：快速【锁定屏幕】，如果你要暂时离开电脑，这个快捷键一定要知道</p><p>win+P键：快速打开【投影】，如果你要连接第二块屏幕或投影，这是最快捷的方法</p><p>win+Q键或者win+S键：快速打开【搜索】</p><p>win+R键：快速打开【运行】</p><p>win+T键：在【任务栏程序】中进行切换</p><p>win+V键：快速打开【剪贴板】</p><p>win+W键：快速打开【全屏截图】</p><p>win+X键：打开【系统快捷菜单】，这个菜单继承了巨大部分的系统功能。</p><p>win+数字键：打开【任务栏】上相应顺序的应用程序</p><p>win+加号：启动【放大镜】，加号放大，减号缩小</p><p>win+Tab键：打开【任务视图】，还可以按时间线查看近期任务</p><p>Alt+Tab键：在打开的程序间进行切换，这是笔者最常用的快捷键</p><h2 id="网页"><a href="#网页" class="headerlink" title="网页"></a>网页</h2><p>ctrl + w      关闭一个网页<br>Ctrl + Tab    切换网页<br>Ctrl+h 打开历史记录</p><h1 id="远程"><a href="#远程" class="headerlink" title="远程"></a>远程</h1><h2 id="微软自带的远程连接"><a href="#微软自带的远程连接" class="headerlink" title="微软自带的远程连接"></a>微软自带的远程连接</h2><p>联想小新pro16<br>win10专业版<br>两台设备都连着校园网，测试时，控制端不能连着电脑的热点。<br>控制端要下载：RDclient<br>成功后，你就可以不用带上你的电脑去机房上课了，直接在机房控制你的电脑，体验感翻倍</p><h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><p>1.window要用微软账号登录<br>2.用户名是自己设置的，可以是中文，打开图二密码中的更新安全问题选项也可以看到<br>3. 密码是你的账户密码，不是PIN码哦<br>4. 显示屏关闭后，微软远程就连接不上的原因</p><ul><li>联想小新pro16可能是因为开了智能感知功能的原因，因此显示屏关闭或者盖上屏幕，控制端就无法连接上电脑</li></ul><h3 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h3><p>打开远程桌面，win+r 输入mstsc<br>查询ip地址：win+r进入cmd,输入ipconfig</p><h2 id="ToDesk"><a href="#ToDesk" class="headerlink" title="ToDesk"></a>ToDesk</h2><p>ToDesk目前还是免费的且支持三台设备，而且界面简洁大气。</p><h2 id="向日葵"><a href="#向日葵" class="headerlink" title="向日葵"></a>向日葵</h2><p>特点<br>1.控制端和被控制端使用同一账号即可<br>2.可以实时查看远程主机摄像头周围的情况<br>3.方便快捷的让远程文件或本地文件互相传输和同步，安全稳定。<br>4.无需内网穿透即可实现外网连接。<br>需求<br>①是在需要被控的电脑上安装被控端;<br>②在手机上安装向日葵主控端<br>③注册一个向日葵账号。在两端同时登录就可以远程控制了。</p>]]></content>
      
      
      <categories>
          
          <category> 知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> window </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python自动化办公库</title>
      <link href="/2022/012151162.html"/>
      <url>/2022/012151162.html</url>
      
        <content type="html"><![CDATA[<p><a href="https://mp.weixin.qq.com/s/WYni01nzv2lbG4VK59U0nA">原文</a></p><h1 id="微信自动化库"><a href="#微信自动化库" class="headerlink" title="微信自动化库"></a>微信自动化库</h1><p>wxpy 库<br>官网：<br><a href="https://wxpy.readthedocs.io/zh/latest/">https://wxpy.readthedocs.io/zh/latest/</a></p><p>特点：微信机器人/可能是最优雅的微信个人号API，wxpy 在 itchat 的基础上，通过大量接口优化提升了模块的易用性，并进行丰富的功能扩展。<br>Excel自动化库</p><p>//  1.xlwings 库<br>官网：<br><a href="https://www.xlwings.org/">https://www.xlwings.org/</a></p><p>特点：xlwings 是开源且免费的，预装了 Anaconda 和 WinPython，可在 Windows 和 macOS 上运行。通过 Python 脚本或 Jupyter notebook 自动化 Excel，通过宏从 Excel 调用 Python，并编写用户定义的函数（UDF 仅适用于 Windows）</p><p>//  2.openpyxl 库<br>官网：<br><a href="https://openpyxl.readthedocs.io/">https://openpyxl.readthedocs.io</a></p><p>特点：openpyxl 是一个用于读取 / 编写 Excel 2010 xlsx/xlsm/xltx/xltm 文件的 Python 库。它是由于缺乏从 Python 中读取 / 编写 Office Open XML 格式的现有库而诞生的。</p><p>//  3.xlrd 库<br>官网：<br><a href="https://pypi.python.org/pypi/xlrd">https://pypi.python.org/pypi/xlrd</a></p><p>特点：在 python 中，xlrd 库是一个很常用的读取 excel 文件的库，其对 excel 文件的读取可以实现比较精细的控制。</p><p>//  4.xlwt 库<br>官网：<br><a href="https://pypi.org/project/xlwt/">https://pypi.org/project/xlwt/</a></p><p>特点：类比于 xlrd 的 reader，那么 xlwt 就相对于 writer，而且很纯正的一点就是它只能对 Excel 进行写操作。xlwt 和 xlrd 不光名字像，连很多函数和操作格式也是完全相同。</p><p>//  5.xlutils 库<br>官网：<br><a href="https://pypi.org/project/xlutils/">https://pypi.org/project/xlutils/</a></p><p>特点：xlutils（excel utilities）是一个提供了许多操作修改 excel 文件方法的库。xlutils 库也仅仅是通过复制一个副本进行操作后保存一个新文件，xlutils 库就像是 xlrd 库和 xlwt 库之间的一座桥梁，因此，xlutils 库是依赖于 xlrd 和 xlwt 两个库的。</p><p>//  6.xlsxwriter 库<br>官网：<br><a href="https://xlsxwriter.readthedocs.io/">https://xlsxwriter.readthedocs.io/</a></p><p>特点：xlsxwriter 是用于创建 Excel XLSX 文件的 Python 模块，可用于将文本、数字、公式和超链接写入 Excel2007 + XLSX 文件中的多个工作表。它支持格式化等功能。可以说除了 Excel 本身，就属这个功能最齐全了。</p><p>//  7.pandas 库<br>官网：<br><a href="https://www.pypandas.cn/docs/">https://www.pypandas.cn/docs/</a></p><p>特点：pandas 是基于 NumPy 的一种工具，该工具是为了解决数据分析任务而创建的。Pandas 纳入了大量库和一些标准的数据模型，提供了高效地操作大型数据集所需的工具。</p><p>//  8.Marmir 库<br>官网：<br><a href="https://github.com/brianray/mm">https://github.com/brianray/mm</a></p><p>特点：Marmir 采用 Python 数据结构并将其转换为电子表格。它是类固醇上的 xlwt 和 google 电子表格。目标是使用最少的配置轻松生成多种类型的有用表文件。</p><p>Python</p><p>Word自动化库</p><p>//  9.python-docx 库<br>官网：<br><a href="https://python-docx.readthedocs.io/en/latest/">https://python-docx.readthedocs.io/en/latest/</a></p><p>特点：python-docx 是一个用于创建和更新 Microsoft Word (.docx) 文件的 Python 库。快速开始、处理文档、处理文本、使用截面、使用页眉和页脚、API基础理、解样式、使用样式理解图片和其他形状。只对 windows 平台有效。</p><p>//  10.textract 库<br>官网：<br><a href="https://gitee.com/mirrors/textract">https://gitee.com/mirrors/textract</a></p><p>特点：它同时兼顾 “doc” 和 “docx”，但安装过程需要一些依赖。你可以批量的用 python 生成 word 文件，推荐使用 docx，不需要会太多。</p><p>Python</p><p>PPT自动化库</p><p>//  11.python-pptx 库<br>官网：<br><a href="https://python-pptx.readthedocs.io/">https://python-pptx.readthedocs.io</a></p><p>特点：python-pptx 是一个用于创建和更新 PowerPoint (.pptx) 文件的 Python 库。典型用途是从数据库内容生成自定义 PowerPoint 演示文稿，可通过单击 Web 应用程序中的链接下载。</p><p>Python</p><p>ODF自动化库</p><p>//  12.Relatorio 库<br>官网：<br><a href="https://pypi.org/project/relatorio/">https://pypi.org/project/relatorio/</a></p><p>特点：Relatorio 是一个模板库，它提供了一种轻松输出多种文件（odt、ods、png、svg 等）的方法。通过为它们创建插件可以轻松添加对更多文件类型的支持。Relatorio 还提供了一个报告存储库，允许您将 python 对象和报告链接在一起，按 mimetype/name/python 对象查找报告。ODF：开放文档格式（外文名：OpenDocument Format，外语简称：ODF）是一种规范，基于 XML（标准通用标记语言的子集）的文件格式，因应试算表、图表、演示稿和文字处理文件等电子文件而设置。</p><p>Python</p><p>PDF自动化库</p><p>//  13.PyPDF2 库<br>官网：<br><a href="https://github.com/mstamy2/PyPDF2">https://github.com/mstamy2/PyPDF2</a></p><p>特点：PyPDF2 是一个纯 Python PDF 库，能够拆分、合并、裁剪和转换 PDF 文件的页面。它还可以向 PDF 文件添加自定义数据、查看选项和密码。它可以从 PDF 中检索文本和元数据，也可以将整个文件合并在一起。</p><p>//  14.ReportLab 库<br>官网：<br><a href="https://www.reportlab.com/opensource/">https://www.reportlab.com/opensource/</a></p><p>特点：ReportLab 是久经考验、超强大的开源引擎，用于创建复杂的、数据驱动的 PDF 文档和自定义矢量图形。它是免费的、开源的，并且是用 Python 编写的。</p><p>//  15.PDFminer 库<br>官网：<br><a href="https://github.com/euske/pdfminer">https://github.com/euske/pdfminer</a></p><p>特点：PDFMiner 是一款用于 PDF 文档的文本提取工具。</p><p>Python</p><p>邮件自动化库</p><p>//  16.Django Celery SES 库<br>官网：<br><a href="https://github.com/StreetVoice/django-celery-ses">https://github.com/StreetVoice/django-celery-ses</a></p><p>特点：这个包提供了一个 EmailBackend 来利用 django-celery 发送电子邮件。您可以将 EmailBackend 插入您的项目中，而无需对代码进行任何修改。</p><p>//  17.Envelopes 库<br>官网：<br><a href="http://tomekwojcik.github.io/envelopes/">http://tomekwojcik.github.io/envelopes/</a></p><p>特点：Envelopes 是 Python 的电子邮件和 smtplib 模块的包装器。它旨在使在 Python 中处理外发电子邮件变得简单而有趣。</p><p>//  18.Flanker 库<br>官网：<br><a href="https://github.com/mailgun/flanker">https://github.com/mailgun/flanker</a></p><p>特点：由 mailgun 开源的 Flanker - email address and MIME parsing for Python 是一个解析高效、容错率不错的 python 第三方扩展库。python 3 也可以正常使用，该库包含了邮件地址解析和邮件 mime 格式解析。</p><p>//  19.imbox 库<br>官网：<br><a href="https://github.com/martinrusev/imbox">https://github.com/martinrusev/imbox</a></p><p>特点：用于读取 IMAP 邮箱并将电子邮件内容转换为机器可读数据的 Python 库</p><p>//  20.inbox.py 库<br>官网：<br><a href="https://github.com/billzhong/inbox.py">https://github.com/billzhong/inbox.py</a></p><p>特点：这是您见过的最简单的 SMTP 服务器。它是异步的。一个实例每秒应该处理一千多封电子邮件。</p><p>//  21.sync-engine 库<br>官网：<br><a href="https://github.com/nylas/sync-engine">https://github.com/nylas/sync-engine</a></p><p>特点：Nylas 同步引擎在强大的电子邮件同步平台之上提供了一个 RESTful API，可以轻松地在电子邮件之上构建应用程序。</p><p>//  22.Lamson 库<br>官网：<br><a href="https://github.com/zedshaw/lamson">https://github.com/zedshaw/lamson</a></p><p>特点：Lamson 是一个纯 Python SMTP 服务器，旨在以现代 Web 框架（如 Django）的风格创建强大而复杂的邮件应用程序。</p><p>//  23.Marrow Mailer 库<br>官网：<br><a href="https://github.com/marrow/mailer">https://github.com/marrow/mailer</a></p><p>特点：Marrow Mailer 是一个 Python 库，可以轻松地从您的应用程序发送电子邮件。通过使用 Marrow Mailer，您可以：轻松构建纯文本和 HTML 电子邮件；提高电子邮件传递的可测试性；使用不同的邮件投递管理策略；例如立即，延迟，甚至多服务器等。</p><p>//  24.Modoboa 库<br>官网：<br><a href="https://github.com/modoboa/modoboa">https://github.com/modoboa/modoboa</a></p><p>特点：Modoboa 是一个邮件托管和管理平台，包括一个现代和简化的 Web 用户界面。它提供了有用的组件，例如管理面板或网络邮件。</p><p>//  25.smtplib 库<br>官网：<br><a href="https://docs.python.org/zh-cn/3/library/smtplib.html">https://docs.python.org/zh-cn/3/library/smtplib.html</a></p><p>特点：smtplib 模块是 python 中 smtp (简单邮件传输协议) 的客户端实现。我们可以使用 smtplib 模块，轻松的发送电子邮件。</p><p>Python</p><p>文件处理自动化库</p><p>//  27.os 库<br>官网：<br><a href="https://docs.python.org/zh-cn/3/library/os.html?highlight=os#module-os">https://docs.python.org/zh-cn/3/library/os.html?highlight=os#module-os</a></p><p>特点：本模块提供了一种使用与操作系统相关的功能的便捷式途径。如果你只是想读写一个文件，请参阅 open()，如果你想操作文件路径，请参阅 os.path 模块，如果你想读取通过命令行给出的所有文件中的所有行，请参阅 fileinput 模块。为了创建临时文件和目录，请参阅 tempfile 模块，对于高级文件和目录处理，请参阅 shutil 模块。</p><p>Python</p><p>综合功能自动化库</p><p>//  28.win32com 库<br>官网：<br><a href="https://pypi.org/project/pywin32/">https://pypi.org/project/pywin32/</a></p><p>特点：win32com 模块主要为 Python 提供调用 windows 底层组件对 word 、Excel、PPT 等进行操作的功能，只能在 Windows 环境下使用，并且需要安装 office 相关软件才行（WPS 也行）。</p><p>//  29.unoconv 库<br>官网：<br><a href="https://github.com/unoconv/unoconv">https://github.com/unoconv/unoconv</a></p><p>特点：是一个命令行工具，可以将 LibreOffice 可以导入的任何文档格式转换为 LibreOffice 可以导出的任何文档格式。它利用 LibreOffice 的 UNO 绑定进行文档的非交互式转换，也支持 OpenOffice。</p><p>//  30.Tablib 库<br>官网：<br><a href="https://www.osgeo.cn/tablib/">https://www.osgeo.cn/tablib/</a></p><p>特点：Python tablib 模块是第三方模块，主要作用是将数据导出为各种不同的格式，包括 excel，json，html，yaml，csv，tsv 等格式，怎么样，有点心动了吧，当然这个模块使用起来也是超级简单的。</p><p>//  31.SnowNLP 库<br>官网：<br><a href="https://github.com/isnowfy/snownlp">https://github.com/isnowfy/snownlp</a></p><p>特点：SnowNLP 是一个 python 写的类库，可以方便的处理中文文本内容，是受到了 TextBlob 的启发而写的，由于现在大部分的自然语言处理库基本都是针对英文的，于是写了一个方便处理中文的类库，并且和 TextBlob 不同的是，这里没有用 NLTK，所有的算法都是自己实现的，并且自带了一些训练好的字典。注意本程序都是处理的 unicode 编码，所以使用时请自行 decode 成 unicode。</p><p>//  32.TextBlob 库<br>官网：<br><a href="https://textblob.readthedocs.io/">https://textblob.readthedocs.io</a></p><p>特点：TextBlob 是一个用于处理文本数据的 Python（2 和 3）库。它提供了一个简单的 API，用于深入研究常见的自然语言处理 (NLP) 任务，例如词性标注、名词短语提取、情感分析、分类、翻译等。</p><p>//  33.TextGrocery 库<br>官网：<br><a href="https://textgrocery.readthedocs.io/">https://textgrocery.readthedocs.io</a></p><p>特点：TextGrocery 是一个基于 LibLinear 和结巴分词的短文本分类工具，特点是高效易用，同时支持中文和英文语料。</p><p>//  34.NumPy 库<br>官网：<br><a href="https://www.numpy.org.cn/">https://www.numpy.org.cn/</a></p><p>特点：NumPy 是 Python 中科学计算的基础包。它是一个 Python 库，提供多维数组对象，各种派生对象（如掩码数组和矩阵），以及用于数组快速操作的各种 API，有包括数学、逻辑、形状操作、排序、选择、输入输出、离散傅立叶变换、基本线性代数，基本统计运算和随机模拟等等。</p>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 自动化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo主题配置</title>
      <link href="/2022/01208095.html"/>
      <url>/2022/01208095.html</url>
      
        <content type="html"><![CDATA[<h1 id="butterfly主题配置"><a href="#butterfly主题配置" class="headerlink" title="butterfly主题配置"></a>butterfly主题配置</h1><p><a href="https://www.bufferfly.cn/problem.html">官方文档</a></p><h2 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h2><p>如果你没有 pug 以及 stylus 的渲染器，请下载安装：<br><code>npm install hexo-renderer-pug hexo-renderer-stylus --save</code></p><h2 id="升级建议"><a href="#升级建议" class="headerlink" title="升级建议"></a>升级建议</h2><p>1.在 hexo 的根目录创建一个文件 _config.butterfly.yml，并把主题目录的 _config.yml 内容复製到 _config.butterfly.yml 去。( 注意: 复製的是主题的 _config.yml ,而不是 hexo 的 _config.yml)<br>2.不要把主题目录的 _config.yml 删掉<br>3.以后只需要在 _config.butterfly.yml进行配置就行。<br>4.Hexo会自动合併主题中的_config.yml和 _config.butterfly.yml里的配置，如果存在同名配置，会使用_config.butterfly.yml的配置，其优先度较高。</p><h2 id="Inject"><a href="#Inject" class="headerlink" title="Inject"></a>Inject</h2><p><a href="https://blog.csdn.net/u012208219/article/details/106883001/?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_baidulandingword~default-9.no_search_link&amp;spm=1001.2101.3001.4242.6&amp;utm_relevant_index=12">参考</a><br>打开主题配置文件（butterfly.yml）<br>定位搜索 inject<br>其中head是用来引入css的。bottom是用来引入js的。</p><h3 id="以相对路径引入"><a href="#以相对路径引入" class="headerlink" title="以相对路径引入"></a>以相对路径引入</h3><p>1.将写好的css文件移动到\Butterfly\source\css\目录下。<br>2.然后修改配置文件的引入方式</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">inject:</span></span><br><span class="line">  <span class="attr">head:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;link</span> <span class="string">rel="stylesheet"</span> <span class="string">href="/css/name.css"&gt;</span></span><br><span class="line">  <span class="attr">bottom:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">src="xxxx"&gt;&lt;/script&gt;</span></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h2 id="标签外挂（Tag-Plugins）-推荐"><a href="#标签外挂（Tag-Plugins）-推荐" class="headerlink" title="标签外挂（Tag Plugins）(推荐)"></a>标签外挂（Tag Plugins）(推荐)</h2><p><a href="https://butterfly.js.org/posts/4aa8abbe/#%E6%A8%99%E7%B1%A4%E5%A4%96%E6%8E%9B%EF%BC%88Tag-Plugins%EF%BC%89">参考</a><br><a href="https://blog.ccknbc.cc/posts/introduction-of-plugin-tags-based-on-butterfly/">参考</a><br>标籤外挂是Hexo独有的功能，并不是标準的Markdown格式。</p><p>以下的写法，只适用于Butterfly主题，用在其它主题上不会有效果，甚至可能会报错。使用前请留意</p><h3 id="Tabs"><a href="#Tabs" class="headerlink" title="Tabs"></a>Tabs</h3><p>页面内置小标签<br>使用</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">{% tabs Unique name, [index] %}</span><br><span class="line">&lt;!-- tab [Tab caption] [@icon] --&gt;</span><br><span class="line">Any content (support inline tags too).</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">{% endtabs %}</span><br><span class="line"></span><br><span class="line">Unique name   : Unique name of tabs block tag without comma.</span><br><span class="line"><span class="code">                Will be used in #id's as prefix for each tab with their index numbers.</span></span><br><span class="line"><span class="code">                If there are whitespaces in name, for generate #id all whitespaces will replaced by dashes.</span></span><br><span class="line"><span class="code">                Only for current url of post/page must be unique!</span></span><br><span class="line"><span class="code">[index]       : Index number of active tab.</span></span><br><span class="line"><span class="code">                If not specified, first tab (1) will be selected.</span></span><br><span class="line"><span class="code">                If index is -1, no tab will be selected. It's will be something like spoiler.</span></span><br><span class="line"><span class="code">                Optional parameter.</span></span><br><span class="line"><span class="code">[Tab caption] : Caption of current tab.</span></span><br><span class="line"><span class="code">                If not caption specified, unique name with tab index suffix will be used as caption of tab.</span></span><br><span class="line"><span class="code">                If not caption specified, but specified icon, caption will empty.</span></span><br><span class="line"><span class="code">                Optional parameter.</span></span><br><span class="line"><span class="code">[@icon]       : FontAwesome icon name (full-name, look like 'fas fa-font')</span></span><br><span class="line"><span class="code">                Can be specified with or without space; e.g. 'Tab caption @icon' similar to 'Tab caption@icon'.</span></span><br><span class="line"><span class="code">                Optional parameter.</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">{% tabs test4 %}</span><br><span class="line">&lt;!-- tab 第一个Tab --&gt;</span><br><span class="line"><span class="strong">**tab名字为第一个Tab**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab @fab fa-apple-pay --&gt;</span><br><span class="line"><span class="strong">**只有图标 没有Tab名字**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab 炸弹@fas fa-bomb --&gt;</span><br><span class="line"><span class="strong">**名字+icon**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">{% endtabs %}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><div class="tabs" id="test4"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test4-1">第一个Tab</button></li><li class="tab"><button type="button" data-href="#test4-2"><i class="fab fa-apple-pay" style="text-align: center;"></i></button></li><li class="tab"><button type="button" data-href="#test4-3"><i class="fas fa-bomb"></i>炸弹</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test4-1"><p><strong>tab名字为第一个Tab</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-2"><p><strong>只有图标 没有Tab名字</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-3"><p><strong>名字+icon</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="Button"><a href="#Button" class="headerlink" title="Button"></a>Button</h3><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">{% btn [url],[text],[icon],[color] [style] [layout] [position] [size] %}</span><br><span class="line"></span><br><span class="line">[url]         : 链接</span><br><span class="line">[text]        : 按钮文字</span><br><span class="line">[icon]        : [可选] 图标</span><br><span class="line">[color]       : [可选] 按钮背景顔色(默认style时）</span><br><span class="line"><span class="code">                      按钮字体和边框顔色(outline时)</span></span><br><span class="line"><span class="code">                      default/blue/pink/red/purple/orange/green</span></span><br><span class="line"><span class="code">[style]       : [可选] 按钮样式 默认实心</span></span><br><span class="line"><span class="code">                      outline/留空</span></span><br><span class="line"><span class="code">[layout]      : [可选] 按钮佈局 默认为line</span></span><br><span class="line"><span class="code">                      block/留空</span></span><br><span class="line"><span class="code">[position]    : [可选] 按钮位置 前提是设置了layout为block 默认为左边</span></span><br><span class="line"><span class="code">                      center/right/留空</span></span><br><span class="line"><span class="code">[size]        : [可选] 按钮大小</span></span><br><span class="line"><span class="code">                      larger/留空</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>This is my website, click the button <a class="btn-beautify button--animated larger" href="https://butterfly.js.org/" title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a></p><h2 id="gallery-相册图库"><a href="#gallery-相册图库" class="headerlink" title="gallery 相册图库"></a>gallery 相册图库</h2><p><a href="https://dyfa.top/posts/waterfall-flow-photo-album.html#toc-heading-4">参考</a><br><a href="https://butterfly.js.org/posts/dc584b87/#%E5%9C%96%E5%BA%AB">参考</a></p><h3 id="编辑主题导航栏加入相册按钮"><a href="#编辑主题导航栏加入相册按钮" class="headerlink" title="编辑主题导航栏加入相册按钮"></a>编辑主题导航栏加入相册按钮</h3><p>在站点主题_config.yml文件下menu菜单下新增gallery页面。</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line"> <span class="string">相册:</span> <span class="string">/gallery/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-heart</span></span><br></pre></td></tr></tbody></table></figure><h3 id="新建相册页面"><a href="#新建相册页面" class="headerlink" title="新建相册页面"></a>新建相册页面</h3><p>在站点的source文件夹下面新建一个gallery相册页面。<br><code>hexo new page gallery</code><br>打开新建的gallery文件夹，里面会有一个index.md文件，设置index.md文件内容。然后使用标签外挂 galleryGroup，具体用法请查看对应的内容。</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">--- </span><br><span class="line">title: gallery </span><br><span class="line">date: 2020-10-05 12:00:00 </span><br><span class="line">type: "gallery"</span><br><span class="line">layout: "gallery" </span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"gallery-group-main"</span>&gt;</span></span></span><br><span class="line">{% galleryGroup '壁纸' '收藏的一些壁纸' '/Gallery/wallpaper' https://i.loli.net/2019/11/10/T7Mu8Aod3egmC4Q.png %}</span><br><span class="line">{% galleryGroup '漫威' '关于漫威的图片' '/Gallery/marvel' https://i.loli.net/2019/12/25/8t97aVlp4hgyBGu.jpg %}</span><br><span class="line">{% galleryGroup 'OH MY GIRL' '关于OH MY GIRL的图片' '/Gallery/ohmygirl' https://i.loli.net/2019/12/25/hOqbQ3BIwa6KWpo.jpg %}</span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">---</span><br></pre></td></tr></tbody></table></figure><p>name：图库名字<br>description：图库描述<br>link：连接到对应相册的地址<br>img-url：图库封面的地址</p><h3 id="新建相册图片展示页面"><a href="#新建相册图片展示页面" class="headerlink" title="新建相册图片展示页面"></a>新建相册图片展示页面</h3><p>在gallery文件夹（也就是刚才创建的那个文件），可以在里面新建一些文件夹，也就是相册文件夹<br>然后在新建的相册文件夹里，分别在每个文件夹里新建文件index.md ,<br>然后使用标签外挂 gallery，具体用法请查看对应的内容。</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">--- </span><br><span class="line">{% gallery %}</span><br><span class="line">![](https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg)</span><br><span class="line">![](https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg)</span><br><span class="line">![](https://i.loli.net/2019/12/25/gEy5Zc1Ai6VuO4N.jpg)</span><br><span class="line">![](https://i.loli.net/2019/12/25/d6QHbytlSYO4FBG.jpg)</span><br><span class="line">![](https://i.loli.net/2019/12/25/6nepIJ1xTgufatZ.jpg)</span><br><span class="line">![](https://i.loli.net/2019/12/25/E7Jvr4eIPwUNmzq.jpg)</span><br><span class="line">![](https://i.loli.net/2019/12/25/mh19anwBSWIkGlH.jpg)</span><br><span class="line">![](https://i.loli.net/2019/12/25/2tu9JC8ewpBFagv.jpg)</span><br><span class="line">{% endgallery %}</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h2 id="友情链接"><a href="#友情链接" class="headerlink" title="友情链接"></a>友情链接</h2><h3 id="创建友情链接页面"><a href="#创建友情链接页面" class="headerlink" title="创建友情链接页面"></a>创建友情链接页面</h3><p>在博客的根目录输入 <code>hexo new page link</code><br>修改source/link/index.md这个文件</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"> ---</span><br><span class="line">title: 友情链接</span><br><span class="line">date: 2018-06-07 22:17:49</span><br><span class="line"><span class="section">type: "link"</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></tbody></table></figure><h3 id="友情链接添加"><a href="#友情链接添加" class="headerlink" title="友情链接添加"></a>友情链接添加</h3><p>在Hexo博客目录中的source/_data（如果没有 _data 文件夹，请自行创建），创建一个文件link.yml</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">class_name:</span> <span class="string">友情链接</span></span><br><span class="line">  <span class="attr">class_desc:</span> <span class="string">那些人，那些事</span></span><br><span class="line">  <span class="attr">link_list:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Hexo</span></span><br><span class="line">      <span class="attr">link:</span> <span class="string">https://hexo.io/zh-tw/</span></span><br><span class="line">      <span class="attr">avatar:</span> <span class="string">https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg</span></span><br><span class="line">      <span class="attr">descr:</span> <span class="string">快速、简单且强大的网誌框架</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">class_name:</span> <span class="string">网站</span></span><br><span class="line">  <span class="attr">class_desc:</span> <span class="string">值得推荐的网站</span></span><br><span class="line">  <span class="attr">link_list:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Youtube</span></span><br><span class="line">      <span class="attr">link:</span> <span class="string">https://www.youtube.com/</span></span><br><span class="line">      <span class="attr">avatar:</span> <span class="string">https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png</span></span><br><span class="line">      <span class="attr">descr:</span> <span class="string">视频网站</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Weibo</span></span><br><span class="line">      <span class="attr">link:</span> <span class="string">https://www.weibo.com/</span></span><br><span class="line">      <span class="attr">avatar:</span> <span class="string">https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png</span></span><br><span class="line">      <span class="attr">descr:</span> <span class="string">中国最大社交分享平台</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Twitter</span></span><br><span class="line">      <span class="attr">link:</span> <span class="string">https://twitter.com/</span></span><br><span class="line">      <span class="attr">avatar:</span> <span class="string">https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png</span></span><br><span class="line">      <span class="attr">descr:</span> <span class="string">社交分享平台</span></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>class_name和class_desc支持html格式书写，如不需要，也可以留空。</p><h2 id="评论"><a href="#评论" class="headerlink" title="评论"></a>评论</h2><p>开启评论需要在comments-use中填写你需要的评论。</p><p>支持双评论显示，只需要配置两个评论（第一个为默认显示） </p><table><thead><tr><th>参数</th><th>解释</th></tr></thead><tbody><tr><td>use</td><td>使用的评论（填写的评论首字母需要大写。最多支持两个）注意：由于共用 ID,双评论不能是 Disqus 和 Disqusjs</td></tr><tr><td>text</td><td>是否显示评论服务商的名字</td></tr><tr><td>lazyload</td><td>是否为评论开启lazyload，开启后，只有滚动到评论位置时才会加载评论所需要的资源（开启lazyload后，评论数将不显示）</td></tr><tr><td>count</td><td>是否在文章顶部显示评论数livere 和 utterances 不支持评论数显示</td></tr><tr><td>card_post_count</td><td>是否在首页文章卡片显示评论数gitalk、livere 和 utterances不支持评论数显示</td></tr></tbody></table><h2 id="添加全局吸底Aplayer音乐-不采用"><a href="#添加全局吸底Aplayer音乐-不采用" class="headerlink" title="添加全局吸底Aplayer音乐(不采用)"></a>添加全局吸底Aplayer音乐(不采用)</h2><h3 id="安装hexo-tag-aplayer插件"><a href="#安装hexo-tag-aplayer插件" class="headerlink" title="安装hexo-tag-aplayer插件"></a>安装hexo-tag-aplayer插件</h3><h3 id="关闭-asset-inject"><a href="#关闭-asset-inject" class="headerlink" title="关闭 asset_inject"></a>关闭 asset_inject</h3><p>由于需要全局都插入aplayer和meting资源，为了防止插入重复的资源，需要把asset_inject设为false<br>在Hexo的配置文件中</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">aplayer:</span></span><br><span class="line">  <span class="attr">meting:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">asset_inject:</span> <span class="literal">false</span></span><br></pre></td></tr></tbody></table></figure><h3 id="开启主题的aplayerInject"><a href="#开启主题的aplayerInject" class="headerlink" title="开启主题的aplayerInject"></a>开启主题的aplayerInject</h3><p>在主题的配置文件中，enable设为true和per_page设为true</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Inject the css and script (aplayer/meting)</span></span><br><span class="line"><span class="attr">aplayerInject:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">per_page:</span> <span class="literal">true</span></span><br></pre></td></tr></tbody></table></figure><h3 id="插入Aplayer-html"><a href="#插入Aplayer-html" class="headerlink" title="插入Aplayer html"></a>插入Aplayer html</h3><p>把aplayer代码插入到主题配置文件的inject.bottom去</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">inject:</span></span><br><span class="line">  <span class="attr">head:</span></span><br><span class="line">  <span class="attr">bottom:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;div</span> <span class="string">class="aplayer</span> <span class="literal">no</span><span class="string">-destroy"</span> <span class="string">data-id="000PeZCQ1i4XVs"</span> <span class="string">data-server="tencent"</span> <span class="string">data-type="artist"</span> <span class="string">data-fixed="true"</span> <span class="string">data-mini="true"</span> <span class="string">data-listFolded="false"</span> <span class="string">data-order="random"</span> <span class="string">data-preload="none"</span> <span class="string">data-autoplay="true"</span> <span class="string">muted&gt;&lt;/div&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>id是自己分享的歌曲后由链接得到的id<br>server可选netease（网易云音乐），tencent（QQ音乐），kugou（酷狗音乐），xiami（虾米音乐），baidu（百度音乐）。<br>type可选song（歌曲），playlist（歌单），album（专辑），search（搜索关键字），artist（歌手）</p><p>如果你想切换页面时，音乐不会中断。请把主题配置文件的pjax设为true，在class里需添加no-destroy，这样防止切换页面时Aplayer被销毁</p><h3 id="UI-调整"><a href="#UI-调整" class="headerlink" title="UI 调整"></a>UI 调整</h3><p>按照上面的步骤设置完成后，浏览器左下角会出现Aplayer。打开文章页面时，你会发现打开Toc目录的按钮被遮挡了。我们需要修改CSS来改变按钮的位置。<br>向上调整</p><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#toggle-sidebar</span> {</span><br><span class="line">  <span class="attribute">bottom</span>: <span class="number">80px</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>在主题配置文件中，添加到inject去</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">inject:</span></span><br><span class="line">  <span class="attr">head:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">'&lt;style type="text/css"&gt;#toggle-sidebar {bottom: 80px}&lt;/style&gt;'</span></span><br></pre></td></tr></tbody></table></figure><h2 id="Pjax"><a href="#Pjax" class="headerlink" title="Pjax"></a>Pjax</h2><p>当用户点击链接，通过ajax更新页面需要变化的部分，然后使用HTML5的pushState修改浏览器的URL地址。</p><p>这样可以不用重复加载相同的资源（css/js）， 从而提升网页的加载速度。 </p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">pjax:</span> </span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">exclude:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">/music/</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">/no-pjax/</span></span><br></pre></td></tr></tbody></table></figure><p>对于一些第三方插件，有些并不支持 pjax 。<br>你可以把网页加入到 exclude 里，这个网页会被 pjax 排除在外。<br>点击该网页会重新加载网站</p><p>使用pjax后，一些自己DIY的js可能会无效，跳转页面时需要重新调用，请参考Pjax文档<br>使用pjax后，一些个别页面加载的js/css，将会改为所有页面都加载</p><p>Butterfly的Pjax目前仍有一些问题，请留意</p><h2 id="引用文章"><a href="#引用文章" class="headerlink" title="引用文章"></a>引用文章</h2><p><a href="https://hexo.io/zh-cn/docs/tag-plugins#%E5%BC%95%E7%94%A8%E6%96%87%E7%AB%A0">参考</a><br>以_post为根目录定位文件（md文件会被渲染成html）<br>因为使用了abbrlink生成文章永久链接，所以在GitHub仓库中由md渲染成的HTML文件名是日期加abbrlink数字</p><h3 id="新建一个页面打开文章"><a href="#新建一个页面打开文章" class="headerlink" title="新建一个页面打开文章"></a>新建一个页面打开文章</h3><p><code>&lt;a href="/2021/12184010.html" target="_blank"&gt;显示的文字&lt;/a&gt;</code></p><h3 id="在此页面打开新文章"><a href="#在此页面打开新文章" class="headerlink" title="在此页面打开新文章"></a>在此页面打开新文章</h3><p><code>[显示的文字](/2021/12184010.html)</code><br><code>{% post_link 文章文件名 显示文本 %}</code></p><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://butterfly.js.org/">https://butterfly.js.org/</a><br><a href="https://yangchaoyi.vip/">https://yangchaoyi.vip/</a></p><h1 id="matery主题配置（不采用）"><a href="#matery主题配置（不采用）" class="headerlink" title="matery主题配置（不采用）"></a>matery主题配置（不采用）</h1><h2 id="下载主题"><a href="#下载主题" class="headerlink" title="下载主题"></a>下载主题</h2><p>hexo-theme-matery 是一个采用 Material Design 和响应式设计的 Hexo 博客主题<br>去github下载解压缩后，将 hexo-theme-matery 的文件夹复制到 Hexo 的 themes 文件夹中即可。</p><h2 id="切换主题"><a href="#切换主题" class="headerlink" title="切换主题"></a>切换主题</h2><p>修改 Hexo 根目录下的_config.yml 的 theme 的值：<br>theme: hexo-theme-matery</p><h2 id="主题目录结构说明"><a href="#主题目录结构说明" class="headerlink" title="主题目录结构说明"></a>主题目录结构说明</h2><p>1.matery/layout下的.ejs文件是编写关于主页右上角分类，归档的<br>2.目录样式在：themes\Matery\layout_partial\post-detail-toc.ejs<br>3.如果有多语言支持需求，可以更改 themes/next/languages 下对应语言的翻译。</p><h2 id="medias个性化"><a href="#medias个性化" class="headerlink" title="medias个性化"></a>medias个性化</h2><p><a href="https://juejin.cn/post/6844904132608786446">参考</a></p><p>1.我先把banner 和 featureimages里的图片来了个大换血。不过这里我发现一个问题，壁纸尺寸必须和电脑显示屏的分辨率一样才能完美显示。比如我的电脑分辨率是1080*1920，那么我下载的壁纸也得是这个尺寸，不然浏览器渲染显示的时候会不好看。</p><p>2.接着我又把网站logo，avatars，favicon 也给换成了自己喜欢的图片<br><a href="http://www.uugai.com/">免费logo生成网站</a></p><h2 id="代码高亮"><a href="#代码高亮" class="headerlink" title="代码高亮"></a>代码高亮</h2><p><a href="https://blog.csdn.net/weixin_49230318/article/details/111619538?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522163988912216780261927131%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=163988912216780261927131&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-3-111619538.pc_search_insert_es_download&amp;utm_term=matery%E4%BB%A3%E7%A0%81%E9%AB%98%E4%BA%AE&amp;spm=1018.2226.3001.4187">参考</a></p><p>Hexo的matery主题中的代码块出现代码大小不一，代码键复制，无法高亮等BUG</p><h2 id="修改页脚"><a href="#修改页脚" class="headerlink" title="修改页脚"></a>修改页脚</h2><p>页脚信息可能需要做定制化修改，而且它不便于做成配置信息，所以可能需要你自己去再修改和加工。修改的地方在主题文件的 /layout/_partial/footer.ejs 文件中，包括站点、使用的主题、访问量等。</p><h2 id="评论-1"><a href="#评论-1" class="headerlink" title="评论"></a>评论</h2><p>主题中内置了valine, miniValine, livere, gitment, gitalk, changyan评论<br>通过主题文件夹下的_config.yml文件中的相应属性进行设置<br>推荐使用valine和livere<br>这里重点说一下valine评论配置</p><figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">valine:</span></span><br><span class="line">  <span class="attr">on:</span> <span class="literal">true</span> <span class="comment"># 是否启用</span></span><br><span class="line">  <span class="attr">appid:</span> <span class="comment"># 你的appid --&gt; https://valine.js.org/quickstart.html，请阅读这个获取appid和appkey</span></span><br><span class="line">  <span class="attr">appkey:</span> <span class="comment"># 你的key</span></span><br><span class="line">  <span class="attr">avatar:</span> <span class="string">''</span> <span class="comment"># 匿名者头像选项 https://valine.js.org/avatar.html 访客的头像,最好启用下面的`requiredFields`中的邮箱必填，填写qq邮箱，头像会变成qq头像</span></span><br><span class="line">  <span class="attr">placeholder:</span> <span class="string">'客官，说点什么吧'</span> <span class="comment"># 评论内容输入框的 placeholder</span></span><br><span class="line">  <span class="attr">master:</span> <span class="string">'xxxxxx'</span> <span class="comment"># 博主标签识别，博主邮箱md5 可以去md5加密网站，例如 https://md5jiami.51240.com/ ，将自己的邮箱输入， 得到 32位小写 的字符串填入这里</span></span><br><span class="line">  <span class="attr">friends:</span> [<span class="string">'xxxxxxx'</span>, <span class="string">'xxxxxx'</span>] <span class="comment"># 小伙伴的 邮箱md5， 是个数组</span></span><br><span class="line">  <span class="attr">requiredFields:</span> [<span class="string">'nick'</span>, <span class="string">'mail'</span>] <span class="comment"># 设置必填项 ['nick', 'mail'] nick为昵称必填， mail为邮箱必填, 空数组，则不校验</span></span><br><span class="line">  <span class="attr">backgroundImg:</span> <span class="string">'/medias/comment-bg.gif'</span> <span class="comment"># 右下角背景图片, or http://xxx.gif</span></span><br><span class="line">  <span class="attr">backgroundColor:</span> <span class="string">'rgba(255,255,255,0.9)'</span> <span class="comment"># 背景颜色, 0.9标是透明度</span></span><br></pre></td></tr></tbody></table></figure><h2 id="打开腾讯兔小巢后台反馈"><a href="#打开腾讯兔小巢后台反馈" class="headerlink" title="打开腾讯兔小巢后台反馈"></a>打开腾讯兔小巢后台反馈</h2><p>在主题配置文件更改，加入自己注册后得到的产品Id就可以</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 腾讯兔小巢，见https://txc.qq.com/</span><br><span class="line">tuxiaochao:</span><br><span class="line">  enable: true</span><br><span class="line">  productId: 371566</span><br></pre></td></tr></tbody></table></figure><h2 id="添加-Tidio-在线聊天功能"><a href="#添加-Tidio-在线聊天功能" class="headerlink" title="添加 Tidio 在线聊天功能"></a>添加 Tidio 在线聊天功能</h2><p>前往 <a href="https://www.tidio.com/">Tidio</a> 官网注册并且获取 Public Key，并将 Public Key 填入主题的 _config.yml 文件中。</p><h2 id="添加emoji表情支持"><a href="#添加emoji表情支持" class="headerlink" title="添加emoji表情支持"></a>添加emoji表情支持</h2><p>Matery 主题新增了对emoji表情的支持，使用到了 hexo-filter-github-emojis 的 Hexo 插件来支持 emoji表情的生成，把对应的markdown emoji语法（::,例如：<span class="github-emoji"><span>😄</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f604.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>）转变成会跳跃的emoji表情，安装命令如下：<br><code>npm install hexo-filter-github-emojis --save</code><br>在 Hexo 根目录下的 _config.yml 文件中，新增以下的配置项：</p><figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">githubEmojis:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">className:</span> <span class="string">github-emoji</span></span><br><span class="line">  <span class="attr">inject:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">styles:</span></span><br><span class="line">  <span class="attr">customEmojis:</span></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h2 id="添加-RSS-订阅支持"><a href="#添加-RSS-订阅支持" class="headerlink" title="添加 RSS 订阅支持"></a>添加 RSS 订阅支持</h2><p>本主题中还使用到了 hexo-generator-feed 的 Hexo 插件来做 RSS，安装命令如下：<br><code>npm install hexo-generator-feed --save</code><br>在 Hexo 根目录下的 _config.yml 文件中，新增以下的配置项：</p><figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">feed:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">atom</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">atom.xml</span></span><br><span class="line">  <span class="attr">limit:</span> <span class="number">20</span></span><br><span class="line">  <span class="attr">hub:</span></span><br><span class="line">  <span class="attr">content:</span></span><br><span class="line">  <span class="attr">content_limit:</span> <span class="number">140</span> </span><br><span class="line">  <span class="attr">content_limit_delim:</span> <span class="string">' '</span></span><br><span class="line">  <span class="attr">order_by:</span> <span class="string">-date</span></span><br></pre></td></tr></tbody></table></figure><p>执行 hexo clean &amp;&amp; hexo g 重新生成博客文件，然后在 public 文件夹中即可看到 atom.xml 文件，说明已经安装成功了。</p><h2 id="百度优化"><a href="#百度优化" class="headerlink" title="百度优化"></a>百度优化</h2><p>登录百度搜索资源平台， 登录成功之后在 用户中心 –&gt; 站点管理 页面中点击添加网站，按提示操作。<br>因为我是部署在gitee上的，刚开始我选择的是文件验证方式，但一直提示验证文件内容不符，因此选择了HTML标签验证<br>复制的标签增加在<br><code>\themes\Chic\layout\_partial的head.ejs的&lt;head&gt;与&nbsp;&lt;/head&gt;标签之间</code><br>经过以上步骤，百度已经知道有我们网站的存在了，但是百度还不知道我们的网站上有什么内容，所以要向百度推送我们的内容。hexo-theme-matery主题已经内置了自动推送的方式， 检查themes/hexo-theme-matery/_config.yml文件中如下配置:<br><code># 百度搜索资源平台提交链接baiduPush: true</code><br>自动推送的JS代码部署在站点的每一个页面源代码中，当页面在每次被浏览时，链接就会被自动推送给百度。</p><h2 id="添加百度统计"><a href="#添加百度统计" class="headerlink" title="添加百度统计"></a>添加百度统计</h2><p><a href="https://blog.csdn.net/mqdxiaoxiao/article/details/93137447?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522163988568316780271556025%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.%2522%257D&amp;request_id=163988568316780271556025&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_ecpm_v1~rank_v31_ecpm-2-93137447.pc_search_insert_es_download&amp;utm_term=hexo+%E6%B7%BB%E5%8A%A0+baidu+Analytics+%E9%85%8D%E7%BD%AE&amp;spm=1018.2226.3001.4187">参考</a></p><p>1.<a href="https://tongji.baidu.com/web/10000419928/homepage/index">注册百度统计账号</a><br>2.添加博客域名<br>3.获取Baidu Analytics ID<br>然后进入代码管理-&gt;代码获取<br>可以看到如下一段javascript代码，这段代码本来是要手动嵌入到网页中的，但是Hexo已经帮我们嵌入了，所以我们自诩配置Baidu Analytics ID即可，这个ID就是下面代码的hm.js?后面那一串，先复制一下</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">var</span> _hmt = _hmt || [];</span><br><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>{</span><br><span class="line">  <span class="keyword">var</span> hm = <span class="built_in">document</span>.createElement(<span class="string">"script"</span>);</span><br><span class="line">  hm.src = <span class="string">"https://hm.baidu.com/hm.js?5b6ae75148041557ddd693925322myid"</span>;</span><br><span class="line">  <span class="keyword">var</span> s = <span class="built_in">document</span>.getElementsByTagName(<span class="string">"script"</span>)[<span class="number">0</span>]; </span><br><span class="line">  s.parentNode.insertBefore(hm, s);</span><br><span class="line">})();</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></tbody></table></figure><p>4.配置Baidu Analytics ID<br>打开主题的配置文件，然后搜索Baidu Analytics ID，找到如下配置项：</p><figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Baidu Analytics ID</span></span><br><span class="line"><span class="attr">baidu_analytics:</span> <span class="string">5b6ae75148041557ddd69392532288de</span></span><br></pre></td></tr></tbody></table></figure><p>去掉baidu_analytics前面的#号开启百度统计，值设置成刚在百度统计后台复制的Baidu Analytics ID</p><h2 id="添加导航页"><a href="#添加导航页" class="headerlink" title="添加导航页"></a>添加导航页</h2><p><a href="https://yafine-blog.cn/posts/e925.html">参考</a></p><p>1.首先新建页面，执行下面的命令</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page navigate</span><br></pre></td></tr></tbody></table></figure><p>2.修改 navigate 目录下的 index.md 的格式</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 导航</span><br><span class="line">date: 2020-05-09 11:19:14</span><br><span class="line">type: "navigate"</span><br><span class="line"><span class="section">layout: "navigate"</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></tbody></table></figure><p>3.在主题配置文件中添加导航</p><figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># main menu navigation url and icon</span></span><br><span class="line"><span class="comment"># 配置菜单导航的名称、路径和图标icon.</span></span><br><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">Index:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">/</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-home</span></span><br><span class="line">  <span class="string">统计:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">/</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-sitemap</span></span><br><span class="line">    <span class="attr">children:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">分类</span></span><br><span class="line">        <span class="attr">url:</span> <span class="string">/categories</span></span><br><span class="line">        <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-bookmark</span> </span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">标签</span></span><br><span class="line">        <span class="attr">url:</span> <span class="string">/tags</span></span><br><span class="line">        <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-tags</span>     </span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">归档</span></span><br><span class="line">        <span class="attr">url:</span> <span class="string">/archives</span></span><br><span class="line">        <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-archive</span></span><br><span class="line">  <span class="attr">About:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">/about</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-address-card</span></span><br><span class="line">  <span class="attr">Contact:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">/contact</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-comments</span></span><br><span class="line">  <span class="string">友人帐:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">/friends</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-share-alt</span></span><br><span class="line">  <span class="string">赞助墙:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">/sponsor</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">fa</span> <span class="string">fa-credit-card</span></span><br><span class="line">  <span class="string">导航:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">/navigate</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-location-arrow</span></span><br></pre></td></tr></tbody></table></figure><p>4.在 matery/layout 下新建 navigate.ejs</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br></pre></td><td class="code"><pre><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"navi-height bg-cover pd-header "</span>&gt;</span><br><span class="line">    <span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">" link-box container"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="comment">&lt;!-- 搜索框 --&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"baidu baidu-2 large-screen"</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">form</span> <span class="attr">name</span>=<span class="string">"f"</span> <span class="attr">action</span>=<span class="string">"https://www.baidu.com/"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"Select-2"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"Select-box-2"</span> <span class="attr">id</span>=<span class="string">"baidu"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">style</span>=<span class="string">"height: 46px;"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"this_s"</span>&gt;</span>百 · 度<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"bing_s"</span>&gt;</span>必 · 应<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"google_s"</span>&gt;</span>谷 · 歌<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"baidu_s"</span>&gt;</span>百 · 度<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span> <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">"wd"</span> <span class="attr">id</span>=<span class="string">"kw-2"</span> <span class="attr">maxlength</span>=<span class="string">"100"</span> <span class="attr">autocomplete</span>=<span class="string">"off"</span> <span class="attr">type</span>=<span class="string">"text"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"qingkong"</span> <span class="attr">id</span>=<span class="string">"qingkong"</span> <span class="attr">title</span>=<span class="string">"清 · 空"</span> <span class="attr">style</span>=<span class="string">"display: none;"</span>&gt;</span>x<span class="tag">&lt;/<span class="name">div</span>&gt;</span> <span class="tag">&lt;<span class="name">input</span> <span class="attr">value</span>=<span class="string">"搜 · 索"</span></span></span></span><br><span class="line"><span class="tag"><span class="xml">                    <span class="attr">id</span>=<span class="string">"su-2"</span> <span class="attr">type</span>=<span class="string">"submit"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"keylist"</span>&gt;</span><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span> <span class="comment">&lt;!-- 链接 --&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row tags-posts "</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col s12 m6 l4 friend-div"</span> <span class="attr">data-aos</span>=<span class="string">"zoom-in-up"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"card"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"jj-list-tit"</span>&gt;</span>娱乐 · 影视<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"jj-list-con"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://www.jd.com/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>京东<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://www.taobao.com/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>淘宝<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://www.tmall.com/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>天猫<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://v.qq.com/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>腾讯视频<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.iqiyi.com/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>爱奇艺<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://www.bilibili.com/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>哔哩哔哩<span class="tag">&lt;/<span class="name">a</span>&gt;</span> <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://music.163.com/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>网易云音乐<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://y.qq.com/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>QQ音乐<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.kugou.com/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>酷狗音乐<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col s12 m6 l4 friend-div"</span> <span class="attr">data-aos</span>=<span class="string">"zoom-in-up"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"card"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"jj-list-tit"</span>&gt;</span>社区 · Code<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"jj-list-con"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://www.mobaijun.com/contact/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>留言<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://github.com/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>GitHub<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://coding.net/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>Coding<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://juejin.im/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>掘金<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://gitee.com/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>码云<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://www.csdn.net/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>CSDN<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://www.jianshu.com/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>简书<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://segmentfault.com/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>思否<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://cloud.tencent.com/developer/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>云+社区<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col s12 m6 l4 friend-div"</span> <span class="attr">data-aos</span>=<span class="string">"zoom-in-up"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"card"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"jj-list-tit"</span>&gt;</span>实用 · 工具<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"jj-list-con"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://mdnice.com/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>Nice编辑器<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://translate.google.cn/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>谷歌翻译<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://www.uupoop.com/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>在线PS<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://www.processon.com/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>思维导图<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://wallhaven.cc/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>超清壁纸<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://cli.im/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>二维码<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.yinfans.me/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>音范思<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://www.52pojie.cn/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>吾爱破解<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://my.openwrite.cn/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>OW分发<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col s12 m6 l4 friend-div"</span> <span class="attr">data-aos</span>=<span class="string">"zoom-in-up"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"card"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"jj-list-tit"</span>&gt;</span>编程 · 学习<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"jj-list-con"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://www.oschina.net/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>开源中国<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://htmldog.com/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>HTML狗<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://www.icourse163.org/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>中国大学慕课<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://www.imooc.com/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>慕课网<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.wxapp-union.com/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>小程序<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://www.runoob.com/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>菜鸟教程<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://blog.51cto.com/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>51CTO<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://www.shiyanlou.com/library/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>实验楼<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://spring.io/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>Spring<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col s12 m6 l4 friend-div"</span> <span class="attr">data-aos</span>=<span class="string">"zoom-in-up"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"card"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"jj-list-tit"</span>&gt;</span>资讯 · 趋势<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"jj-list-con"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://www.huxiu.com/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>虎嗅<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://insights.stackoverflow.com/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>技术调查<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.asciiworld.com/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>摸鱼<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://sspai.com/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>少数派<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://zh.wikihow.com/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>WikeHom<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://www.awesomes.cn/rank?sort=hot"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>前端趋势<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://github-trending.com/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>GitHub趋势<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://www.tiobe.com/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>编程趋势<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://trends.google.com/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>Google趋势<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col s12 m6 l4 friend-div"</span> <span class="attr">data-aos</span>=<span class="string">"zoom-in-up"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"card"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"jj-list-tit"</span>&gt;</span>搜索 · 其他<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"jj-list-con"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://ac.scmor.com/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>谷歌镜像<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.pansoso.com/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>网盘搜索<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://tool.mkblog.cn/music/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>音乐搜索<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://www.dytt8.net/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>电影天堂<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://carbon.now.sh/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>代码图片<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://www.zhipin.com/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>Boos<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://fontawesome.com/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>图标库<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://www.qvdv.com/tools/qvdv-guid.html"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>在线工具<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://zhongguose.com/"</span> <span class="attr">class</span>=<span class="string">"link-3"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>中国色<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"> <span class="comment">/*选择搜索引擎*/</span> $(<span class="string">'.Select-box ul'</span>).hover(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{ $(<span class="built_in">this</span>).css(<span class="string">'height'</span>, <span class="string">'auto'</span>) }, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{ $(<span class="built_in">this</span>).css(<span class="string">'height'</span>, <span class="string">'40px'</span>) }); $(<span class="string">'.Select-box-2 ul'</span>).hover(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{ $(<span class="built_in">this</span>).css(<span class="string">'height'</span>, <span class="string">'auto'</span>) }, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{ $(<span class="built_in">this</span>).css(<span class="string">'height'</span>, <span class="string">'46px'</span>) }); $(<span class="string">'.Select-box li'</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{ <span class="keyword">var</span> _tihs = $(<span class="built_in">this</span>).attr(<span class="string">'class'</span>); <span class="keyword">var</span> _html = $(<span class="built_in">this</span>).html(); <span class="keyword">if</span> (_tihs == <span class="string">'baidu_s'</span>) { _tihs = <span class="string">'https://www.baidu.com/s'</span>; _name = <span class="string">'wd'</span>; } <span class="keyword">if</span> (_tihs == <span class="string">'google_s'</span>) { _tihs = <span class="string">'https://www.google.com/search'</span>; _name = <span class="string">'q'</span>; } <span class="keyword">if</span> (_tihs == <span class="string">'bing_s'</span>) { _tihs = <span class="string">'https://www.bing.com/search'</span>; _name = <span class="string">'q'</span>; } $(<span class="string">'.baidu form'</span>).attr(<span class="string">'action'</span>, _tihs); $(<span class="string">'.this_s'</span>).html(_html); $(<span class="string">'#kw'</span>).attr(<span class="string">'name'</span>, _name); $(<span class="string">'.Select-box ul'</span>).css(<span class="string">'height'</span>, <span class="string">'40px'</span>) }); $(<span class="string">'.Select-box-2 li'</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{ <span class="keyword">var</span> _tihs = $(<span class="built_in">this</span>).attr(<span class="string">'class'</span>); <span class="keyword">var</span> _html = $(<span class="built_in">this</span>).html(); <span class="keyword">if</span> (_tihs == <span class="string">'baidu_s'</span>) { _tihs = <span class="string">'https://www.baidu.com/s'</span>; _name = <span class="string">'wd'</span>; } <span class="keyword">if</span> (_tihs == <span class="string">'google_s'</span>) { _tihs = <span class="string">'https://www.google.com/search'</span>; _name = <span class="string">'q'</span>; } <span class="keyword">if</span> (_tihs == <span class="string">'bing_s'</span>) { _tihs = <span class="string">'https://www.bing.com/search'</span>; _name = <span class="string">'q'</span>; } $(<span class="string">'.baidu form'</span>).attr(<span class="string">'action'</span>, _tihs); $(<span class="string">'.this_s'</span>).html(_html); $(<span class="string">'#kw-2'</span>).attr(<span class="string">'name'</span>, _name); $(<span class="string">'.Select-box-2 ul'</span>).css(<span class="string">'height'</span>, <span class="string">'48px'</span>) }); <span class="comment">//清空输入框内容 $('.qingkong').click(function () { cls(); $(this).css('display', 'none') }); function cls() { var sum = 0; var t = document.getElementsByTagName("INPUT"); for (var i = 0; i &lt; t.length; i++) { if (t[i].type == 'text') { ++sum; t[i].value = "";//清空 } } } //清空输入框按钮的显示和隐藏 function if_btn() { var btn_obj = document.getElementById("kw") || document.getElementById("kw-2"); var cls_btn = document.getElementById("qingkong"); var btn_obj_val; var times; //当元素获得焦点时 if (btn_obj == '' || btn_obj == null) { return false; //如果没有找到这个元素，则将函数返回，不继续执行 } btn_obj.onfocus = function () { times = setInterval(function () { btn_obj_val = btn_obj.value; if (btn_obj_val != 0) { cls_btn.style.display = "block"; } else { cls_btn.style.display = "none"; } }, 200); } //元素失去焦点时 btn_obj.onblur = function () { clearInterval(times); } } </span></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span></span><br><span class="line"><span class="css"><span class="xml">    * {</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">margin</span>: <span class="number">0</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">padding</span>: <span class="number">0</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">font-family</span>: <span class="string">"微软雅黑"</span></span></span></span><br><span class="line"><span class="css"><span class="xml">    }</span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="selector-tag">ul</span>,<span class="selector-tag">li</span>,<span class="selector-tag">h1</span>,<span class="selector-tag">h2</span>,<span class="selector-tag">h3</span>,<span class="selector-tag">h4</span>,<span class="selector-tag">h5</span>,<span class="selector-tag">h6</span>,<span class="selector-tag">p</span>,<span class="selector-tag">form</span>,<span class="selector-tag">dl</span>,<span class="selector-tag">dt</span>,<span class="selector-tag">dd</span> {</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">margin</span>: <span class="number">0px</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">padding</span>: <span class="number">0px</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">font-size</span>: <span class="number">14px</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">font-weight</span>: normal;</span></span></span><br><span class="line"><span class="css"><span class="xml">    }</span></span></span><br><span class="line"><span class="css"><span class="xml"></span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="selector-tag">img</span> {</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">border-style</span>: none;</span></span></span><br><span class="line"><span class="css"><span class="xml">    }</span></span></span><br><span class="line"><span class="css"><span class="xml"></span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="selector-tag">li</span> {</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">list-style</span>: none;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">float</span>: left</span></span></span><br><span class="line"><span class="css"><span class="xml">    }</span></span></span><br><span class="line"><span class="css"><span class="xml"></span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="selector-tag">a</span> {</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">text-decoration</span>: none</span></span></span><br><span class="line"><span class="css"><span class="xml">    }</span></span></span><br><span class="line"><span class="css"><span class="xml"></span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="selector-class">.card</span> {</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">25</span>, <span class="number">240</span>, <span class="number">229</span>, <span class="number">0</span>);</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">width</span>: <span class="number">96%</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">margin-left</span>: <span class="number">2%</span></span></span></span><br><span class="line"><span class="css"><span class="xml">    }</span></span></span><br><span class="line"><span class="css"><span class="xml"></span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="selector-class">.baidu</span> {</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">float</span>: left;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">margin-left</span>: <span class="number">100px</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">    }</span></span></span><br><span class="line"><span class="css"><span class="xml"></span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="selector-class">.baidu</span> <span class="selector-tag">form</span> {</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">position</span>: relative</span></span></span><br><span class="line"><span class="css"><span class="xml">    }</span></span></span><br><span class="line"><span class="css"><span class="xml"></span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="selector-class">.Select-box</span> <span class="selector-tag">ul</span> {</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">height</span>: <span class="number">40px</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">position</span>: absolute;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">left</span>: -<span class="number">1px</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">top</span>: <span class="number">0px</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">z-index</span>: <span class="number">9999</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">background</span>: <span class="number">#FFF</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">border-top</span>: none;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">overflow</span>: hidden</span></span></span><br><span class="line"><span class="css"><span class="xml">    }</span></span></span><br><span class="line"><span class="css"><span class="xml"></span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="selector-class">.Select-box</span> <span class="selector-tag">li</span> {</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">width</span>: <span class="number">60px</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">line-height</span>: <span class="number">40px</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">font-size</span>: <span class="number">14px</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">color</span>: <span class="number">#484848</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">border</span>: <span class="number">0</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">cursor</span>: pointer;</span></span></span><br><span class="line"><span class="css"><span class="xml">    }</span></span></span><br><span class="line"><span class="css"><span class="xml"></span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="selector-class">.Select-box</span> <span class="selector-tag">li</span><span class="selector-pseudo">:hover</span> {</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">background</span>: <span class="number">#3385ff</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">color</span>: <span class="number">#FFF</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">    }</span></span></span><br><span class="line"><span class="css"><span class="xml"></span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="selector-class">.Select-box</span> <span class="selector-class">.this_s</span> {</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">color</span>: <span class="number">#317ef3</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">    }</span></span></span><br><span class="line"><span class="css"><span class="xml"></span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="selector-class">.Select-box</span> <span class="selector-class">.this_s</span><span class="selector-pseudo">:hover</span> {</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">background</span>: <span class="number">#FFF</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">color</span>: <span class="number">#317ef3</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">    }</span></span></span><br><span class="line"><span class="css"><span class="xml"></span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="selector-class">.qingkong</span> {</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">position</span>: absolute;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">right</span>: <span class="number">120px</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">top</span>: <span class="number">12px</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">width</span>: <span class="number">18px</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">height</span>: <span class="number">18px</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.1</span>);</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">border-radius</span>: <span class="number">18px</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">line-height</span>: <span class="number">16px</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">color</span>: <span class="number">#666666</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">cursor</span>: pointer;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">text-align</span>: center;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">font-size</span>: <span class="number">14px</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">display</span>: none;</span></span></span><br><span class="line"><span class="css"><span class="xml">    }</span></span></span><br><span class="line"><span class="css"><span class="xml"></span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="selector-class">.qingkong</span><span class="selector-pseudo">:hover</span> {</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.2</span>);</span></span></span><br><span class="line"><span class="css"><span class="xml">    }</span></span></span><br><span class="line"><span class="css"><span class="xml"></span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="selector-class">.qingkong</span><span class="selector-pseudo">:active</span> {</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.3</span>);</span></span></span><br><span class="line"><span class="css"><span class="xml">    }</span></span></span><br><span class="line"><span class="css"><span class="xml"></span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="selector-class">.baidu-2</span> {</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">width</span>: <span class="number">100%</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">height</span>: <span class="number">110px</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">margin</span>: <span class="number">0</span> auto;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">background</span>: none;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">padding-top</span>: <span class="number">50px</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">    }</span></span></span><br><span class="line"><span class="css"><span class="xml"></span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="selector-class">.baidu-2</span> <span class="selector-tag">form</span> {</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">width</span>: <span class="number">520px</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">margin</span>: <span class="number">0</span> auto;</span></span></span><br><span class="line"><span class="css"><span class="xml">    }</span></span></span><br><span class="line"><span class="css"><span class="xml"></span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="selector-class">.baidu-2</span> <span class="selector-tag">input</span> {</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">padding</span>: <span class="number">13px</span> <span class="number">8px</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">opacity</span>: <span class="number">0.9</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">font-size</span>: <span class="number">15px</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">    }</span></span></span><br><span class="line"><span class="css"><span class="xml"></span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="selector-id">#Select-2</span> {</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">float</span>: left;</span></span></span><br><span class="line"><span class="css"><span class="xml">    }</span></span></span><br><span class="line"><span class="css"><span class="xml"></span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="selector-class">.Select-box-2</span> {</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">text-align</span>: center;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">float</span>: left;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">position</span>: relative;</span></span></span><br><span class="line"><span class="css"><span class="xml">    }</span></span></span><br><span class="line"><span class="css"><span class="xml"></span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="selector-class">.Select-box-2</span> <span class="selector-tag">ul</span> {</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">height</span>: <span class="number">46px</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">position</span>: absolute;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">left</span>: <span class="number">0px</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">top</span>: <span class="number">1px</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">z-index</span>: <span class="number">9999</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.9</span>);</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">border-top</span>: none;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">overflow</span>: hidden</span></span></span><br><span class="line"><span class="css"><span class="xml">    }</span></span></span><br><span class="line"><span class="css"><span class="xml"></span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="selector-class">.Select-box-2</span> <span class="selector-tag">li</span> {</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">width</span>: <span class="number">60px</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">line-height</span>: <span class="number">46px</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">font-size</span>: <span class="number">15px</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">color</span>: <span class="number">#484848</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">border</span>: <span class="number">0</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">cursor</span>: pointer;</span></span></span><br><span class="line"><span class="css"><span class="xml">    }</span></span></span><br><span class="line"><span class="css"><span class="xml"></span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="selector-class">.Select-box-2</span> <span class="selector-tag">li</span><span class="selector-pseudo">:hover</span> {</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">background</span>: <span class="number">#3385ff</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">color</span>: <span class="number">#FFF</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">    }</span></span></span><br><span class="line"><span class="css"><span class="xml"></span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="selector-class">.Select-box-2</span> <span class="selector-class">.this_s</span> {</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">color</span>: <span class="number">#317ef3</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">    }</span></span></span><br><span class="line"><span class="css"><span class="xml"></span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="selector-class">.Select-box-2</span> <span class="selector-class">.this_s</span><span class="selector-pseudo">:hover</span> {</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">background</span>: none;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">color</span>: <span class="number">#317ef3</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">    }</span></span></span><br><span class="line"><span class="css"><span class="xml"></span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="selector-id">#kw-2</span> {</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">width</span>: <span class="number">335px</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">outline</span>: <span class="number">0</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.2</span>);</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">color</span>: <span class="number">#000000</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">padding-left</span>: <span class="number">70px</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">font-weight</span>: bold;</span></span></span><br><span class="line"><span class="css"><span class="xml">    }</span></span></span><br><span class="line"><span class="css"><span class="xml"></span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="comment">/*修改搜索框样式*/</span></span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="selector-id">#su-2</span> {</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">width</span>: <span class="number">90px</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">background</span>: blue;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">border</span>: none;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">border-top</span>: <span class="number">#3385ff</span> <span class="number">1px</span> solid;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#2d78f4</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">color</span>: <span class="number">#FFF</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">cursor</span>: pointer;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="comment">/*去轮廓阴影*/</span></span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">outline</span>: none;</span></span></span><br><span class="line"><span class="css"><span class="xml">    }</span></span></span><br><span class="line"><span class="css"><span class="xml"></span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="comment">/*光标移动到搜索框颜色*/</span></span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="selector-id">#su-2</span><span class="selector-pseudo">:hover</span> {</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">background</span>: blue;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid blue;</span></span></span><br><span class="line"><span class="css"><span class="xml">    }</span></span></span><br><span class="line"><span class="css"><span class="xml"></span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="selector-id">#su-2</span><span class="selector-pseudo">:active</span> {</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">background</span>: blue;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">box-shadow</span>: inset <span class="number">1px</span> <span class="number">1px</span> <span class="number">3px</span> blue;</span></span></span><br><span class="line"><span class="css"><span class="xml">        -webkit-<span class="attribute">box-shadow</span>: inset <span class="number">1px</span> <span class="number">1px</span> <span class="number">3px</span> blue;</span></span></span><br><span class="line"><span class="css"><span class="xml">    }</span></span></span><br><span class="line"><span class="css"><span class="xml"></span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="selector-class">.jj-list-tit</span> {</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">font-size</span>: <span class="number">16px</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">line-height</span>: <span class="number">25px</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">color</span>: <span class="number">#ffffff</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">width</span>: <span class="number">100%</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">padding-left</span>: <span class="number">38.5%</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">    }</span></span></span><br><span class="line"><span class="css"><span class="xml"></span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="selector-class">.jj-list-con</span> {</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">overflow</span>: hidden;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">margin</span>: <span class="number">0</span> auto</span></span></span><br><span class="line"><span class="css"><span class="xml">    }</span></span></span><br><span class="line"><span class="css"><span class="xml"></span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="comment">/*控制网站列表间距*/</span></span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="selector-class">.jj-list-con</span> <span class="selector-tag">li</span> {</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">width</span>: <span class="number">31.333%</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">margin</span>: <span class="number">1%</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">    }</span></span></span><br><span class="line"><span class="css"><span class="xml"></span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="selector-class">.link-3</span> {</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">display</span>: block;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, .<span class="number">35</span>);</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">color</span>: <span class="number">#FFF</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">font-size</span>: <span class="number">13px</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">text-align</span>: center;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">line-height</span>: <span class="number">35px</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">padding</span>: <span class="number">4px</span> <span class="number">0</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">border-radius</span>: <span class="number">2px</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">transition</span>: all <span class="number">0.2s</span></span></span></span><br><span class="line"><span class="css"><span class="xml">    }</span></span></span><br><span class="line"><span class="css"><span class="xml"></span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="selector-class">.link-3</span><span class="selector-pseudo">:hover</span> {</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, .<span class="number">45</span>);</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">font-size</span>: <span class="number">15px</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">font-weight</span>: bold</span></span></span><br><span class="line"><span class="css"><span class="xml">    }</span></span></span><br><span class="line"><span class="css"><span class="xml"></span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="comment">/*1栏 小于584*/</span></span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="keyword">@media</span> <span class="keyword">only</span> screen <span class="keyword">and</span> (<span class="attribute">max-width</span>: <span class="number">584px</span>) {</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="selector-class">.navi-height</span> {</span></span></span><br><span class="line"><span class="css"><span class="xml">            <span class="attribute">height</span>: <span class="number">1300px</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        }</span></span></span><br><span class="line"><span class="css"><span class="xml"></span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="selector-class">.link-box</span> {</span></span></span><br><span class="line"><span class="css"><span class="xml">            <span class="attribute">margin-top</span>: <span class="number">5%</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        }</span></span></span><br><span class="line"><span class="css"><span class="xml"></span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="selector-class">.large-screen</span> {</span></span></span><br><span class="line"><span class="css"><span class="xml">            <span class="attribute">display</span>: none;</span></span></span><br><span class="line"><span class="css"><span class="xml">        }</span></span></span><br><span class="line"><span class="css"><span class="xml">    }</span></span></span><br><span class="line"><span class="css"><span class="xml"></span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="comment">/* 2栏 大于584 小于993px */</span></span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="keyword">@media</span> <span class="keyword">only</span> screen <span class="keyword">and</span> (<span class="attribute">min-width</span>: <span class="number">584px</span>) <span class="keyword">and</span> (<span class="attribute">max-width</span>: <span class="number">993px</span>) {</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="selector-class">.navi-height</span> {</span></span></span><br><span class="line"><span class="css"><span class="xml">            <span class="attribute">height</span>: <span class="number">800px</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        }</span></span></span><br><span class="line"><span class="css"><span class="xml"></span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="selector-class">.link-box</span> {</span></span></span><br><span class="line"><span class="css"><span class="xml">            <span class="attribute">margin-top</span>: <span class="number">5%</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        }</span></span></span><br><span class="line"><span class="css"><span class="xml"></span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="selector-class">.large-screen</span> {</span></span></span><br><span class="line"><span class="css"><span class="xml">            <span class="attribute">display</span>: none;</span></span></span><br><span class="line"><span class="css"><span class="xml">        }</span></span></span><br><span class="line"><span class="css"><span class="xml">    }</span></span></span><br><span class="line"><span class="css"><span class="xml"></span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="comment">/*3栏 大于993px*/</span></span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="keyword">@media</span> <span class="keyword">only</span> screen <span class="keyword">and</span> (<span class="attribute">min-width</span>: <span class="number">993px</span>) {</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="selector-class">.navi-height</span> {</span></span></span><br><span class="line"><span class="css"><span class="xml">            <span class="attribute">position</span>: absolute;</span></span></span><br><span class="line"><span class="css"><span class="xml">            <span class="attribute">width</span>: <span class="number">100%</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">            <span class="attribute">height</span>: <span class="number">100%</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        }</span></span></span><br><span class="line"><span class="css"><span class="xml">    }</span></span></span><br><span class="line"><span class="css"><span class="xml"></span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="comment">/* 隐藏footer */</span></span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="selector-class">.page-footer</span> {</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">display</span>: none;</span></span></span><br><span class="line"><span class="css"><span class="xml">    }</span></span></span><br><span class="line"><span class="css"><span class="xml"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br><span class="line"><span class="xml">&lt;% if (theme.banner.enable) { %&gt;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="comment">// 每天切换 banner 图.  Switch banner image every day.</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="keyword">var</span> bannerUrl = <span class="string">"&lt;%- theme.jsDelivr.url %&gt;&lt;%- url_for('/medias/banner/') %&gt;"</span> + <span class="keyword">new</span> <span class="built_in">Date</span>().getDay() + <span class="string">'.jpg'</span>;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    $(<span class="string">'.bg-cover'</span>).css(<span class="string">'background-image'</span>, <span class="string">'url('</span> + bannerUrl + <span class="string">')'</span>);</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml">&lt;% } else { %&gt;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">    $(<span class="string">'.bg-cover'</span>).css(<span class="string">'background-image'</span>, <span class="string">'url(&lt;%- theme.jsDelivr.url %&gt;&lt;%- url_for('</span>/medias/banner/<span class="number">0.</span>jpg<span class="string">') %&gt;)'</span>);</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml">&lt;% } %&gt;</span></span><br></pre></td></tr></tbody></table></figure><h2 id="修改导航栏颜色以及透明效果"><a href="#修改导航栏颜色以及透明效果" class="headerlink" title="修改导航栏颜色以及透明效果"></a>修改导航栏颜色以及透明效果</h2><p>打开themes/matery/source/css/matery.css文件，大约在250行，有一个.bg-color属性，修改其属性值即可，代码如下：</p><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.bg-color</span> {</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(to right, <span class="number">#4cbf30</span> <span class="number">0%</span>, <span class="number">#0f9d58</span> <span class="number">100%</span>); //修改成自己喜欢的颜色值</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">0.8</span>;  //透明效果 值范围 <span class="number">0</span>~<span class="number">1</span>，看情况自己修改</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="添加萌萌的动漫人物"><a href="#添加萌萌的动漫人物" class="headerlink" title="添加萌萌的动漫人物"></a>添加萌萌的动漫人物</h2><p>1.安装插件<br><code>npm install --save hexo-helper-live2d</code><br>2.输入以下命令，安装下载动画人物库，将 haruto 更换成你想要的模型名称即可 如：<br><code>npm install live2d-widget-model-haruto</code><br>更多模型选择请<a href="https://gitcode.net/mirrors/xiazeyu/live2d-widget-models?utm_source=csdn_github_accelerator">点击</a></p><p>3.根目录_config.yml配置里面添加：</p><figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">live2d:</span> </span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> </span><br><span class="line">  <span class="attr">scriptFrom:</span> <span class="string">local</span> </span><br><span class="line">  <span class="attr">pluginRootPath:</span> <span class="string">live2dw/</span> </span><br><span class="line">  <span class="attr">pluginJsPath:</span> <span class="string">lib/</span> </span><br><span class="line">  <span class="attr">pluginModelPath:</span> <span class="string">assets/</span> </span><br><span class="line">  <span class="attr">tagMode:</span> <span class="literal">false</span> </span><br><span class="line">  <span class="attr">log:</span> <span class="literal">false</span> </span><br><span class="line">  <span class="attr">model:</span> </span><br><span class="line">    <span class="attr">use:</span> <span class="string">live2d-widget-model-haruto</span>  <span class="comment">#模型选择</span></span><br><span class="line">  <span class="attr">display:</span> </span><br><span class="line">    <span class="attr">position:</span> <span class="string">right</span>  <span class="comment">#模型位置</span></span><br><span class="line">    <span class="attr">width:</span> <span class="number">150</span>   <span class="comment">#模型宽度</span></span><br><span class="line">    <span class="attr">height:</span> <span class="number">300</span>  <span class="comment">#模型高度</span></span><br><span class="line">  <span class="attr">mobile:</span> </span><br><span class="line">    <span class="attr">show:</span> <span class="literal">true</span> <span class="comment">#是否在手机端显示</span></span><br><span class="line">    <span class="attr">react:</span> </span><br><span class="line">      <span class="attr">opacity:</span> <span class="number">0.7</span></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>动漫人物最好不要和不蒜子一起使用，不然不蒜子会显示不出来。</p><h2 id="新增加载动画"><a href="#新增加载动画" class="headerlink" title="新增加载动画"></a>新增加载动画</h2><p><a href="https://juejin.cn/post/6844904145250598919">参考</a></p><p>1.在 Matery 主题配置文件 _config.yml 中新增配置属性 preloader。</p><figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 是否开启页面加载动画 true 开启，false 关闭</span></span><br><span class="line"><span class="attr">preloader:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>2.在 Matery 主题目录 /layout/_widget 下新增文件 loading.ejs，将以下内容写入 loading.ejs。</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;% <span class="keyword">if</span> (theme.preloader.enable) { %&gt;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"loading-box"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"loading-left-bg"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"loading-right-bg"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"spinner-box"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"configure-border-1"</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"configure-core"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"configure-border-2"</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"configure-core"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"loading-word"</span>&gt;</span>加载中...<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="built_in">window</span>.addEventListener(<span class="string">'load'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="built_in">document</span>.body.style.overflow = <span class="string">'auto'</span>;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="built_in">document</span>.getElementById(<span class="string">'loading-box'</span>).classList.add(<span class="string">"loaded"</span>)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    }, <span class="literal">false</span>)</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&lt;% } %&gt;</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>3.接着在 Matery 主题目录 /css 下新增 loading.css ，并将以下内容写入 loading.css。</p><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#loading-box</span> <span class="selector-class">.loading-left-bg</span>,</span><br><span class="line"><span class="selector-id">#loading-box</span> <span class="selector-class">.loading-right-bg</span> {</span><br><span class="line">  <span class="attribute">position</span>: fixed;</span><br><span class="line">  <span class="attribute">z-index</span>: <span class="number">1000</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#37474f</span>;</span><br><span class="line">  <span class="attribute">transition</span>: all <span class="number">0.5s</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#loading-box</span> <span class="selector-class">.loading-right-bg</span> {</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#loading-box</span> &gt; <span class="selector-class">.spinner-box</span> {</span><br><span class="line">  <span class="attribute">position</span>: fixed;</span><br><span class="line">  <span class="attribute">z-index</span>: <span class="number">1001</span>;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">justify-content</span>: center;</span><br><span class="line">  <span class="attribute">align-items</span>: center;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100vh</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#loading-box</span> <span class="selector-class">.spinner-box</span> <span class="selector-class">.configure-border-1</span> {</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">3px</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">115px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">115px</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#ffab91</span>;</span><br><span class="line">  <span class="attribute">animation</span>: configure-clockwise <span class="number">3s</span> ease-in-out <span class="number">0s</span> infinite alternate;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#loading-box</span> <span class="selector-class">.spinner-box</span> <span class="selector-class">.configure-border-2</span> {</span><br><span class="line">  <span class="attribute">left</span>: -<span class="number">115px</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">3px</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">115px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">115px</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgb</span>(<span class="number">63</span>, <span class="number">249</span>, <span class="number">220</span>);</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">45deg</span>);</span><br><span class="line">  <span class="attribute">animation</span>: configure-xclockwise <span class="number">3s</span> ease-in-out <span class="number">0s</span> infinite alternate;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#loading-box</span> <span class="selector-class">.spinner-box</span> <span class="selector-class">.loading-word</span> {</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#ffffff</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">0.8rem</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#loading-box</span> <span class="selector-class">.spinner-box</span> <span class="selector-class">.configure-core</span> {</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#37474f</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">div</span><span class="selector-class">.loaded</span> <span class="selector-tag">div</span><span class="selector-class">.loading-left-bg</span> {</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">100%</span>, <span class="number">0</span>);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">div</span><span class="selector-class">.loaded</span> <span class="selector-tag">div</span><span class="selector-class">.loading-right-bg</span> {</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">100%</span>, <span class="number">0</span>);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">div</span><span class="selector-class">.loaded</span> <span class="selector-tag">div</span><span class="selector-class">.spinner-box</span> {</span><br><span class="line">  <span class="attribute">display</span>: none <span class="meta">!important</span>; </span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">@keyframes</span> configure-clockwise {</span><br><span class="line">  <span class="number">0%</span> {</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">0</span>);</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="number">25%</span> {</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">90deg</span>);</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="number">50%</span> {</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">180deg</span>);</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="number">75%</span> {</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">270deg</span>);</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="number">100%</span> {</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">360deg</span>);</span><br><span class="line">  }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">@keyframes</span> configure-xclockwise {</span><br><span class="line">  <span class="number">0%</span> {</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">45deg</span>);</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="number">25%</span> {</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotate</span>(-<span class="number">45deg</span>);</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="number">50%</span> {</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotate</span>(-<span class="number">135deg</span>);</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="number">75%</span> {</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotate</span>(-<span class="number">225deg</span>);</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="number">100%</span> {</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotate</span>(-<span class="number">315deg</span>);</span><br><span class="line">  }</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>4.然后找到 Matery 主题目录 /layout/_partial 下找到 head.ejs，并在 &lt;head&gt; 标签中添加以下内容引入 loading.css 文件。<br><code>&lt;link rel="stylesheet" type="text/css" href="&lt;%- theme.jsDelivr.url %&gt;&lt;%- url_for('/css/loading.css') %&gt;"&gt;</code></p><p>5.再找到 Matery 主题目录 /layout 下找到 layout.ejs，然后在&lt;body&gt; 标签下引入 loading.ejs。<br><code>&lt;%- partial('_widget/loading') %&gt;</code></p><h2 id="添加动态诗词"><a href="#添加动态诗词" class="headerlink" title="添加动态诗词"></a>添加动态诗词</h2><p><a href="https://blog.csdn.net/victoryxa/article/details/105841309">参考</a></p><p>采用的是今日诗词，每次返回一句诗词，根据时间、地点、天气、事件智能推荐。官网有<a href="https://www.jinrishici.com/doc/">API文档</a>，可以去看一下，有多种安装方式，最简单的方式就是从官网获取代码，<br>1.在/themes/matery/layout/_partial/head.ejs添加下面的一行代码：</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">"https://sdk.jinrishici.com/v2/browser/jinrishici.js"</span> charset=<span class="string">"utf-8"</span>&gt;&lt;/script&gt;</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>2.然后再将/themes/matery/layout/_partial/bg-cover-content.ejs中的<code>&lt;%= config.description %&gt;</code>修改为<code>&lt;%- '&lt;span id="jinrishici-sentence"&gt;正在加载今日诗词....&lt;/span&gt;' %&gt;</code><br>3.使用前提是将主题配置文件的subtitle的值改为false。</p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>markdown语法</title>
      <link href="/2022/010947193.html"/>
      <url>/2022/010947193.html</url>
      
        <content type="html"><![CDATA[<p><a href="https://markdown.com.cn/basic-syntax/">官方文档</a></p><h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><p>Markdown是一种轻量级标记语言，排版语法简洁，让人们更多地关注内容本身而非排版。它使用易读易写的纯文本格式编写文档，可与HTML混编，可导出 HTML、PDF 以及本身的 .md 格式的文件。因简洁、高效、易读、易写，Markdown被大量使用，如Github、Wikipedia、简书等。</p><p>Markdown 是 HTML 的一种简写，在显示时会『解压缩』成 HTML。理论上你可以在 Markdown 里直接插入合法的 HTML 块，他们会成为最终的 HTML 的一部分，做到 Markdown 本身做不到的事。<br>Markdown 的格式可以由 CSS 描述</p><h1 id="标题语法"><a href="#标题语法" class="headerlink" title="标题语法"></a>标题语法</h1><p>要创建标题，请在单词或短语前面添加# 。#的数量代表了标题的级别<br>用一个空格在#和标题之间进行分隔。</p><h1 id="强调语法"><a href="#强调语法" class="headerlink" title="强调语法"></a>强调语法</h1><p>粗体（Bold）加斜体（Italic）</p><p>要加粗文本，请在单词或短语的前后各添加三个星号（asterisks）</p><h1 id="删除线"><a href="#删除线" class="headerlink" title="删除线"></a>删除线</h1><p>删除线就是给文本加上删除线，在文本两端使用两个波浪线~</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~~文本~~</span><br></pre></td></tr></tbody></table></figure><p><del>文本</del></p><h1 id="引用语法"><a href="#引用语法" class="headerlink" title="引用语法"></a>引用语法</h1><p>要创建块引用，请在段落前添加一个&gt;符号。</p><h1 id="列表语法"><a href="#列表语法" class="headerlink" title="列表语法"></a>列表语法</h1><p>要创建无序列表，请在每个列表项前面添加破折号 (-)、星号 (*) 或加号 (+) 。缩进一个或多个列表项可创建嵌套列表。</p><h1 id="围栏代码块"><a href="#围栏代码块" class="headerlink" title="围栏代码块"></a>围栏代码块</h1><p>在代码块之前和之后的行上使用三个反引号（(```）或三个波浪号（~~~）。</p><p>在反引号后面加上语言的名字就可以享受到对应语言的语法高亮。</p><p>用反引号括起来，反引号是英文输入下，tab的上一个键</p><h1 id="分隔线"><a href="#分隔线" class="headerlink" title="分隔线"></a>分隔线</h1><p>在单独一行上使用三个或多个星号 (***)、破折号 (—) 或下划线 (___) ，并且不能包含其他内容。为了兼容性，请在分隔线的前后均添加空白行</p><h1 id="链接语法"><a href="#链接语法" class="headerlink" title="链接语法"></a>链接语法</h1><p>超链接Markdown语法代码：[超链接显示名](超链接地址 “超链接title”)<br>使用尖括号可以很方便地把URL或者email地址变成可点击的链接。</p><h1 id="转义字符语法"><a href="#转义字符语法" class="headerlink" title="转义字符语法"></a>转义字符语法</h1><p>要显示原本用于格式化 Markdown 文档的字符，请在字符前面添加反斜杠字符 \ 。</p><h1 id="图片语法"><a href="#图片语法" class="headerlink" title="图片语法"></a>图片语法</h1><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">![ddfdfd](图片链接 "图片title")</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h1 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h1><p>Markdown 制作表格使用 | 来分隔不同的单元格，使用 - 来分隔表头和其他行。</p><h2 id="hexo文章"><a href="#hexo文章" class="headerlink" title="hexo文章"></a>hexo文章</h2><p>表格要与正文空两行才可以渲染</p><h2 id="表格的对齐方式"><a href="#表格的对齐方式" class="headerlink" title="表格的对齐方式"></a>表格的对齐方式</h2><p>-: 设置内容和标题栏居右对齐。<br>:- 设置内容和标题栏居左对齐。<br>:-: 设置内容和标题栏居中对齐。</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">| 左对齐 | 右对齐 | 居中对齐 |</span><br><span class="line">| :-----| ----: | :----: |</span><br><span class="line">| 单元格 | 单元格 | 单元格 |</span><br><span class="line">| 单元格 | 单元格 | 单元格 |</span><br></pre></td></tr></tbody></table></figure><h1 id="任务列表"><a href="#任务列表" class="headerlink" title="任务列表"></a>任务列表</h1><p>任务列表项之前添加破折号-和方括号[ ]，并在[ ]前面加上空格。要选择一个复选框，请在方括号[x]之间添加 x 。</p><ul><li><input checked="" disabled="" type="checkbox"> Write the press release</li><li><input disabled="" type="checkbox"> Update the website</li><li><input disabled="" type="checkbox"> Contact the media<h1 id="使用-Emoji-表情"><a href="#使用-Emoji-表情" class="headerlink" title="使用 Emoji 表情"></a>使用 Emoji 表情</h1>复制使用<br><a href="https://emojipedia.org/">https://emojipedia.org/</a></li></ul><p><a href="https://gist.github.com/rxaviers/7360908">https://gist.github.com/rxaviers/7360908</a></p>]]></content>
      
      
      <categories>
          
          <category> 知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vscode使用</title>
      <link href="/2022/01093653.html"/>
      <url>/2022/01093653.html</url>
      
        <content type="html"><![CDATA[<h1 id="vscode快捷键"><a href="#vscode快捷键" class="headerlink" title="vscode快捷键"></a>vscode快捷键</h1><p>F1 或 Ctrl+Shift+P（俗称万能键）  ：打开命令面板</p><h2 id="编辑器与窗口管理"><a href="#编辑器与窗口管理" class="headerlink" title="编辑器与窗口管理"></a>编辑器与窗口管理</h2><p>新建文件:   Ctrl+N</p><p>文件之间切换:   Ctrl+Tab</p><p>打开一个新的VS Code编辑器:    Ctrl+Shift+N</p><p>关闭当前窗口:   Ctrl+W</p><p>关闭当前的VS Code编辑器:   Ctrl+Shift+W</p><p>切出一个新的编辑器窗口(分屏–最多3个):   Ctrl+\</p><p>切换左中右3个编辑器窗口的快捷键:   Ctrl+1  Ctrl+2  Ctrl+3</p><h2 id="格式调整"><a href="#格式调整" class="headerlink" title="格式调整"></a>格式调整</h2><p>代码行向左或向右缩进:   Ctrl+[ 、 Ctrl+] </p><p>复制或剪切当前行/当前选中内容:   Ctrl+C 、 Ctrl+V</p><p>代码格式化:   Shift+Alt+F</p><p>向上或向下移动一行:   Alt+Up 或 Alt+Down</p><p>向上或向下复制一行:   Shift+Alt+Up 或 Shift+Alt+Down</p><p>在当前行下方插入一行:   Ctrl+Enter</p><p>在当前行上方插入一行:   Ctrl+Shift+Enter</p><h2 id="光标相关"><a href="#光标相关" class="headerlink" title="光标相关"></a>光标相关</h2><p>移动到行首:   Home</p><p>移动到行尾:   End</p><p>移动到文件结尾:   Ctrl+End</p><p>移动到文件开头:   Ctrl+Home</p><p>移动到定义处:   F12</p><p>查看定义处缩略图(只看一眼而不跳转过去):    Alt+F12</p><p>选择从光标到行尾的内容:   Shift+End</p><p>选择从光标到行首的内容： Shift+Home</p><p>删除光标右侧的所有内容(当前行):   Ctrl+Delete</p><p>扩展/缩小选取范围： Shift+Alt+Right 和 Shift+Alt+Left</p><p>多行编辑(列编辑):   Alt+Shift+鼠标左键 或 Ctrl+Alt+Down/Up</p><p>同时选中所有匹配编辑(与当前行或选定内容匹配):   Ctrl+Shift+L</p><p>下一个匹配的也被选中:   Ctrl+D</p><p>回退上一个光标操作:   Ctrl+U</p><p>撤销上一步操作: Ctrl+Z</p><p>手动保存:   Ctrl+S</p><h2 id="重构代码"><a href="#重构代码" class="headerlink" title="重构代码"></a>重构代码</h2><p>找到所有的引用:   Shift+F12</p><p>同时修改本文件中所有匹配的:   Ctrl+F2</p><p>跳转到下一个 Error 或 Warning:   当有多个错误时可以按 F8 逐个跳转</p><h2 id="查找替换"><a href="#查找替换" class="headerlink" title="查找替换"></a>查找替换</h2><p>查找:   Ctrl+F</p><p>查找替换:   Ctrl+H</p><h2 id="显示相关"><a href="#显示相关" class="headerlink" title="显示相关"></a>显示相关</h2><p>全屏显示(再次按则恢复):   F11</p><p>放大或缩小(以编辑器左上角为基准):   Ctrl +/-</p><p>侧边栏显示或隐藏： Ctrl+B</p><p>显示资源管理器(光标切到侧边栏中才有效):   Ctrl+Shift+E</p><p>显示搜索(光标切到侧边栏中才有效):   Ctrl+Shift+F</p><p>显示源代码管理(光标切到侧边栏中才有效):    Ctrl+Shift+G+G</p><p>显示 Debug:    Ctrl+Shift+D</p><p>显示 Output:    Ctrl+Shift+U</p><h1 id="插件推荐"><a href="#插件推荐" class="headerlink" title="插件推荐"></a>插件推荐</h1><h2 id="Beautify"><a href="#Beautify" class="headerlink" title="Beautify"></a>Beautify</h2><p>按下f1打开命令，搜索Beautify，点击Beautify file美化整个文件。代码被自动换行，也进行了格式化。这个美化操作支持多种格式的源代码。</p><h2 id="Bracket-Pair-Colorizer："><a href="#Bracket-Pair-Colorizer：" class="headerlink" title="Bracket Pair Colorizer："></a>Bracket Pair Colorizer：</h2><p>给匹配的括号着色</p><h2 id="Indent-Rainbow"><a href="#Indent-Rainbow" class="headerlink" title="Indent-Rainbow"></a>Indent-Rainbow</h2><p>让缩进带有颜色</p><h2 id="Material-Icon-Theme"><a href="#Material-Icon-Theme" class="headerlink" title="Material Icon Theme"></a>Material Icon Theme</h2><p>好看的文件图标</p><h2 id="Path-Intellisense"><a href="#Path-Intellisense" class="headerlink" title="Path Intellisense"></a>Path Intellisense</h2><p>自动补全文件名</p><h2 id="A-super-translate"><a href="#A-super-translate" class="headerlink" title="A-super-translate"></a>A-super-translate</h2><p>划词翻译。鼠标停留选中几秒就会查看翻译内容。</p><h2 id="会了吧"><a href="#会了吧" class="headerlink" title="会了吧"></a>会了吧</h2><p>打开源码可以自动分析所有包含的英语单词，并显示解释结果，还可以添加已经会的单词。</p><h2 id="background"><a href="#background" class="headerlink" title="background"></a>background</h2><p>加入设置的setting.json</p><figure class="highlight json"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">    <span class="string">"background.enabled"</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="string">"background.useDefault"</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="string">"background.customImages"</span>: [</span><br><span class="line">    <span class="string">"file:///E:/wenke_source/my picture/壁纸.jpg"</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="string">"background.style"</span>: {</span><br><span class="line">    <span class="attr">"content"</span>: <span class="string">"''"</span>,</span><br><span class="line">    <span class="attr">"pointer-events"</span>: <span class="string">"none"</span>,</span><br><span class="line">    <span class="attr">"position"</span>: <span class="string">"absolute"</span>,</span><br><span class="line">    <span class="attr">"top"</span>: <span class="string">"0"</span>,</span><br><span class="line">    <span class="attr">"right"</span>: <span class="string">"0"</span>,</span><br><span class="line">    <span class="attr">"background-size"</span>: <span class="string">"cover"</span>,</span><br><span class="line">    <span class="attr">"opacity"</span>: <span class="number">0.1</span>,</span><br><span class="line">    <span class="attr">"z-index"</span>: <span class="string">"99999"</span>,</span><br><span class="line">    <span class="attr">"width"</span>: <span class="string">"100%"</span>,</span><br><span class="line">    <span class="attr">"height"</span>: <span class="string">"100%"</span>,</span><br><span class="line">    <span class="attr">"background-repeat"</span>: <span class="string">"no-repeat"</span>,</span><br><span class="line">},</span><br><span class="line"><span class="string">"bracketPairColorizer.depreciation-notice"</span>: <span class="literal">false</span></span><br></pre></td></tr></tbody></table></figure><h2 id="Settings-Sync"><a href="#Settings-Sync" class="headerlink" title="Settings Sync"></a>Settings Sync</h2><p>用于同步不同电脑或环境下的配置。</p><h3 id="用Github账户登录"><a href="#用Github账户登录" class="headerlink" title="用Github账户登录"></a>用Github账户登录</h3><h3 id="创建一个新的GIST或选择存在的GIST"><a href="#创建一个新的GIST或选择存在的GIST" class="headerlink" title="创建一个新的GIST或选择存在的GIST"></a>创建一个新的GIST或选择存在的GIST</h3><p>上传配置<br>按下 Shift + Alt + U</p><p>下载配置<br>按下 Shift + Alt + D</p><h2 id="Material-Icon-Theme：美化文件图标"><a href="#Material-Icon-Theme：美化文件图标" class="headerlink" title="Material Icon Theme：美化文件图标"></a>Material Icon Theme：美化文件图标</h2><h2 id="Image-Preview-实时预览图片"><a href="#Image-Preview-实时预览图片" class="headerlink" title="Image Preview 实时预览图片"></a>Image Preview 实时预览图片</h2><h2 id="IntelliCode-Extension-Visual-Studio-Code中使用Jupyter-Notebook"><a href="#IntelliCode-Extension-Visual-Studio-Code中使用Jupyter-Notebook" class="headerlink" title="IntelliCode&nbsp;Extension   Visual Studio Code中使用Jupyter Notebook"></a>IntelliCode&nbsp;Extension   Visual Studio Code中使用Jupyter Notebook</h2><h2 id="Path-Intellisense-可自动填充文件名。"><a href="#Path-Intellisense-可自动填充文件名。" class="headerlink" title="Path Intellisense    可自动填充文件名。"></a>Path Intellisense    可自动填充文件名。</h2><h2 id="小技巧"><a href="#小技巧" class="headerlink" title="小技巧"></a>小技巧</h2><p>1.查看函数或者类的定义<br>Ctrl+鼠标左键点击函数名或者类名即可跳转到定义处，在函数名或者类名上按F12也可以实现同样功能</p><p>2.更改变量名<br>在变量名上按F2即可实现重命名变量</p><p>4.添加注释<br>注释有两种形式，单行注释和块注释(在js中，单行注释//,块注释/**/)<br>单行注释&nbsp; Ctrl +/</p><h1 id="开发"><a href="#开发" class="headerlink" title="开发"></a>开发</h1><h2 id="用户代码片段-snippets-语法"><a href="#用户代码片段-snippets-语法" class="headerlink" title="用户代码片段  snippets 语法"></a>用户代码片段  snippets 语法</h2><p><a href="https://mp.weixin.qq.com/s/abJg5w1XtWxo42qIfweIFg">原文</a></p><figure class="highlight json"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">{</span><br><span class="line">    <span class="attr">"alpha"</span>: {</span><br><span class="line">        <span class="attr">"prefix"</span>: [<span class="string">"a"</span>, <span class="string">"z"</span>],</span><br><span class="line">        <span class="attr">"body"</span>: [</span><br><span class="line">            <span class="string">"abcdefghijklmnopqrstuvwxyz"</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="attr">"description"</span>: <span class="string">"字母"</span>,</span><br><span class="line">        <span class="attr">"scope"</span>: <span class="string">"javascript"</span></span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>prefix 是触发的前缀，可以指定多个<br>body 是插入到编辑器中的内容，支持很多语法<br>description 是描述<br>scope 是生效的语言，不指定的话就是所有语言都生效</p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vscode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python基础</title>
      <link href="/2022/010834543.html"/>
      <url>/2022/010834543.html</url>
      
        <content type="html"><![CDATA[<p><a href="https://gitee.com/wenkex/python">我的gittee中的python仓库</a></p><h1 id="pythontutor"><a href="#pythontutor" class="headerlink" title="pythontutor"></a>pythontutor</h1><p><a href="http://www.pythontutor.com/visualize.html">http://www.pythontutor.com/visualize.html</a><br>pythontutor它是一个能够指导Python学习的代码在线工具，可帮助学生攻克编程学习中的基础障碍，<br>理解每一行源代码在程序执行时在计算机中的过程。通过这个工具，可以直接在 Web 浏览器中编写 Python 代码，并一步一步可视化地执行程序。</p><h1 id="anaconda介绍"><a href="#anaconda介绍" class="headerlink" title="anaconda介绍"></a>anaconda介绍</h1><p>Anaconda 是一个用于python/R科学计算和机器学习的开源工具(也称为Python的一种发行版)，支持 Linux, macOS, Windows, 包含了conda等众多工具包及其依赖项，提供了包管理与环境管理的功能，可以很方便地解决多版本python并存、切换以及各种第三方包安装问题</p><h1 id="Windows系统安装Anaconda"><a href="#Windows系统安装Anaconda" class="headerlink" title="Windows系统安装Anaconda"></a>Windows系统安装Anaconda</h1><p>下载：<a href="https://docs.anaconda.com/anaconda/install/windows/">https://docs.anaconda.com/anaconda/install/windows/</a></p><h2 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h2><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">E:\anaconda</span><br><span class="line">E:\anaconda\Scripts</span><br><span class="line">E:\anaconda\Library\bin</span><br></pre></td></tr></tbody></table></figure><p>查看Anaconda中当前存在的环境<br>conda info -e 或者 conda-env list<br>创建：conda create -n python27 python=2.7<br>切换：activate python27<br>更新conda：conda update conda<br>更新第三方所有包：conda upgrade –all</p><p>浏览器驱动放在D:\ruanjian\anaconda\Scripts</p><h1 id="conda"><a href="#conda" class="headerlink" title="conda"></a>conda</h1><p>conda是一种开源的包和环境管理系统。</p><p>适用语言：Python, R, Ruby, Lua, Scala, Java, JavaScript, C/ C++, FORTRAN*<br>适用平台：Windows, macOS, Linux</p><h2 id="包管理"><a href="#包管理" class="headerlink" title="包管理"></a>包管理</h2><p>作为包管理工具，conda将所有的工具和第三方程序都当作包来管理；<br>conda 可以快速安装，运行和更新包及其相关的依赖关系。</p><h2 id="环境管理"><a href="#环境管理" class="headerlink" title="环境管理"></a>环境管理</h2><p>conda也是一个环境管理工具， 可以创建多个虚拟环境，并基于工作目的在切换环境使用不同版本的工具包。例如，电脑上除了默认版本的Python，还可以创建其他各种版本python封闭环境，并在这些python版本之间进行快速切换。</p><p>&nbsp;pip<br>维护多个环境难度较大。<br>pip是用于安装和管理软件包的包管理器。</p><h1 id="添加清华源"><a href="#添加清华源" class="headerlink" title="添加清华源"></a>添加清华源</h1><figure class="highlight cmd"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/</span><br><span class="line">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/ </span><br><span class="line">conda config --<span class="built_in">set</span> show_channel_urls yes</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p><code>conda info #查看当前channel</code></p><h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><p><a href="https://blog.csdn.net/xiaoanzi123/article/details/108261285">https://blog.csdn.net/xiaoanzi123/article/details/108261285</a></p><p>conda 版本查看<br>conda –version</p><p>创建一个名为python36的环境，并安装Python 3.6<br>conda create –name python36 python=3.6</p><p>查看现有的环境<br>conda info –envs</p><p>激活环境：要使用管理员模式运行<br>conda activate env_name</p><p>退出环境：<br>conda deactivate</p><h1 id="Jupyter-Notebook使用"><a href="#Jupyter-Notebook使用" class="headerlink" title="Jupyter Notebook使用"></a>Jupyter Notebook使用</h1><p>Anaconda已经自动为你安装了Jupter Notebook及其他工具</p><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>Jupyter Notebook是以网页的形式打开，可以在网页页面中直接编写代码和运行代码，代码的运行结果也会直接在代码块下显示的程序。如在编程过程中需要编写说明文档，可在同一个页面中直接编写，便于作及时的说明和解释。</p><p>Jupyter Notebook中所有交互计算、编写说明文档、数学公式、图片以及其他富媒体形式的输入和输出，都是以文档的形式体现的。这些文档是保存为后缀名为.ipynb的JSON格式文件，不仅便于版本控制，也方便与他人共享。此外，文档还可以导出为：HTML、LaTeX、PDF等格式。</p><p>编程时具有语法高亮、缩进、tab补全的功能。</p><p>可直接通过浏览器运行代码，同时在代码块下方展示运行结果。</p><p>以富媒体格式展示计算结果。富媒体格式包括：HTML，LaTeX，PNG，SVG等。</p><p>对代码编写说明文档或语句时，支持Markdown语法。</p><p>支持使用LaTeX编写数学性说明。</p><h2 id="Jupyter-Notebook笔记本的两种模式"><a href="#Jupyter-Notebook笔记本的两种模式" class="headerlink" title="Jupyter Notebook笔记本的两种模式"></a>Jupyter Notebook笔记本的两种模式</h2><h3 id="命令模式"><a href="#命令模式" class="headerlink" title="命令模式"></a>命令模式</h3><p>命令模式将键盘命令与Jupyter Notebook笔记本命令相结合，可以通过键盘不同键的组合运行笔记本的命令。<br>按esc键进入命令模式。<br>命令模式下，单元格边框为灰色，且左侧边框线为蓝色粗线条。</p><p>命令模式快捷键</p><p>回车进入编辑模式</p><p>ctrl+回车    运行当前cell</p><p>dd          删除当前cell</p><p>y          切换cell类型为Code</p><p>m         切换cell类型为Markdown</p><p>b       下方插入cell</p><h3 id="编辑模式"><a href="#编辑模式" class="headerlink" title="编辑模式"></a>编辑模式</h3><p>编辑模式使用户可以在单元格内编辑代码或文档。<br>按enter或return键进入编辑模式。<br>编辑模式下，单元格边框和左侧边框线均为绿色。</p><h1 id="python基础语法"><a href="#python基础语法" class="headerlink" title="python基础语法"></a>python基础语法</h1><h1 id="异常处理"><a href="#异常处理" class="headerlink" title="异常处理"></a>异常处理</h1><p>AttributeError 试图访问一个对象没有的树形，比如foo.x，但是foo没有属性x<br>IOError 输入/输出异常；基本上是无法打开文件<br>ImportError 无法引入模块或包；基本上是路径问题或名称错误<br>IndentationError 语法错误（的子类） ；代码没有正确对齐<br>IndexError 下标索引超出序列边界，比如当x只有三个元素，却试图访问x[5]<br>KeyError 试图访问字典里不存在的键<br>KeyboardInterrupt Ctrl+C被按下<br>NameError 使用一个还未被赋予对象的变量<br>SyntaxError Python代码非法，代码不能编译(个人认为这是语法错误，写错了）<br>TypeError 传入对象类型与要求的不符合<br>UnboundLocalError 试图访问一个还未被设置的局部变量，基本上是由于另有一个同名的全局变量，<br>导致你以为正在访问它<br>ValueError 传入一个调用者不期望的值，即使值的类型是正确的</p><p>语法：<br>try:<br>                   # 正常的操作。<br>except name：<br> 如果在try部份触发了’name’异常，执行这块代码。<br>else:<br>                  # 如果没有异常执行这块代码<br>finally:<br> 无论有没有异常都会执行</p><h1 id="模块（module）"><a href="#模块（module）" class="headerlink" title="模块（module）"></a>模块（module）</h1><p>以.py作为文件后缀。任何py文件都可以作为一个模块。</p><p>使用python模块大大提高了代码的可维护性和代码复用性<br>使用模块避免了函数名与变量名冲突。</p><p>将整个模块导入，格式为： import a</p><p>从某个模块中导入某个函数,格式为： from a import b </p><h2 id="import-与-from…import"><a href="#import-与-from…import" class="headerlink" title="import 与 from…import"></a>import 与 from…import</h2><p>在 python 用 import 或者 from…import 来导入相应的模块。</p><p>将整个模块(somemodule)导入，格式为： import somemodule</p><p>从某个模块中导入某个函数,格式为： from somemodule import somefunction</p><p>从某个模块中导入多个函数,格式为： from somemodule import firstfunc, secondfunc, thirdfunc</p><p>将某个模块中的全部函数导入，格式为： from somemodule import *</p><h2 id="模块的说明文档"><a href="#模块的说明文档" class="headerlink" title="模块的说明文档"></a>模块的说明文档</h2><p>模块的说明文档放在py文件的开头，用成对的三个英文单引号引起来：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">模块的说明文档放在这里。</span></span><br><span class="line"><span class="string">'''</span></span><br></pre></td></tr></tbody></table></figure><p>然后我们可以用模块的__doc__属性来访问模块的说明文档：</p><h2 id="模块的路径"><a href="#模块的路径" class="headerlink" title="模块的路径"></a>模块的路径</h2><p>对于用 importi语句导入的模块， Python会按照下面的路径列表顺序地查找我们需要的模块</p><ol><li>当前的工作目录</li><li>PYTHONPATH（环境变量）中的每一个目录</li><li>Python默认的安装目录</li></ol><h2 id="包-package"><a href="#包-package" class="headerlink" title="包( package)"></a>包( package)</h2><p>在比較大型的项目中常常需要编写、用到大量的模块，此时我们可以使用包( Package)来管理这些模块。</p><p>里面装了一个_init_.Py文件的文件夹。</p><p>1.import 包名[.模块名[as别名]</p><p>2.from 包名 import 模块名[as别名]</p><p>3.from 包名.模块名 import成员名[as别名]</p><p>我们在导入包的时候，实际上是导入了它的 Init.py文件文件。</p><h2 id="init-Py文件性质"><a href="#init-Py文件性质" class="headerlink" title="init.Py文件性质"></a><em>init</em>.Py文件性质</h2><p>这个模块的模块名不是__init__，而是这个包的名字，也就是装着__init__.py文件的文件夹的名字。</p><p>它的作用是将一个文件夹变为一个Python模块</p><h1 id="Python正则表达式最强整理（速查手册，记得收藏）"><a href="#Python正则表达式最强整理（速查手册，记得收藏）" class="headerlink" title="Python正则表达式最强整理（速查手册，记得收藏）"></a>Python正则表达式最强整理（速查手册，记得收藏）</h1><h2 id="一、校验数字的表达式"><a href="#一、校验数字的表达式" class="headerlink" title="一、校验数字的表达式"></a>一、校验数字的表达式</h2><p>数字：^[0-9]*$</p><p>n位的数字：^\d{n}$</p><p>至少n位的数字：^\d{n,}$</p><p>m-n位的数字：^\d{m,n}$</p><p>零和非零开头的数字：^(0|[1-9][0-9]*)$</p><p>非零开头的最多带两位小数的数字：^([1-9][0-9]*)+(.[0-9]{1,2})?$</p><p>带1-2位小数的正数或负数：^(-)?\d+(.\d{1,2})?$</p><p>正数、负数、和小数：^(-|+)?\d+(.\d+)?$</p><p>有两位小数的正实数：^[0-9]+(.[0-9]{2})?$</p><p>有1~3位小数的正实数：^[0-9]+(.[0-9]{1,3})?$</p><p>非零的正整数：^[1-9]\d*$ 或 ^([1-9][0-9]<em>){1,3}$ 或 ^+?[1-9][0-9]</em>$</p><p>非零的负整数：^-[1-9][]0-9”<em>$ 或 ^-[1-9]\d</em>$</p><p>非负整数：^\d+$ 或 ^[1-9]\d*|0$</p><p>非正整数：^-[1-9]\d*|0$ 或 ^((-\d+)|(0+))$</p><p>非负浮点数：^\d+(.\d+)?$ 或 ^[1-9]\d<em>.\d</em>|0.\d*[1-9]\d*|0?.0+|0$</p><p>非正浮点数：^((-\d+(.\d+)?)|(0+(.0+)?))$ 或 ^(-([1-9]\d<em>.\d</em>|0.\d*[1-9]\d*))|0?.0+|0$</p><p>正浮点数：^[1-9]\d<em>.\d</em>|0.\d*[1-9]\d*$ 或 ^(([0-9]+.[0-9]<em>[1-9][0-9]</em>)|([0-9]<em>[1-9][0-9]<em>.[0-9]+)|([0-9]</em>[1-9][0-9]</em>))$</p><p>负浮点数：^-([1-9]\d<em>.\d</em>|0.\d*[1-9]\d*)$ 或 ^(-(([0-9]+.[0-9]<em>[1-9][0-9]</em>)|([0-9]<em>[1-9][0-9]<em>.[0-9]+)|([0-9]</em>[1-9][0-9]</em>)))$</p><p>浮点数：^(-?\d+)(.\d+)?$ 或 ^-?([1-9]\d<em>.\d</em>|0.\d*[1-9]\d*|0?.0+|0)$</p><h2 id="二、校验字符的表达式"><a href="#二、校验字符的表达式" class="headerlink" title="二、校验字符的表达式"></a>二、校验字符的表达式</h2><p>汉字：^[\u4e00-\u9fa5]{0,}$</p><p>英文和数字：^[A-Za-z0-9]+$ 或 ^[A-Za-z0-9]{4,40}$</p><p>长度为3-20的所有字符：^.{3,20}$</p><p>由26个英文字母组成的字符串：^[A-Za-z]+$</p><p>由26个大写英文字母组成的字符串：^[A-Z]+$</p><p>由26个小写英文字母组成的字符串：^[a-z]+$</p><p>由数字和26个英文字母组成的字符串：^[A-Za-z0-9]+$</p><p>由数字、26个英文字母或者下划线组成的字符串：^\w+$ 或 ^\w{3,20}</p><p>中文、英文、数字包括下划线：^[\u4E00-\u9FA5A-Za-z0-9_]+$</p><p>中文、英文、数字但不包括下划线等符号：^[\u4E00-\u9FA5A-Za-z0-9]+$ 或 ^[\u4E00-\u9FA5A-Za-z0-9]{2,20}$</p><p>可以输入含有^%&amp;’,;=?$"等字符：[^%&amp;’,;=?$\x22]+</p><p>禁止输入含有<del>的字符[^</del>\x22]+<br>其它：</p><p>.*匹配除&nbsp;\n&nbsp;以外的任何字符。<br>/[\u4E00-\u9FA5]/&nbsp;汉字<br>/[\uFF00-\uFFFF]/&nbsp;全角符号<br>/[\u0000-\u00FF]/&nbsp;半角符号</p><h2 id="三、特殊需求表达式"><a href="#三、特殊需求表达式" class="headerlink" title="三、特殊需求表达式"></a>三、特殊需求表达式</h2><p>Email地址：^\w+([-+.]\w+)*@\w+([-.]\w+)<em>.\w+([-.]\w+)</em>$</p><p>域名：[a-zA-Z0-9][-a-zA-Z0-9]{0,62}(/.[a-zA-Z0-9][-a-zA-Z0-9]{0,62})+/.?</p><p>InternetURL：[a-zA-z]+://[^\s]* 或 ^http://([\w-]+.)+[\w-]+(/[\w-./?%&amp;=]*)?$</p><p>手机号码：^(13[0-9]|14[5|7]|15[0|1|2|3|5|6|7|8|9]|18[0|1|2|3|5|6|7|8|9])\d{8}$</p><p>电话号码(“XXX-XXXXXXX”、”XXXX-XXXXXXXX”、”XXX-XXXXXXX”、”XXX-XXXXXXXX”、”XXXXXXX”和”XXXXXXXX)：^((\d{3,4}-)|\d{3.4}-)?\d{7,8}$</p><p>国内电话号码(0511-4405222、021-87888822)：\d{3}-\d{8}|\d{4}-\d{7}</p><p>身份证号(15位、18位数字)：^\d{15}|\d{18}$</p><p>短身份证号码(数字、字母x结尾)：^([0-9]){7,18}(x|X)?$ 或 ^\d{8,18}|[0-9x]{8,18}|[0-9X]{8,18}?$</p><p>帐号是否合法(字母开头，允许5-16字节，允许字母数字下划线)：^[a-zA-Z][a-zA-Z0-9_]{4,15}$</p><p>密码(以字母开头，长度在6~18之间，只能包含字母、数字和下划线)：^[a-zA-Z]\w{5,17}$</p><p>强密码(必须包含大小写字母和数字的组合，不能使用特殊字符，长度在8-10之间)：^(?=.<em>\d)(?=.</em>[a-z])(?=.*[A-Z]).{8,10}$</p><p>日期格式：^\d{4}-\d{1,2}-\d{1,2}</p><p>一年的12个月(01～09和1～12)：^(0?[1-9]|1[0-2])$</p><p>一个月的31天(01～09和1～31)：^((0?[1-9])|((1|2)[0-9])|30|31)$</p><p>钱的输入格式：<br>1.有四种钱的表示形式我们可以接受:”10000.00” 和 “10,000.00”, 和没有 “分” 的 “10000” 和 “10,000”：^[1-9][0-9]*$</p><p>2.这表示任意一个不以0开头的数字,但是,这也意味着一个字符”0”不通过,所以我们采用下面的形式：^(0|[1-9][0-9]*)$</p><p>3.一个0或者一个不以0开头的数字.我们还可以允许开头有一个负号：^(0|-?[1-9][0-9]*)$</p><p>4.这表示一个0或者一个可能为负的开头不为0的数字.让用户以0开头好了.把负号的也去掉,因为钱总不能是负的吧.下面我们要加的是说明可能的小数部分：^[0-9]+(.[0-9]+)?$</p><p>5.必须说明的是,小数点后面至少应该有1位数,所以”10.”是不通过的,但是 “10” 和 “10.2” 是通过的：^[0-9]+(.[0-9]{2})?$</p><p>6.这样我们规定小数点后面必须有两位,如果你认为太苛刻了,可以这样：^[0-9]+(.[0-9]{1,2})?$</p><p>7.这样就允许用户只写一位小数.下面我们该考虑数字中的逗号了,我们可以这样：^[0-9]{1,3}(,[0-9]{3})*(.[0-9]{1,2})?$</p><p>8.1到3个数字,后面跟着任意个 逗号+3个数字,逗号成为可选,而不是必须：^([0-9]+|[0-9]{1,3}(,[0-9]{3})<em>)(.[0-9]{1,2})?$<br>（搜索公众号Java后端，回复“2021”，送你一份Java面试题宝典）<br>备注：这就是最终结果了,别忘了+可以用</em>替代如果你觉得空字符串也可以接受的话(奇怪,为什么?)最后,别忘了在用函数时去掉去掉那个反斜杠,一般的错误都在这里</p><p>xml文件：^([a-zA-Z]+-?)+[a-zA-Z0-9]+\.[x|X][m|M][l|L]$</p><p>中文字符的正则表达式：[\u4e00-\u9fa5]</p><p>双字节字符：[^\x00-\xff]&nbsp;(包括汉字在内，可以用来计算字符串的长度(一个双字节字符长度计2，ASCII字符计1))</p><p>空白行的正则表达式：\n\s*\r&nbsp;(可以用来删除空白行)</p><p>HTML标记的正则表达式：&lt;(\S*?)[^&gt;]<em>&gt;.</em>?&lt;/\1&gt;|&lt;.*? /&gt;&nbsp;(网上流传的版本太糟糕，上面这个也仅仅能部分，对于复杂的嵌套标记依旧无能为力)</p><p>首尾空白字符的正则表达式：^\s*|\s*$或(^\s*)|(\s*$)&nbsp;(可以用来删除行首行尾的空白字符(包括空格、制表符、换页符等等)，非常有用的表达式)</p><p>腾讯QQ号：[1-9][0-9]{4,}&nbsp;(腾讯QQ号从10000开始)</p><p>中国邮政编码：[1-9]\d{5}(?!\d)&nbsp;(中国邮政编码为6位数字)</p><p>IP地址：\d+.\d+.\d+.\d+&nbsp;(提取IP地址时有用)</p><p>IP地址：((?:(?:25[0-5]|2[0-4]\d|[01]?\d?\d)\.){3}(?:25[0-5]|2[0-4]\d|[01]?\d?\d))</p><p>IP-v4地址：\b(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\b&nbsp;(提取IP地址时有用)</p><p>校验IP-v6地址:(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))</p><p>子网掩码：((?:(?:25[0-5]|2[0-4]\d|[01]?\d?\d)\.){3}(?:25[0-5]|2[0-4]\d|[01]?\d?\d))</p><p>校验日期:^(?:(?!0000)[0-9]{4}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1[0-9]|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[0-9]{2}(?:0[48]|[2468][048]|[13579][26])|(?:0[48]|[2468][048]|[13579][26])00)-02-29)$(“yyyy-mm-dd“ 格式的日期校验，已考虑平闰年。)</p><p>抽取注释：<!--(.*?)--></p><p>查找CSS属性:^\s*[a-zA-Z\-]+\s*[:]{1}\s[a-zA-Z0-9\s.#]+[;]{1}</p><p>提取页面超链接:(&lt;a\s*(?!.<em>\brel=)[^&gt;]</em>)(href=”https?:\/\/)((?!(?:(?:www\.)?’.implode(‘|(?:www\.)?’, $follow_list).’))[^” rel=”external nofollow” ]+)”((?!.<em>\brel=)[^&gt;]</em>)(?:[^&gt;]*)&gt;</p><p>提取网页图片:\&lt; <em>[img][^\\&gt;]</em>[src] *= <em>[\“\‘]{0,1}([^\“\‘\ &gt;]</em>)</p><p>提取网页颜色代码:^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$</p><p>文件扩展名效验:^([a-zA-Z]\:|\\)\\([^\\]+\\)<em>[^\/:</em>?”&lt;&gt;|]+\.txt(l)?$</p><p>判断IE版本：^.*MSIE <a href="?:%5C.%5B0-9%5D+">5-8</a>?(?!.<em>Trident\/[5-9]\.0).</em>$</p>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AutoJS</title>
      <link href="/2022/010827358.html"/>
      <url>/2022/010827358.html</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.its203.com/searchArticle">https://www.its203.com/searchArticle</a></p><h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>1.快捷打开无障碍，长按两个音量键三秒</p><p>如何打开控制台<br>依次点击 帮助—–切换开发者工具——console</p><p>查找控件存不存在使用exists ()。一般情况下Autojs生成的代码是：if (text(“刷视频赚”).exists()) {}，不建议这样写，有很多时候找不到或者是有多个文字一样的内容故：let earnVideo= className(“android.widget.TextView”).text(“刷视频赚”).findOnce();这样写准确率更高。</p><p>为什么有时候launchApp(‘应用名’);会失效<br>第一,这是因为你手机存在同名软件.找不到你想要的app，要使用launch(‘应用包名’)。第二,是因为你没有给软件(后台弹出界面)权限</p><p>auto.waitFor();语句增加是非常必要的这个在你没有无障碍时候会提示你无障碍模式的开启。并且开启之后,会接着继续运行.</p><p>AutoJs创建项目后打包成Apk后Apk无<br>法运行。 AutoJs单文件打包成Apk说是风险Apk。<br>这个问题现在已经比较好解决了.就是使用AUTO.JS Pro版本即可.</p><p><a href="https://mp.weixin.qq.com/s/nUgyBkn9kZYamnRuSkzMlg">https://mp.weixin.qq.com/s/nUgyBkn9kZYamnRuSkzMlg</a></p><h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p><a href="https://blog.autojs.org/">博客</a><br><a href="https://hyb1996.github.io/AutoJs-Docs/#/">文档</a></p><p>Appium 和 Airtest 编写的自动化脚本都依赖于 PC 端运行，没有办法直接运行在移动端；无障碍服务需要单独创建一个 Android 项目，没有完整的使用文档，使用起来有一定的门槛</p><p>AutoJS 它通过编写 JavaScript 脚本，结合系统的「 无障碍服务 」对 App 进行自动化操作</p><p>脚本文件体积小，可以打包成 APK 直接安装</p><p>拥有丰富的 UI 组件用于构建 GUI 界面</p><p>非 Root 设备也能完成自动化操作，可以摆脱 PC 直接运行</p><p>提供多种元素定位方式，可以适配各种机型</p><p>官方文档非常详细，学习成本低</p><h1 id="vscode插件"><a href="#vscode插件" class="headerlink" title="vscode插件"></a>vscode插件</h1><p>Auto.js-VSCodeExt</p><p>Auto.js-VSCodeExt-Fixed<br>对插件 Auto.js-VSCodeExt 进行了部分优化</p><p>Autojs Clipboard<br>同步手机剪贴板到电脑剪贴板</p><p>然后，使用 VS Code 快捷键「 Ctrl/Command + Shift + P 」，选择「 Auto.js:Start Server 」开启 AutoJS 服务</p><p>在同一wifi下无法连接，手机开热点给电脑，即可连接</p><h3 id="7-0版本"><a href="#7-0版本" class="headerlink" title="7.0版本"></a>7.0版本</h3><h1 id="常用"><a href="#常用" class="headerlink" title="常用"></a>常用</h1><p>//打开应用<br>launchApp(“微信”)</p><p>//用浏览器打开网站url。<br>app.openUrl(url)</p><h1 id="基于控件的操作"><a href="#基于控件的操作" class="headerlink" title="基于控件的操作"></a>基于控件的操作</h1><h2 id="UiSelector（选择器）"><a href="#UiSelector（选择器）" class="headerlink" title="UiSelector（选择器）"></a>UiSelector（选择器）</h2><p>用于通过各种条件选取屏幕上的控件，再对这些控件进行点击、长按等动作</p><p>通常用一个唯一的属性来定位一个控件</p><h2 id="UiObject"><a href="#UiObject" class="headerlink" title="UiObject"></a>UiObject</h2><p>UiObject表示一个控件，可以通过这个对象获取到控件的属性，也可以对控件进行点击、长按等操作。</p><p>获取一个UiObject通常通过选择器的findOne(), findOnce()等函数，也可以通过UiCollection来获取，或者通过UiObject.child(), UiObject.parent()等函数来获取一个控件的子控件或父控件。</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">text("微信").findOne()  //返回的时一个控件对象，想要操作这个控件，其属性必须为true</span><br></pre></td></tr></tbody></table></figure><h3 id="bounds"><a href="#bounds" class="headerlink" title="bounds()"></a>bounds()</h3><p>返回 Rect<br>返回控件在屏幕上的范围，其值是一个Rect对象。</p><h2 id="Rect"><a href="#Rect" class="headerlink" title="Rect"></a>Rect</h2><p>UiObject.bounds(), UiObject.boundsInParent()返回的对象。表示一个长方形(范围)。</p><h3 id="Rect-centerX"><a href="#Rect-centerX" class="headerlink" title="Rect.centerX()"></a>Rect.centerX()</h3><p>返回 {number}<br>长方形中点x坐标。</p><h3 id="Rect-centerY"><a href="#Rect-centerY" class="headerlink" title="Rect.centerY()"></a>Rect.centerY()</h3><p>返回 {number}<br>长方形中点y坐标。</p><h2 id="控件属性"><a href="#控件属性" class="headerlink" title="控件属性"></a>控件属性</h2><p>className 类名。类名表示一个控件的类型，例如文本控件为”android.widget.TextView”, 图片控件为”android.widget.ImageView”等。</p><p>packageName 包名。包名表示控件所在的应用包名，例如QQ界面的控件的包名为”com.tencent.mobileqq”。</p><p>bounds 控件在屏幕上的范围。<br>drawingOrder 控件在父控件的绘制顺序。<br>indexInParent 控件在父控件的位置。<br>clickable 控件是否可点击。<br>longClickable 控件是否可长按。<br>checkable 控件是否可勾选。<br>checked 控件是否可已勾选。<br>scrollable 控件是否可滑动。<br>selected 控件是否已选择。<br>editable 控件是否可编辑。<br>visibleToUser 控件是否可见。<br>enabled 控件是否已启用。<br>depth 控件的布局深度。</p><h2 id="对选取的控件进行操作"><a href="#对选取的控件进行操作" class="headerlink" title="对选取的控件进行操作"></a>对选取的控件进行操作</h2><p>click(text[, i])<br>text {string} 要点击的文本<br>i {number} 如果相同的文本在屏幕中出现多次，则i表示要点击第几个文本, i从0开始计算</p><p>click() 点击。点击一个控件，前提是这个控件的clickable属性为true<br>longClick() 长按。长按一个控件，前提是这个控件的longClickable属性为true<br>setText() 设置文本，用于编辑框控件设置文本。<br>scrollForward();<br>scrollBackward() 滑动。滑动一个控件(列表等), 前提是这个控件的scrollable属性为true<br>exits() 判断控件是否存在<br>waitFor() 等待控件出现</p><p>//确保无障碍服务已启用。<br>auto.waitFor()  //直接提示你无障碍模式的开启。</p><h2 id="click-text-i"><a href="#click-text-i" class="headerlink" title="click(text[, i])"></a>click(text[, i])</h2><p>text {string} 要点击的文本<br>i {number} 如果相同的文本在屏幕中出现多次，则i表示要点击第几个文本, i从0开始计算<br><code>while(!click("扫一扫"));</code></p><h1 id="免root手机的三种模拟滑动方式"><a href="#免root手机的三种模拟滑动方式" class="headerlink" title="免root手机的三种模拟滑动方式"></a>免root手机的三种模拟滑动方式</h1><h2 id="开发者模式的指针位置"><a href="#开发者模式的指针位置" class="headerlink" title="开发者模式的指针位置"></a>开发者模式的指针位置</h2><p>P: X / Y P就是 pointers ; x 是 current number pointers, y 是 max number pointers ，这些都是指在一个完整gesture中的。也就是，当同时用三手指触摸时x=y=3，而当只抬起一根手指时，当前屏幕上只有两根手指了，但是整个手势事件中最大pointers数是3，所以，x=2，y=3。显示为P:2/3</p><p>X:640.9   Y:1250.9  X是active pointer的X轴坐标；Y是active pointer的Y轴坐标。当多点触摸时只有一个pointer是激活pointer（ActivePointer），所以X，Y表示的就是这个ActivePointer的X和Y轴坐标。dX和dY分别代表整个手势结束后活动点（ActivePointer）在X轴和Y轴方向上起始点到终止点的差值，其中X轴上从左到右为正值，Y轴上从上到下是正值，否则为负值。</p><h2 id="swipe-x1-y1-x2-y2-duration"><a href="#swipe-x1-y1-x2-y2-duration" class="headerlink" title="swipe(x1, y1, x2, y2, duration)"></a>swipe(x1, y1, x2, y2, duration)</h2><p><code>duration</code> {number} 滑动时长，单位毫秒<br>模拟从坐标(x1, y1)滑动到坐标(x2, y2)，并返回是否成功。只有滑动操作执行完成时脚本才会继续执行。</p><h2 id="gesture-duration-x1-y1-x2-y2-…"><a href="#gesture-duration-x1-y1-x2-y2-…" class="headerlink" title="gesture(duration, [x1, y1], [x2, y2], …)"></a>gesture(duration, [x1, y1], [x2, y2], …)</h2><p> <code>duration</code> {number} 手势的时长<br> [x, y] … 手势滑动路径的一系列坐标</p><p>模拟手势操作。例如<code>gesture(1000, [0, 0], [500, 500], [500, 1000])</code>为模拟一个从(0, 0)到(500, 500)到(500, 100)的手势操作，时长为2秒。</p><h2 id="gestures-delay1-duration1-x1-y1-x2-y2-…-delay2-duration2-x3-y3-x4-y4-…-…"><a href="#gestures-delay1-duration1-x1-y1-x2-y2-…-delay2-duration2-x3-y3-x4-y4-…-…" class="headerlink" title="gestures([delay1, duration1, [x1, y1], [x2, y2], …], [delay2, duration2, [x3, y3], [x4, y4], …], …)"></a>gestures([delay1, duration1, [x1, y1], [x2, y2], …], [delay2, duration2, [x3, y3], [x4, y4], …], …)</h2><p>同时模拟多个手势。每个手势的参数为[delay, duration, 坐标], delay为延迟多久(毫秒)才执行该手势；duration为手势执行时长；坐标为手势经过的点的坐标。</p><p>其中delay参数可以省略，默认为0。</p><p>例如手指捏合：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gestures([0, 500, [800, 300], [500, 1000]],</span><br><span class="line">         [0, 500, [300, 1500], [500, 1000]]);</span><br></pre></td></tr></tbody></table></figure><h1 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h1><h1 id="对象"><a href="#对象" class="headerlink" title="对象"></a>对象</h1><h1 id="模块"><a href="#模块" class="headerlink" title="模块"></a>模块</h1><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> m = <span class="built_in">require</span>(<span class="string">"m.js"</span>);</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> 自动化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 自动 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>鸿蒙开发</title>
      <link href="/2022/010839456.html"/>
      <url>/2022/010839456.html</url>
      
        <content type="html"><![CDATA[<h2 id="HarmonyOS概述"><a href="#HarmonyOS概述" class="headerlink" title="HarmonyOS概述"></a>HarmonyOS概述</h2><p>HarmonyOS是一款面向万物互联时代的、全新的分布式操作系统。<br>在传统的单设备系统能力基础上，HarmonyOS提出了基于同一套系统能力、适配多种终端形态的分布式理念，能够支持手机、平板、智能穿戴、智慧屏、车机等多种终端设备，提供全场景（移动办公、运动健康、社交通信、媒体娱乐等）业务能力。</p><h2 id="HarmonyOS有三大特征："><a href="#HarmonyOS有三大特征：" class="headerlink" title="HarmonyOS有三大特征："></a>HarmonyOS有三大特征：</h2><h3 id="硬件互助，资源共享"><a href="#硬件互助，资源共享" class="headerlink" title="硬件互助，资源共享"></a>硬件互助，资源共享</h3><h4 id="分布式软总线"><a href="#分布式软总线" class="headerlink" title="分布式软总线"></a>分布式软总线</h4><p>分布式软总线是手机、平板、智能穿戴、智慧屏、车机等分布式设备的通信基座，为设备之间的互联互通提供了统一的分布式通信能力，</p><p>典型应用场景举例：</p><p>智能家居场景：在烹饪时，手机可以通过碰一碰和烤箱连接，并将自动按照菜谱设置烹调参数，控制烤箱来制作菜肴。与此类似，料理机、油烟机、空气净化器、空调、灯、窗帘等都可以在手机端显示并通过手机控制。设备之间即连即用，无需繁琐的配置。<br>多屏联动课堂：老师通过智慧屏授课，与学生开展互动，营造课堂氛围；学生通过平板完成课程学习和随堂问答。统一、全连接的逻辑网络确保了传输通道的高带宽、低时延、高可靠。</p><h4 id="分布式设备虚拟化"><a href="#分布式设备虚拟化" class="headerlink" title="分布式设备虚拟化"></a>分布式设备虚拟化</h4><p>分布式设备虚拟化平台可以实现不同设备的资源融合、设备管理、数据处理，多种设备共同形成一个超级虚拟终端。针对不同类型的任务，为用户匹配并选择能力合适的执行硬件，让业务连续地在不同设备间流转，充分发挥不同设备的能力优势</p><p>典型应用场景举例：</p><p>视频通话场景：在做家务时接听视频电话，可以将手机与智慧屏连接，并将智慧屏的屏幕、摄像头与音箱虚拟化为本地资源，替代手机自身的屏幕、摄像头、听筒与扬声器，实现一边做家务、一边通过智慧屏和音箱来视频通话。<br>游戏场景：在智慧屏上玩游戏时，可以将手机虚拟化为遥控器，借助手机的重力传感器、加速度传感器、触控能力，为玩家提供更便捷、更流畅的游戏体验。</p><h4 id="分布式数据管理"><a href="#分布式数据管理" class="headerlink" title="分布式数据管理"></a>分布式数据管理</h4><p>分布式数据管理基于分布式软总线的能力，实现应用程序数据和用户数据的分布式管理。用户数据不再与单一物理设备绑定，业务逻辑与数据存储分离，跨设备的数据处理如同本地数据处理一样方便快捷，让开发者能够轻松实现全场景、多设备下的数据存储、共享和访问，为打造一致、流畅的用户体验创造了基础条件。分布式数据管理示意图见图3。</p><p>典型应用场景举例：</p><p>协同办公场景：将手机上的文档投屏到智慧屏，在智慧屏上对文档执行翻页、缩放、涂鸦等操作，文档的最新状态可以在手机上同步显示。<br>照片分享场景：出游时，使用手机拍摄的照片，可以在登录了同帐号的其他设备，比如平板上更方便地浏览、收藏、保存或编辑，也可以通过家中的智慧屏上同家人一起分享记录下的快乐瞬间。</p><h4 id="分布式任务调度"><a href="#分布式任务调度" class="headerlink" title="分布式任务调度"></a>分布式任务调度</h4><p>分布式任务调度基于分布式软总线、分布式数据管理、分布式Profile等技术特性，构建统一的分布式服务管理（发现、同步、注册、调用）机制，支持对跨设备的应用进行远程启动、远程调用、远程连接以及迁移等操作，能够根据不同设备的能力、位置、业务运行状态、资源使用情况，以及用户的习惯和意图，选择合适的设备运行分布式任务。</p><p>图4以应用迁移为例，简要地展示了分布式任务调度能力。</p><p>典型应用场景举例：</p><p>导航场景：如果用户驾车出行，上车前，在手机上规划好导航路线；上车后，导航自动迁移到车机和车载音箱；下车后，导航自动迁移回手机。如果用户骑车出行，在手机上规划好导航路线，骑行时手表可以接续导航。<br>外卖场景：在手机上点外卖后，可以将订单信息迁移到手表上，随时查看外卖的配送状态。</p><h3 id="一次开发，多端部署"><a href="#一次开发，多端部署" class="headerlink" title="一次开发，多端部署"></a>一次开发，多端部署</h3><p>HarmonyOS通过组件化和小型化等设计方法，支持多种终端设备按需弹性部署，能够适配不同类别的硬件资源和功能需求。支撑通过编译链关系去自动生成组件化的依赖关系，形成组件树依赖图，支撑产品系统的便捷开发，降低硬件设备的开发门槛。</p><p>支持各组件的选择（组件可有可无）：根据硬件的形态和需求，可以选择所需的组件。<br>支持组件内功能集的配置（组件可大可小）：根据硬件的资源情况和功能需求，可以选择配置组件中的功能集。例如，选择配置图形框架组件中的部分控件。<br>支持组件间依赖的关联（平台可大可小）：根据编译链关系，可以自动生成组件化的依赖关系。例如，选择图形框架组件，将会自动选择依赖的图形引擎组件等。</p><h3 id="统一OS，弹性部署"><a href="#统一OS，弹性部署" class="headerlink" title="统一OS，弹性部署"></a>统一OS，弹性部署</h3><p>对设备开发者而言，HarmonyOS采用了组件化的设计方案，可根据设备的资源能力和业务特征灵活裁剪，满足不同形态终端设备对操作系统的要求。</p><h2 id="技术架构"><a href="#技术架构" class="headerlink" title="技术架构"></a>技术架构</h2><p>HarmonyOS整体遵从分层设计，从下向上依次为：内核层、系统服务层、框架层和应用层。系统功能按照“系统 &gt; 子系统 &gt; 功能/模块”逐级展开，在多设备部署场景下，支持根据实际需求裁剪某些非必要的子系统或功能/模块。</p><h3 id="内核层"><a href="#内核层" class="headerlink" title="内核层"></a>内核层</h3><p>内核子系统：HarmonyOS采用多内核设计，支持针对不同资源受限设备选用适合的OS内核。内核抽象层（KAL，Kernel Abstract Layer）通过屏蔽多内核差异，对上层提供基础的内核能力，包括进程/线程管理、内存管理、文件系统、网络管理和外设管理等。<br>驱动子系统：硬件驱动框架（HDF）是HarmonyOS硬件生态开放的基础，提供统一外设访问能力和驱动开发、管理框架。</p><h3 id="系统服务层"><a href="#系统服务层" class="headerlink" title="系统服务层"></a>系统服务层</h3><p>系统服务层是HarmonyOS的核心能力集合，通过框架层对应用程序提供服务。该层包含以下几个部分：</p><p>系统基本能力子系统集：为分布式应用在HarmonyOS多设备上的运行、调度、迁移等操作提供了基础能力，由分布式软总线、分布式数据管理、分布式任务调度、方舟多语言运行时、公共基础库、多模输入、图形、安全、AI等子系统组成。其中，方舟运行时提供了C/C++/JS多语言运行时和基础的系统类库，也为使用方舟编译器静态化的Java程序（即应用程序或框架层中使用Java语言开发的部分）提供运行时。<br>基础软件服务子系统集：为HarmonyOS提供公共的、通用的软件服务，由事件通知、电话、多媒体、DFX（Design For X） 、MSDP&amp;DV等子系统组成。<br>增强软件服务子系统集：为HarmonyOS提供针对不同设备的、差异化的能力增强型软件服务，由智慧屏专有业务、穿戴专有业务、IoT专有业务等子系统组成。<br>硬件服务子系统集：为HarmonyOS提供硬件服务，由位置服务、生物特征识别、穿戴专有硬件服务、IoT专有硬件服务等子系统组成。<br>根据不同设备形态的部署环境，基础软件服务子系统集、增强软件服务子系统集、硬件服务子系统集内部可以按子系统粒度裁剪，每个子系统内部又可以按功能粒度裁剪。</p><h3 id="框架层"><a href="#框架层" class="headerlink" title="框架层"></a>框架层</h3><p>框架层为HarmonyOS应用开发提供了Java/C/C++/JS/TS等多语言的用户程序框架和Ability框架，两种UI框架（包括适用于Java语言的Java UI框架、适用于JS/TS语言的方舟开发框架），以及各种软硬件服务对外开放的多语言框架API。根据系统的组件化裁剪程度，HarmonyOS设备支持的API也会有所不同。</p><h3 id="应用层"><a href="#应用层" class="headerlink" title="应用层"></a>应用层</h3><p>应用层包括系统应用和第三方非系统应用。HarmonyOS的应用由一个或多个FA（Feature Ability）或PA（Particle Ability）组成。其中，FA有UI界面，提供与用户交互的能力；而PA无UI界面，提供后台运行任务的能力以及统一的数据访问抽象。FA在进行用户交互时所需的后台数据访问也需要由对应的PA提供支撑。基于FA/PA开发的应用，能够实现特定的业务功能，支持跨设备调度与分发，为用户提供一致、高效的应用体验。</p><h2 id="用户应用程序包结构"><a href="#用户应用程序包结构" class="headerlink" title="用户应用程序包结构"></a>用户应用程序包结构</h2><p>HarmonyOS的用户应用程序包以APP Pack（Application Package）形式发布，它是由一个或多个HAP（HarmonyOS Ability Package）以及描述每个HAP属性的pack.info组成。HAP是Ability的部署包，HarmonyOS应用代码围绕Ability组件展开。</p><p>一个HAP是由代码、资源、第三方库及应用配置文件组成的模块包，可分为entry和feature两种模块类型，如图1所示。</p><p>entry：应用的主模块。一个APP中，对于同一设备类型，可以有一个或多个entry类型的HAP，来支持该设备类型中不同规格（如API版本、屏幕规格等）的具体设备。如果同一设备类型存在多个entry模块，则必须配置distroFilter分发规则，使得应用市场在做应用的云端分发时，对该设备类型下不同规格的设备进行精确分发。<br>feature：应用的动态特性模块。一个APP可以包含一个或多个feature类型的HAP，也可以不含。只有包含Ability的HAP才能够独立运行。</p><p><img src="https://gitee.com/wenkex/blogimage/raw/master/0000000000011111111.20211022162223.15380198014131508266643108297125.png"></p><h3 id="Ability"><a href="#Ability" class="headerlink" title="Ability"></a>Ability</h3><p>Ability是应用所具备的能力的抽象，一个应用可以包含一个或多个Ability。Ability分为两种类型：FA（Feature Ability）和PA（Particle Ability）。FA/PA是应用的基本组成单元，能够实现特定的业务功能。FA有UI界面，而PA无UI界面。</p><h3 id="库文件"><a href="#库文件" class="headerlink" title="库文件"></a>库文件</h3><p>库文件是应用依赖的第三方代码（例如so、jar、bin、har等二进制文件），存放在libs目录。</p><h3 id="资源文件"><a href="#资源文件" class="headerlink" title="资源文件"></a>资源文件</h3><p>应用的资源文件（字符串、图片、音频等）存放于resources目录下，便于开发者使用和维护，详见资源文件的分类。</p><h3 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h3><p>配置文件 (config.json) 是应用的Ability信息，用于声明应用的Ability，以及应用所需权限等信息，详见应用配置文件。</p><h3 id="pack-info"><a href="#pack-info" class="headerlink" title="pack.info"></a>pack.info</h3><p>描述应用软件包中每个HAP的属性，由IDE编译生成，应用市场根据该文件进行拆包和HAP的分类存储。HAP的具体属性包括：<br>delivery-with-install: 表示该HAP是否支持随应用安装。“true”表示支持随应用安装；“false”表示不支持随应用安装。<br>name：HAP文件名。<br>module-type：模块类型，entry或feature。<br>device-type：表示支持该HAP运行的设备类型。</p><h3 id="HAR"><a href="#HAR" class="headerlink" title="HAR"></a>HAR</h3><p>HAR（HarmonyOS Ability Resources）可以提供构建应用所需的所有内容，包括源代码、资源文件和config.json文件。HAR不同于HAP，HAR不能独立安装运行在设备上，只能作为应用模块的依赖项被引用。</p>]]></content>
      
      
      <categories>
          
          <category> 鸿蒙 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 鸿蒙 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML</title>
      <link href="/2022/010854626.html"/>
      <url>/2022/010854626.html</url>
      
        <content type="html"><![CDATA[<a class="btn-beautify button--animated " href="https://mp.weixin.qq.com/s/JH_kfBaMhvUTYIRCJY6XtQ" title="原文"><span>原文</span></a><h1 id="vscode编辑html"><a href="#vscode编辑html" class="headerlink" title="vscode编辑html"></a>vscode编辑html</h1><h2 id="添加用户代码片段"><a href="#添加用户代码片段" class="headerlink" title="添加用户代码片段"></a>添加用户代码片段</h2><h2 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h2><h3 id="open-in-brower"><a href="#open-in-brower" class="headerlink" title="open in brower"></a>open in brower</h3><p>按下快捷键ALT+B 即可在浏览器运行html</p><h3 id="HTMLHint"><a href="#HTMLHint" class="headerlink" title="HTMLHint"></a>HTMLHint</h3><p>错误提示</p><h3 id="html-snippets"><a href="#html-snippets" class="headerlink" title="html snippets"></a>html snippets</h3><p>常用html代码片段模板</p><h3 id="live-server"><a href="#live-server" class="headerlink" title="live server"></a>live server</h3><p>实时预览html文件</p><h3 id="Emmet"><a href="#Emmet" class="headerlink" title="Emmet"></a>Emmet</h3><p>vscode内置emmet功能,用来快速生成复杂的HTML代码，只要掌握一些常用的语法（类似于CSS选择器），就可以减少重复编码的工作。</p><p>调用方法：使用Tab作为自动生成HTML代码的触发器。</p><h3 id=""><a href="#" class="headerlink" title=""></a></h3><h2 id="beautify"><a href="#beautify" class="headerlink" title="beautify"></a>beautify</h2><p>格式化代码工具，美化javascript，JSON，CSS，Sass，和HTML</p><h1 id="HTML框架简介"><a href="#HTML框架简介" class="headerlink" title="HTML框架简介"></a>HTML框架简介</h1><h2 id="什么是HTML？"><a href="#什么是HTML？" class="headerlink" title="什么是HTML？"></a>什么是HTML？</h2><p>HTML:（HyperText Markup Language）【超文本标记语言】<br>狭义的HTML指的是网页；<br>广义的HTML指的是前端技术（html,css,js,以及各种框架）——网页，移动端网页，小程序，公众号，移动端的app，快应用等。</p><p>详细介绍：<br>HypertText：超文本——超出文本的范畴，简单地说，不仅仅是文本，还可以是图像，音频，视频，flash等等；<br>Markup：标记——网页中会有很多标记，不同的标记有不同的含义和功能，标记也叫标签，Html会包含各种各样的标签，这些标签不能乱写，必须写w3c规范中包含的标签。</p><h2 id="怎么学HTML？"><a href="#怎么学HTML？" class="headerlink" title="怎么学HTML？"></a>怎么学HTML？</h2><p>HTML是一门标记语言，标记语言由一套标记标签组成，学习HTML，就是学习标签。</p><h2 id="HTML文件的规范"><a href="#HTML文件的规范" class="headerlink" title="HTML文件的规范"></a>HTML文件的规范</h2><p>html文件以开始，以结尾，其他任何标签，需要写在和之间；<br>Html标签只包含两个子标签：head和body；<br>和网页设置相关的内容都写在head标签里；<br>需要显示的内容都写在body标签里；</p><h2 id="HTML的基本模板"><a href="#HTML的基本模板" class="headerlink" title="HTML的基本模板"></a>HTML的基本模板</h2><p>如果你再pycharm里新建一个html文件就会像下面这样！</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span>#文档类型的声明</span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span>#根标签,即文档的开始。lang（language），en(english)。声明语言类型是英语</span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span>#网页头部</span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span>#国际编码     meta配置  字符集编码的类型 </span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span>#网页标题</span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span>#网页的主体，可视化区域</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>说明</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span> 标签：作用：在html文件最前面进行声明，定义文档类型，告知浏览器用html规范去解析文档。</span><br><span class="line">在pycharm中编写HTML文件时，<span class="comment">&lt;!-- 要注释的内容--&gt;</span> 为注释，快捷键是Ctrl+/。</span><br><span class="line">在pycharm中编写HTML文件时，打标签时可直接打标签名，再Tab即可实现自动补全。 如：输入p,再Tab会自动补全为：<span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h1 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h1><h2 id="什么是标签？"><a href="#什么是标签？" class="headerlink" title="什么是标签？"></a>什么是标签？</h2><p><code>由尖括号包裹单词构成，如：&lt;html&gt;，所以标签不可能以数字开头。</code><br>标签不区分大小写，但推荐小写。<br>标签也称为元素。</p><h2 id="标签的使用样式："><a href="#标签的使用样式：" class="headerlink" title="标签的使用样式："></a>标签的使用样式：</h2><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">开始标签又称开放标签<span class="tag">&lt;<span class="name">a</span>&gt;</span>标签体<span class="tag">&lt;/<span class="name">a</span>&gt;</span>结束标签又称闭合标签或关标签</span><br><span class="line">自闭合标签/单标签，如：<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span>，<span class="tag">&lt;<span class="name">br</span>&gt;</span>等</span><br><span class="line"></span><br><span class="line">单标签有两种写法：</span><br><span class="line">   写法一：只写开标签即可<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">   写法二：在开标签的结尾写一个/，如<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h1 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h1><h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HTML注释符号是以 &lt;-- 开始以 --&gt; 结束的</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>学会高效读代码</title>
      <link href="/2022/010815003.html"/>
      <url>/2022/010815003.html</url>
      
        <content type="html"><![CDATA[<a class="btn-beautify button--animated larger" href="https://mp.weixin.qq.com/s/PpAfqjv7CDpDXHmcD6pAfw/" title="原文"><i class="far fa-hand-point-right"></i><span>原文</span></a><h2 id="为什么要会读代码？"><a href="#为什么要会读代码？" class="headerlink" title="为什么要会读代码？"></a>为什么要会读代码？</h2><p>如果我能比别人看的更远，只因为我站在巨人的肩上。<br>阅读代码，可能和写代码一样重要！<br>学校往往教授的是如何写代码，可能从没有教如何读代码。</p><p>然而，理想很丰满，现实很骨感！工作中，你写代码的时间可能只占工作时间很少很少的一部分，大部分时间你可能都是在阅读已有的代码，当然除非这个项目从0到1都是你一个人干，可即便是自己写代码，也是渐进增长、不断迭代的，也需要不断反复阅读自己写的代码。<br>大量阅读别人的代码，也能提升自己的编程水平。阅读代码，有这些好处：</p><div class="tabs" id="test4"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test4-1">博采众长</button></li><li class="tab"><button type="button" data-href="#test4-2">解决难题</button></li><li class="tab"><button type="button" data-href="#test4-3">开阔视野</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test4-1"><p>优秀的源码，就如传世佳作一样，值得反复揣摩，细细品味。其编写技巧、设计范式、架构思想，都具有极大的学习借鉴价值。比如一些优秀的开源项目：Linux内核、lwIP、u-boot等等。这些作品都汇集了全球优秀顶级程序员的思想智慧。都是非常优秀的作品，广为流传，广为应用。如果能花些时间去阅读理解一下其代码，一定是大有裨益的。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-2"><p>编程生涯中，总会遇到一些感动束手无策的场景。github，搜索都已无能为力的时候。如果说还没遇到，那一定是机缘未到～<br>比如做Linux编程的时候，遇到某个API出错，或许在网上查找半天，都找不到答案。实在找不到答案了，尝试读一读内核底层相关代码，有时候就能发现问题的原因。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-3"><p>很多时候，日常工作内容或许只是很小的领域，修复一些小的bug，修改一些小的功能等。如果只专注这些小的点，个人成长一定会受到局限。</p><p>如果能善于发现一些新的感兴趣的领域，并去阅读相关的代码，则一定会提升自己的编程能力的。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>找bug<br>review别人的代码<br>学习<br>维护等</p><h2 id="如何阅读代码呢？"><a href="#如何阅读代码呢？" class="headerlink" title="如何阅读代码呢？"></a>如何阅读代码呢？</h2><div class="tabs" id="test5"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test5-1">先粗后细</button></li><li class="tab"><button type="button" data-href="#test5-2">善做笔记</button></li><li class="tab"><button type="button" data-href="#test5-3">善用工具</button></li><li class="tab"><button type="button" data-href="#test5-4">多多调试</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test5-1"><p>我一般拿到一份别人的代码，会先去找这个项目的入口，先梳理个大概的脉络。如单片机程序，一般会从下面几个角度先扫一遍：</p><p>  main在哪里？<br>  开了几个任务？<br>  哪些是关键任务，主要功能链是怎么样的？<br>  任务间如何协作的？任务的执行周期是如何安排的？<br>  使用哪些硬件外设？<br>  使用了哪些中断？中断与哪些任务发生了交互？<br>  从软件角度看，大致有哪些子系统？<br>  是否有关键算法？<br>  是否使用开源组件？<br>  ……<br>先不关心很细的函数具体怎么写，数据结构是如何设计的？这样，我大致能先有一个总体认识，然后在对自己感兴趣的进行细读。当然如果是review别人的代码则就另当别论了。</p><p>如果是Linux应用程序，或者C++应用程序，我也大致采用差不多的思路，先读个大概，然后再细读。比如对一个Linux应用程序，会先了解这些方面的概要信息：</p><p>  入口在哪个文件？一般都是main函数。<br>  是否支持命令行传启动参数？<br>  是否是守护进程？<br>  开了哪些线程？<br>  大致有哪些子系统？<br>  使用了哪些开源组件？<br>  是否使用驱动，是否有通讯等？<br>  ……<br>如果项目采用cmake或者makefile进行组织的，那么先阅读下makefile也会是了解项目概要信息的一个比较好的切入点。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test5-2"><p>在阅读代码的概要信息的时候，我比较喜欢做做笔记，画画图。在阅读代码的时候，我比较喜欢先去研究代码中的数据结构。数据结构往往会体现作者抽象问题、对问题建模的一些思路，并使用UML图画出来，刚开始可能都不去看每个函数是怎么实现的，只关心与这些数据结构相关有哪些函数以及数据结构间关系。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test5-3"><p>比如source insght, vs code等工具，都是提高阅读代码效率的好工具。尽量熟悉如何使用键盘控制阅读跳转，用熟了，效率倍增。</p><p>另外，还有些工具，可以自动将代码转化成类图等，比如visual studio，可以自动绘制类图，Enterprise Architect也具有根据代码生成类图的功能。具有此类功能的软件还有很多。有兴趣可以搜索一下。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test5-4"><p>如果遇到有的代码，怎么看也理解不了。这时候可以试着加些打印日志，运行调试一下，也可以使用调试工具进行断点、单步调试，观察程序运行的轨迹，数据的变化情况，可能就找到了突破口。</p><p>或者尝试对原有的代码，做些小的修改，来印证理解，也是不错的方法。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>]]></content>
      
      
      <categories>
          
          <category> 知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 效率 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>内网穿透</title>
      <link href="/2022/01086932.html"/>
      <url>/2022/01086932.html</url>
      
        <content type="html"><![CDATA[<p>内网穿透是指将内网中的软件服务通过网络代理方式暴露给广域网用户。可以实现内网穿透的方式很多，比如通过防火墙硬件、网络穿透软件来进行实现。<br>先简单解释一下，大多数情况下，我们的个人电脑都处于内网，即没有可公开访问的独立 IP 地址（上网要通过其他网关），因此其他内网用户找不到你，就没办法和你建立连接。</p><p>而内网穿透的作用，就是将内网的电脑暴露到公共网络。可以理解为一个中间人，由于他知道你的电脑地址，所以能帮助其他用户访问到你的计算机。<br>「无公网IP实现外网访问内网群晖.docx」<br>链接：<a href="https://www.aliyundrive.com/s/ftxwXuv2SAi">https://www.aliyundrive.com/s/ftxwXuv2SAi</a><br>「开源内网穿透工具 frp 简单使用教程.docx」<br>链接：<a href="https://www.aliyundrive.com/s/3K6okzrMght">https://www.aliyundrive.com/s/3K6okzrMght</a><br>「常见内网穿透工具使用总结.docx」<br>链接：<a href="https://www.aliyundrive.com/s/DDhaPQfR6SS">https://www.aliyundrive.com/s/DDhaPQfR6SS</a><br>「使用内网穿透访问内网ssh图文教程.docx」<br>链接：<a href="https://www.aliyundrive.com/s/9U1Migig8yB">https://www.aliyundrive.com/s/9U1Migig8yB</a><br>「内网渗透之内网穿透.docx」<br>链接：<a href="https://www.aliyundrive.com/s/Uh88x4GSjz4">https://www.aliyundrive.com/s/Uh88x4GSjz4</a><br>「内网穿透神器NPS的使用.docx」<br>链接：<a href="https://www.aliyundrive.com/s/7XQUhDhPGBm">https://www.aliyundrive.com/s/7XQUhDhPGBm</a></p><p><a href="https://mp.weixin.qq.com/s/slxUTaFkdzfYK7auHxeyAA">参考</a></p><h2 id="nps-npc"><a href="#nps-npc" class="headerlink" title="nps-npc"></a>nps-npc</h2><a class="btn-beautify button--animated larger" href="https://www.aliyundrive.com/s/7XQUhDhPGBm" title="原文"><i class="far fa-hand-point-right"></i><span>原文</span></a><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>nps是一款轻量级、高性能、功能强大的内网穿透代理服务器。目前支持tcp、udp流量转发，可支持任何tcp、udp上层协议（访问内网网站、本地支付接口调试、ssh访问、远程桌面，内网dns解析等等……），此外还支持内网http代理、内网socks5代理、p2p等，并带有功能强大的web管理端。</p><ul><li><p>一台有公网IP的服务器（VPS）运行服务端（NPS）</p></li><li><p>一个或多个运行在内网的服务器或者PC运行客户端（NPC）</p><h3 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h3><p>Go语言编写</p></li></ul><p>支持跨平台</p><p>支持多种协议的代理</p><p>web管理端</p><h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><p>其官方网站为：<a href="https://ehang-io.github.io/nps">https://ehang-io.github.io/nps</a>其官网文档对软件的安装、使用描述的非常完整，基本根据官方文档就可以进行顺利安装与使用。<br>其官方网站为：<a href="https://ehang-io.github.io/nps">https://ehang-io.github.io/nps</a>其官网文档对软件的安装、使用描述的非常完整，基本根据官方文档就可以进行顺利安装与使用。</p><h2 id="NATAPP"><a href="#NATAPP" class="headerlink" title="NATAPP"></a>NATAPP</h2><a class="btn-beautify button--animated " href="https://mp.weixin.qq.com/s/-lnU1DM0CVQVAlU974xUPQ" title="原文"><span>原文</span></a><hr><h2 id="未整理"><a href="#未整理" class="headerlink" title="未整理"></a>未整理</h2><p>原文：<a href="https://zhuanlan.zhihu.com/p/303175108">https://zhuanlan.zhihu.com/p/303175108</a><br>首先解释一下“内网”与“外网”的概念：<br>内网：即所说的局域网，比如学校的局域网，局域网内每台计算机的IP地址在本局域网内具有互异性，是不可重复的。但两个局域网内的内网IP可以有相同的。<br>外网：即互联网，局域网通过一台服务器或是一个路由器对外连接的网络，这个IP地址是唯一的。也就是说内网里所有的计算机都是连接到这一个外网IP上，通过这一个外网IP对外进行交换数据的。也就是说，一个局域网里所有电脑的内网IP是互不相同的,但共用一个外网IP。（用ipconfig/all查到的IP是你本机的内网IP；在<a href="http://www.ip138.com上看到的是你连接互联网所使用的ip,即外网)./">http://www.ip138.com上看到的是你连接互联网所使用的IP，即外网）。</a></p><p>然后解释一下公有 IP 和私有 IP 的区别：<br>公有地址(Public address)：由 Inter NIC(Internet Network Information Center 因特网信息中心)负责。这些 IP 地址分配给注册并向Inter NIC提出申请的组织机构，公有 IP 全球唯一，通过它直接访问因特网(直接能上网)。<br>私有地址(Private address)：属于非注册地址，专门为组织机构内部使用，说白了，私有 IP 不能直接上网。<br>而我们平时通过运营商(电信、移动、联通宽带等)上网，家里面通过路由器分出来的 IP 都是私有 IP(局域网 IP)，大家可能会疑问，我们可以上网啊，怎么会是私有 IP 呢?租用(申请)公有 IP 是需要钱的。 运营商买了一些公有 IP，然后通过这些公有 IP 分出来，再分给一个一个的用户使用。这个过程有点类似于，我们去安装了宽度，通过路由器分出几个 IP，让好几个人都能上网，当然运营商通过公有 IP 分出来的过程肯定比这个复杂多了。所以，我们平时上网用的 IP 是私有 IP，真正拥有公有 IP 的是运营商(当然，我们可以租用一个公有 IP )。所以，A 家庭的局域网 IP 和 B 家庭的局域网 IP 相同很正常，但是，最终 A 和 B 能上网(数据走出去)还是通过运营商的公有 IP，毕竟，公有 IP 的资源有限，这一片区域的用户使用的很有可能(实际上就是这样的)是同一个公有 IP<br>最后需要解释一下端口映射：<br>端口映射是 NAT 的一种，它将外网主机的 IP 地址的一个端口映射到内网中一台机器，提供相应的服务。当用户访问该 IP 的这个端口时，服务器自动将请求映射到对应局域网内部的机器上。<br>之前提到的内网，是不能被外网直接的访问的，只能通过一些中转技术，让内网“假装”成外网。<br>这就平常所说的内网穿透。<br>内网穿透原理</p><p>内网穿透的概念</p><p>内网穿透，即NAT穿透，网络连接时术语，计算机是局域网内时，外网与内网的计算机节点需要连接通信，有时就会出现不支持内网穿透。就是说映射端口，能让外网的电脑找到处于内网的电脑，提高下载速度。不管是内网穿透还是其他类型的网络穿透，都是网络穿透的统一方法来研究和解决。</p><p>内网穿透原理<br>对于内网来说，其不是不能主动访问公网端口，而是不能反过来有效的被公网访问。内网穿透的主要思路就是利用这一点，让在内网的节点主动访问一个拥有公网IP地址的服务器，并由中间服务器搭桥，打通经过该服务器从其他主机到NAT之后节点的隧道。</p><p>有哪些应用场景<br>提供内网穿透服务<br>连接内网服务器，在外网演示内网web站点<br>无需服务器部署，快速调试本地程序，微信公众号开发利器<br>支持http、https协议站点，省去证书中间件复杂配置，http协议站点直接升级为https站点<br>支持TCP，UDP协议端口转发。支持数据库、SSH、远程桌面、网络摄像头等等开放到外网</p><p>建立隧道的工具</p><p>钉钉穿透</p><p>工具基于ngrok封装，简单、见效快，新手、个人开发者最佳选择</p><p>Ngrok<br>项目主页：<a href="https://ngrok.com/">https://ngrok.com/</a><br>项目介绍： 一个通过任何NAT或防火墙为您的本地主机服务器提供即时访问、安全的URL的命令。类似花生壳，分为服务端和客户端，也可以自己搭建服务端。开源，老牌穿透工具，源码很久没有更新了</p><p>Ssh&nbsp;配合autossh工具使用，因为autossh会容错<br>项目主页：<a href="http://www.harding.motd.ca/autossh/">http://www.harding.motd.ca/autossh/</a><br>项目介绍：自动重新启动SSH会话和隧道。autossh是一个程序，用于启动ssh的副本并进行监控，在死亡或停止传输流量时根据需要重新启动它。 这个想法来自rstunnel（Reliable SSH Tunnel），但是在C中实现。作者的观点是，它不像匆匆忙忙的工作那么容易。使用端口转发环路或远程回显服务进行连接监视。在遇到连接拒绝等快速故障时，关闭连接尝试的速度。在OpenBSD，Linux，Solaris，Mac OS X，Cygwin和AIX上编译和测试; 应该在其他BSD上工作。免费软件。<br>Natapp<br>项目主页：<a href="https://natapp.cn/">https://natapp.cn/</a><br>项目介绍：基于ngrok的国内收费内网穿透工具，4包卫龙辣条的费用可以享有不限流量，自定义域名等好处类似花生壳，有免费版本，比花生壳好。免费版本：提供http,https,tcp全隧道穿透，随机域名/TCP端口，不定时强制更换域名/端口，自定义本地端口</p><p>Spike<br>项目主页：<a href="https://github.com/slince/spike">https://github.com/slince/spike</a><br>项目介绍：Spike是一个可以用来将你的内网服务暴露在公网的快速的反向代理，基于ReactPHP，采用IO多路复用模型。采用Php实现。</p><p>个人不推荐<br>花生壳<br>项目主页：<a href="https://hsk.oray.com/">https://hsk.oray.com/</a><br>项目介绍：商业化比较成功的内网穿透。个人开发很不推荐，收费贵，企业可以考虑使用。<br>需要建立账号实名认证，支付2包卫龙辣条费用，可自选一个壳域名，注册过程比较麻烦，流量限制<br>Lanproxy<br>项目主页：<a href="https://github.com/ffay/lanproxy">https://github.com/ffay/lanproxy</a><br>项目介绍：lanproxy是一个将局域网个人电脑、服务器代理到公网的内网穿透工具，目前仅支持tcp流量转发，可支持任何tcp上层协议（访问内网网站、本地支付接口调试、ssh访问、远程桌面…）。目前市面上提供类似服务的有花生壳、TeamView、GoToMyCloud等等，但要使用第三方的公网服务器就必须为第三方付费，并且这些服务都有各种各样的限制，此外，由于数据包会流经第三方，因此对数据安全也是一大隐患。<br>Frp<br>项目主页：<a href="https://github.com/fatedier/frp">https://github.com/fatedier/frp</a><br>项目介绍：frp 是一个可用于内网穿透的高性能的反向代理应用，支持 tcp, udp, http, https 协议。利用处于内网或防火墙后的机器，对外网环境提供 http 或 https 服务。对于 http, https 服务支持基于域名的虚拟主机，支持自定义域名绑定，使多个域名可以共用一个80端口。利用处于内网或防火墙后的机器，对外网环境提供 tcp 和 udp 服务，例如在家里通过 ssh 访问处于公司内网环境内的主机。开源，强大牛逼，适合企业中开发使用，可穿透任意常规合法端口（包含22），需要提供云服务器，自己的域名，宽带上限由你的服务器所决定。</p><p>工具选择<br><a href="https://juejin.cn/post/6860694239412649991?share_token=26950be9-39b6-432c-b29a-a26df3e8cae4">https://juejin.cn/post/6860694239412649991?share_token=26950be9-39b6-432c-b29a-a26df3e8cae4</a><br>内网穿透工具比较(ngrok,frp,lanproxy,goproxy,nps)<br><a href="https://blog.csdn.net/a1035434631/article/details/108010819">https://blog.csdn.net/a1035434631/article/details/108010819</a></p><p>ngork<br>基本原理是通过客户端与公网服务端建立通道及映射关系，然后服务端提供可访问的公网地址。当外网访问此公网地址时，ngrok服务端根据映射关系找到客户端，然后转发给客户端的服务<br><a href="https://juejin.cn/post/6844903993911558157?share_token=1b8c42ab-1174-48a2-9122-00e008829d45">https://juejin.cn/post/6844903993911558157?share_token=1b8c42ab-1174-48a2-9122-00e008829d45</a></p>]]></content>
      
      
      <categories>
          
          <category> 知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 待分 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Javascript</title>
      <link href="/2022/01079809.html"/>
      <url>/2022/01079809.html</url>
      
        <content type="html"><![CDATA[<h1 id="JavaScript是什么"><a href="#JavaScript是什么" class="headerlink" title="JavaScript是什么"></a>JavaScript是什么</h1><p>JavaScript 是脚本语言，是一种轻量级的编程语言。</p><p>JavaScript 是可插入 HTML 页面的编程代码。插入 HTML 页面后，由浏览器执行。</p><h2 id="JavaScript的组成："><a href="#JavaScript的组成：" class="headerlink" title="JavaScript的组成："></a>JavaScript的组成：</h2><p>ECMAScript(语言基础，如：语法、数据类型结构以及一些内置对象)</p><p>DOM（一些操作页面元素的方法）</p><p>BOM（一些操作浏览器的方法）</p><h1 id="为什么学习-JavaScript"><a href="#为什么学习-JavaScript" class="headerlink" title="为什么学习 JavaScript?"></a>为什么学习 JavaScript?</h1><p>JavaScript 是 web 开发人员必须学习的 3 门语言中的一门：</p><p>HTML 定义了网页的内容<br>CSS 描述了网页的布局<br>JavaScript 控制了网页的行为</p><h1 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h1><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">HTML 中的脚本必须位于 &lt;script&gt; 与 &lt;/script&gt; 标签之间。</span><br><span class="line">&lt;script&gt; 和 &lt;/script&gt; 会告诉 JavaScript 在何处开始和结束。</span><br><span class="line">脚本可被放置在 HTML 页面的 &lt;body&gt; 和 &lt;head&gt; 部分中。</span><br></pre></td></tr></tbody></table></figure><h2 id="在-或者-的JavaScript"><a href="#在-或者-的JavaScript" class="headerlink" title="在  或者  的JavaScript"></a>在  或者  的JavaScript</h2><p>您可以在 HTML 文档中放入不限数量的脚本。</p><p>脚本可位于 HTML 的  或  部分中，或者同时存在于两个部分中。</p><p>通常的做法是把函数放入  部分中，或者放在页面底部。这样就可以把它们安置到同一处位置，不会干扰页面的内容。</p><h2 id=""><a href="#" class="headerlink" title=""></a></h2><p>外部的 JavaScript<br>也可以把脚本保存到外部文件中。外部文件通常包含被多个网页使用的代码。</p><p>外部 JavaScript 文件的文件扩展名是 .js。</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">如需使用外部文件，请在 &lt;script&gt; 标签的 <span class="string">"src"</span> 属性中设置该 .js 文件：</span><br><span class="line"></span><br><span class="line">你可以将脚本放置于 &lt;head&gt; 或者 &lt;body&gt;中，放在 &lt;script&gt; 标签中的脚本与外部引用的脚本运行效果完全一致。</span><br><span class="line"></span><br><span class="line">外部脚本不能包含 &lt;script&gt; 标签。</span><br></pre></td></tr></tbody></table></figure><h1 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h1><h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//单行注释</span><br><span class="line">多行注释以 /* 开始，以 */ 结尾。</span><br></pre></td></tr></tbody></table></figure><h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><p>变量必须以字母开头<br>变量也能以 $ 和 _ 符号开头（不过我们不推荐这么做）<br>变量名称对大小写敏感（y 和 Y 是不同的变量）<br>1.声明（创建） JavaScript 变量<br>我们使用 var 关键词来声明变量：</p><p>2.一条语句，多个变量<br>您可以在一条语句中声明很多变量。该语句以 var 开头，并使用逗号分隔变量即可：</p><p>var lastname=”Doe”, age=30, job=”carpenter”;</p><h3 id="局部变量"><a href="#局部变量" class="headerlink" title="局部变量"></a>局部变量</h3><p>在 JavaScript 函数内部声明的变量（使用 var）是局部变量，所以只能在函数内部访问它</p><p>局部变量生命期从被声明的时间开始。在函数运行以后被删除。</p><h1 id="JavaScript-对象"><a href="#JavaScript-对象" class="headerlink" title="JavaScript 对象"></a>JavaScript 对象</h1><p>JavaScript 对象是变量的容器。但是，我们通常认为 “JavaScript 对象是键值对的容器”。<br>对象也是一个变量，但对象可以包含多个值（多个变量），每个值以 name:value 对呈现。<br>总结：JavaScript 对象是属性和方法的容器。</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> car = {<span class="attr">name</span>:<span class="string">"Fiat"</span>, <span class="attr">model</span>:<span class="number">500</span>, <span class="attr">color</span>:<span class="string">"white"</span>};</span><br></pre></td></tr></tbody></table></figure><h2 id="对象属性"><a href="#对象属性" class="headerlink" title="对象属性"></a>对象属性</h2><p>键值对在 JavaScript 对象通常称为 对象属性。<br>访问对象属性<br>你可以通过两种方式访问对象属性:</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>person.lastName;</span><br><span class="line"><span class="number">2.</span>person[<span class="string">"lastName"</span>];</span><br></pre></td></tr></tbody></table></figure><h2 id="对象方法"><a href="#对象方法" class="headerlink" title="对象方法"></a>对象方法</h2><h1 id="JavaScript-函数"><a href="#JavaScript-函数" class="headerlink" title="JavaScript 函数"></a>JavaScript 函数</h1><p>函数就是包裹在花括号中的代码块，前面使用了关键词 function：<br>当您声明函数时，请把参数作为变量来声明：</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">myFunction</span>(<span class="params">var1,var2</span>)</span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">代码</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h1 id="条件语句"><a href="#条件语句" class="headerlink" title="条件语句"></a>条件语句</h1><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (condition1)</span><br><span class="line">{</span><br><span class="line">    当条件 <span class="number">1</span> 为 <span class="literal">true</span> 时执行的代码</span><br><span class="line">}</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (condition2)</span><br><span class="line">{</span><br><span class="line">    当条件 <span class="number">2</span> 为 <span class="literal">true</span> 时执行的代码</span><br><span class="line">}</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">{</span><br><span class="line">  当条件 <span class="number">1</span> 和 条件 <span class="number">2</span> 都不为 <span class="literal">true</span> 时执行的代码</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h1 id="循环语句"><a href="#循环语句" class="headerlink" title="循环语句"></a>循环语句</h1><p>for - 循环代码块一定的次数</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">for (语句 1; 语句 2; 语句 3)</span><br><span class="line">{</span><br><span class="line">    被执行的代码块</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>for/in - 循环遍历对象的属性<br>while - 当指定的条件为 true 时循环指定的代码块</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">while (条件)</span><br><span class="line">{</span><br><span class="line">    需要执行的代码</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>do/while - 同样当指定的条件为 true 时循环指定的代码块</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">do</span><br><span class="line">{</span><br><span class="line">    需要执行的代码</span><br><span class="line">}</span><br><span class="line">while (条件);</span><br></pre></td></tr></tbody></table></figure><h1 id="JavaScript-框架（库）"><a href="#JavaScript-框架（库）" class="headerlink" title="JavaScript 框架（库）"></a>JavaScript 框架（库）</h1><h1 id="ES6"><a href="#ES6" class="headerlink" title="ES6"></a>ES6</h1><h2 id="箭头函数"><a href="#箭头函数" class="headerlink" title="箭头函数"></a>箭头函数</h2><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//经典格式： 函数名 = ( 参数 ) =&gt; { 方法体 } </span></span><br><span class="line"><span class="keyword">const</span> sum3 = <span class="function">(<span class="params">x,y</span>)=&gt;</span>{ </span><br><span class="line">    <span class="keyword">return</span> x+y; </span><br><span class="line">}</span><br><span class="line"><span class="built_in">console</span>.log(sum3) </span><br><span class="line"> </span><br><span class="line"><span class="comment">//当方法体只有一行时，花括号可以省略： </span></span><br><span class="line"><span class="keyword">const</span> sum4 = <span class="function">(<span class="params">x,y</span>) =&gt;</span> x+y;  </span><br><span class="line"> </span><br><span class="line"><span class="built_in">console</span>.log(sum4) </span><br><span class="line"> </span><br><span class="line"><span class="comment">//当只有一个参数时，括号可以省略： </span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker入门</title>
      <link href="/2022/010511205.html"/>
      <url>/2022/010511205.html</url>
      
        <content type="html"><![CDATA[<h2 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h2><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>Docker 是一个开源的应用容器引擎，基于 GO 语言开发，开发者可以打包应用及依赖包到一个可移植的容器中，然后发布到任何操作系统的机器上，也可以实现虚拟化。</p><h3 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h3><p>容器是完全使用沙箱机制,相互之间不会有任何接口。<br>特点<br>随处运行：容器可以将代码与配置文件和相关依赖库进行打包，从而确保在任何环境下的运行都是一致的。</p><p>高资源利用率：容器提供进程级的隔离，因此可以更加精细地设置 CPU 和内存的使用率，进而更好地利用服务器的计算资源。</p><p>快速扩展：每个容器都可作为单独的进程予以运行，并且可以共享底层操作系统的系统资源，这样一来可以加快容器的启动和停止效率。</p><h3 id="与虚拟机的区别"><a href="#与虚拟机的区别" class="headerlink" title="与虚拟机的区别"></a>与虚拟机的区别</h3><p>容器与容器之间只是进程隔离，而虚拟机是完全的资源隔离；</p><p>运行空间，虚拟机一般要几 GB 到 几十 GB 的空间，而容器只需要 MB 级甚至 KB 级。</p><p>虚拟机的启动需要分钟级别，Docker 启动是秒级或者更短；</p><p>虚拟机虽然可以隔离出很多「子电脑」，但占用空间更大，启动更慢。虚拟机软件可能还要花钱，例如 VMWare。</p><p>容器技术不需要虚拟出整个操作系统，只需要虚拟一个小规模的环境，类似「沙箱」。</p><h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><h3 id="Docker-Client：客户端，命令行"><a href="#Docker-Client：客户端，命令行" class="headerlink" title="Docker Client：客户端，命令行"></a>Docker Client：客户端，命令行</h3><h3 id="Docker-Daemon：服务端守护进程，接受并处理来自客户端的消息"><a href="#Docker-Daemon：服务端守护进程，接受并处理来自客户端的消息" class="headerlink" title="Docker Daemon：服务端守护进程，接受并处理来自客户端的消息"></a>Docker Daemon：服务端守护进程，接受并处理来自客户端的消息</h3><h3 id="Docker-Image：镜像，相当于面向对象编程-类-的概念"><a href="#Docker-Image：镜像，相当于面向对象编程-类-的概念" class="headerlink" title="Docker Image：镜像，相当于面向对象编程 类 的概念"></a>Docker Image：镜像，相当于面向对象编程 类 的概念</h3><p>一个只读层被称为镜像，一个镜像是永久不会变的。因为 Docker 使用统一文件系统，Docker 进程认为整个文件系统是以读写方式挂载的，由于所有的变更都发生在顶层的可写层，所以下层的原始的只读镜像文件并未发生变化。</p><p>每一个镜像都可能依赖一个或者由多个下层镜像组成的另一个镜像。</p><h3 id="Docker-Container：容器，相当于面向对象编程-对象-的概念"><a href="#Docker-Container：容器，相当于面向对象编程-对象-的概念" class="headerlink" title="Docker Container：容器，相当于面向对象编程 对象 的概念"></a>Docker Container：容器，相当于面向对象编程 对象 的概念</h3><p>镜像运行后的进程。因为 Docker 的容器实在太轻量级了，很多时候用户都是随用随建，用完即删。</p><p><a href="https://mp.weixin.qq.com/s/3fuKKjLmsRRvJPUI88JNBw">参考</a></p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 容器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>软件</title>
      <link href="/2022/010422249.html"/>
      <url>/2022/010422249.html</url>
      
        <content type="html"><![CDATA[<h1 id="window软件"><a href="#window软件" class="headerlink" title="window软件"></a>window软件</h1><h2 id="everything"><a href="#everything" class="headerlink" title="everything"></a>everything</h2><p>本地快速搜索<br><a href="https://www.voidtools.com/zh-cn/">https://www.voidtools.com/zh-cn/</a></p><h2 id="uTools"><a href="#uTools" class="headerlink" title="uTools"></a>uTools</h2><p>是一个极简、插件化的现代桌面软件，通过自由选配丰富的插件，打造得心应手的工具集合。通过快捷键（默认 alt + space ）就可以快速呼出这个搜索框。你可以往输入框内粘贴文本、图片、截图、文件、文件夹等等，唤出超级面板即可使用插件</p><h3 id="插件推荐"><a href="#插件推荐" class="headerlink" title="插件推荐"></a>插件推荐</h3><p>图床<br>图床管理工具</p><ul><li><p>程序员手册<br>内置了十多个实用离线的中文文档。文档包括Linux、php、Python、Js等，还可以根据需要添加自己的文档，启用需要的文档。</p></li><li><p>Ctool<br>开发者常用功能</p></li><li><p>本地搜索</p></li></ul><p>搭配everything食用</p><ul><li><p>批量重命名</p></li><li><p>在线流程图 Diagram</p></li></ul><p>快速跳转至drawio，用于流程图绘制。</p><ul><li>知悉思维导图</li></ul><p>一个免费的思维导图插件，用于快速启动知犀思维导图网页，账号和uTools同步。主要是启动方便，而且还免费，市场上还有许多共享的资源。</p><ul><li>快捷命令</li></ul><p>插件介绍：快速打开软件，网站，运行shell命令等。我个人认为最牛x的还是直接运行代码，几乎支持所有的开发语言，程序员必备，有时候想调试一下代码片段，这个功能最方便了。可以去分享中心安装别人分享的快捷命名，有种逛油猴市场的感觉。</p><ul><li>自动化助手</li></ul><p>和上文快捷命令相似，只不过这个插件提供了其它实用的功能：图片去背景（removebg），图片一键上传到图床（目前支持路过图床和ＳＭ图床）</p><ul><li>Excalidraw 在线绘图白板</li></ul><p>在线绘图工具，漫画风格非常nice。非常适合用于绘制手稿和灵感！</p><ul><li><p>tinypng压缩图片<br>使用tinypng压缩图片，支持批量操作，鼠标选中，右键快捷操作。</p></li><li><p>图片聊天</p></li></ul><p>将文字转换为图片</p><h2 id="Caesium"><a href="#Caesium" class="headerlink" title="Caesium"></a>Caesium</h2><p><a href="https://mp.weixin.qq.com/s/dVpYpxuwrAfWA4vzj6PyAw">参考</a><br>Caesium是一款开源免费的无损压缩工具，它能够在保证图像质量的前提下，最大化压缩图像大小，节省存储空间。</p><p>Caesium目前支持Windows和macOS系统，因此，无论你是Windows用户还是macOS用户，都可以体验到它的强大。</p><p>Caesium的使用非常简单，直接打开要压缩的图片，选择输出文件夹即可，它支持单幅图压缩，也支持批量压缩。</p><h2 id="scrcpy投屏"><a href="#scrcpy投屏" class="headerlink" title="scrcpy投屏"></a>scrcpy投屏</h2><p><a href="https://github.com/Genymobile/scrcpy">Github地址</a></p><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p>手机数据线连接电脑后，开启usb调试，自动连接</p><p>鼠标右键是返回</p><p>要想卸载scrcpy,先在目录下进入cmd,输入adb kill-server,再删除整个scrcpy文件即可</p><p>adb功能异常，重启adb<br>（1）把adb服务杀死：adb kill-server<br>（2）重启adb服务：adb reconnect</p><h2 id="OOAPB"><a href="#OOAPB" class="headerlink" title="OOAPB"></a>OOAPB</h2><p>通过这个应用程序可以卸载在Windows10/11上预装的应用程序，应用无需安装，个人使用完全免费<br><a href="https://www.oo-software.com/en/ooappbuster">https://www.oo-software.com/en/ooappbuster</a></p><h2 id="大学出题2022"><a href="#大学出题2022" class="headerlink" title="大学出题2022"></a>大学出题2022</h2><p>优势：1.编辑题库，2.加入题库，3.生成试卷，4.自动生成答案，5.生成word，6.一键打印。<br>解锁新增试题，修改试题功能，比如你可以新增1000个题目，然后出5个题，系统会自动抽选题目，带答案方便老师改卷。<br>这是目前能找到的比较方便很好的题库软件了，而且是2022新版的。<br>适合：企业内训、小学、初中、高中、大学、培训机构、职业院校等老师的出题工作，由于是独立提取的，无在线题库功能，你们单位找一个专门电脑，所有老师都在里面增加题库内容，然后可以共享题库。非常方便，这是目前能找到的最好的出题软件了！</p><p>可以无上限增加新题</p><p>链接：<a href="https://pan.baidu.com/s/1MhMUVJCm_T9apOQj8YKDPw">https://pan.baidu.com/s/1MhMUVJCm_T9apOQj8YKDPw</a><br>提取码：52pj</p><h2 id="WxDatViewer"><a href="#WxDatViewer" class="headerlink" title="WxDatViewer"></a>WxDatViewer</h2><p>是一款非常好用的微信dat图片批量解密、查看、整理工具</p><p><a href="https://pan.lanzoui.com/b0405repg">https://pan.lanzoui.com/b0405repg</a></p><h2 id="系统工具"><a href="#系统工具" class="headerlink" title="系统工具"></a>系统工具</h2><h3 id="分区"><a href="#分区" class="headerlink" title="分区"></a>分区</h3><p>微pe工具箱</p><h3 id="window激活"><a href="#window激活" class="headerlink" title="window激活"></a>window激活</h3><p>KWI, KEU</p><h3 id="数据恢复"><a href="#数据恢复" class="headerlink" title="数据恢复"></a>数据恢复</h3><h4 id="WinFR界面版"><a href="#WinFR界面版" class="headerlink" title="WinFR界面版"></a>WinFR界面版</h4><p>支持在Win/1110、NTFS、FAT、exFAT、ReFS 下从 SSD/HDD/USB/存储卡中恢复丢失的文件。<br>文件手滑意外删除、磁盘格式化、磁盘损坏、中病毒等导致的文件丢失都可以使用这款工具尝试恢复。<br><a href="https://maxiaobang.lanzoup.com/iTnW5yztejg">https://maxiaobang.lanzoup.com/iTnW5yztejg</a></p><h4 id="ApowerRecover"><a href="#ApowerRecover" class="headerlink" title="ApowerRecover"></a>ApowerRecover</h4><p><a href="https://mp.weixin.qq.com/s/W_DHyZFt9j13VuLns8X4ew">https://mp.weixin.qq.com/s/W_DHyZFt9j13VuLns8X4ew</a></p><p>安装后，将Crack文件夹中的文件复制到软件安装目录中，即可免费使用了<br>蓝奏云下载：<br><a href="https://idege.lanzouw.com/i6M2Nylj5qf">https://idege.lanzouw.com/i6M2Nylj5qf</a></p><h2 id="LANDrop局域网内多平台文件传输"><a href="#LANDrop局域网内多平台文件传输" class="headerlink" title="LANDrop局域网内多平台文件传输"></a>LANDrop局域网内多平台文件传输</h2><p>不推荐，个人感觉用着麻烦，速度还慢<br>原文：<a href="https://mp.weixin.qq.com/s/yvYgMX6BS2XaPfDKe69wig">https://mp.weixin.qq.com/s/yvYgMX6BS2XaPfDKe69wig</a></p><p>软件官网：<br><a href="https://landrop.app/?ref=appinn#downloads">https://landrop.app/?ref=appinn#downloads</a></p><p>开源地址：<br><a href="https://github.com/LANDrop">https://github.com/LANDrop</a></p><p>只要你的设备在同一个局域网下（同一WIFI下）,他就可以自动发现设备并相互传输文件。目前支持&nbsp;Windows、macOS、Linux &nbsp;iOS、Android 多个平台之前相互传输文件。</p><p>&nbsp;使用过程中发现的问题：</p><p>1.首先要在同一wifi下</p><p>2.ipad要在ipad上打开下载链接，安装后要重启</p><p>3.如果手机端无法识别到你的电脑设备，你首先需要在设置中将可被发现勾选，然后服务器端口需要填写 52637。</p><p>4.电脑端的软件还有一个BUG，手机给电脑传输文件时，需要先打开手机端的APP，然后再打开电脑端的程序，否则手机端无法识别到电脑设备。</p><p>5.无法传输整个文件夹</p><h1 id="app"><a href="#app" class="headerlink" title="app"></a>app</h1><h2 id="海阔视界"><a href="#海阔视界" class="headerlink" title="海阔视界"></a>海阔视界</h2><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p>最新版软件地址如下<br><a href="https://haikuo.lanzoux.com/u/GoldRiver">https://haikuo.lanzoux.com/u/GoldRiver</a></p><p>备用地址：</p><p><a href="https://haikuo.lanzoui.com/u/GoldRiver">https://haikuo.lanzoui.com/u/GoldRiver</a></p><p>如果上面的地址都不可用，可以在公众号(新方圆小棉袄)对话框回复“最新版”这几个字获取新版下载地址。</p><h3 id="规则推荐"><a href="#规则推荐" class="headerlink" title="规则推荐"></a>规则推荐</h3><p>最受欢迎的规则<br>自然是香雅情大佬的三件套了，包含香情影视、APP影视、资源网采集</p><p>最强大的规则<br>自然是永远明日大佬设计的轻合集，以及晓、道长、发粪图强、回忆、蓝莓、藍凋、逐风者、子丑寅卯、TyrantG、随风、枫林雨殇、淡了过往、Namo等大佬的轻合集系列规则了，一个规则内含几十上百源，而且远程更新自动维护，属实非常强大</p><p>最高质量的规则<br>自然是最近比较火的云盘汇影了，集多个云盘搜索站，画质非常高，很多2k、4k的视频都能找到，动不动就是几十G大小的视频文件</p><p>最有潜力的规则<br>那就是道长大佬的dr合集、发粪图强大佬的模板·Q、晓大佬的晓合集等规则，因为海阔视界底层模型稍显复杂，那么简化规则就是视界的一个重点，也希望更多大佬能一起封装好用的模板，不断简化规则</p><p>最全的漫画规则<br>自然是团子大佬的聚漫和仰望星空大佬的漫画合集无疑了，不过视界写漫画规则的大佬不多，但是看漫画功能还是不错的</p><p>最有设计感的规则<br>顺承天意大佬的新片场和Joker大佬的青豆这两个规则当之无愧，一个规则顶一个APP，不仅功能十分齐全，而且界面设计非常好看耐看</p><p>最庞大的规则<br>那必然是道长大佬的道长仓库了，作为一个小程序规则仓库，好用是好用，但是规则极其庞大，内含几十个子页面，源码都有好几百KB。一度让我很头疼，为了要兼容这种超大规则软件都做了几次兼容处理</p><h2 id="Auto-js使用"><a href="#Auto-js使用" class="headerlink" title="Auto.js使用"></a>Auto.js使用</h2><p>导入项目<br>需要在手机根目录创建脚本文件夹，再把文件复制进去</p><h2 id="Vmos-pro"><a href="#Vmos-pro" class="headerlink" title="Vmos pro"></a>Vmos pro</h2><p>手机虚拟机使用<br>用mt管理器查看虚拟机里的文件</p><h2 id="两仪"><a href="#两仪" class="headerlink" title="两仪"></a>两仪</h2><p><a href="https://mp.weixin.qq.com/s/DBlmJh988gWCu8tnPiltow">原文</a></p><p>一个免 ROOT 的 Android 系统级容器</p><p>【下载地址】</p><p>百度网盘:</p><p><a href="https://pan.baidu.com/s/1tRFnXwc2An4pLNn0gmNvew?pwd=anlu">https://pan.baidu.com/s/1tRFnXwc2An4pLNn0gmNvew?pwd=anlu</a><br>提取码:anlu</p><p>微云:<a href="https://share.weiyun.com/3vUDEtdN">https://share.weiyun.com/3vUDEtdN</a></p><p>天翼:<a href="https://cloud.189.cn/t/N77Vn2Eb2YZv">https://cloud.189.cn/t/N77Vn2Eb2YZv</a></p><p>迅雷:<a href="https://pan.xunlei.com/s/VMtzo7gpJ2nEJFrH-MTa9HtNA1">https://pan.xunlei.com/s/VMtzo7gpJ2nEJFrH-MTa9HtNA1</a> 提取码：z2za</p><h2 id="SD-Maid"><a href="#SD-Maid" class="headerlink" title="SD Maid"></a>SD Maid</h2><p>支持卸载残留扫描、系统/应用缓存清理、文件管理、应用管理、提取安装包、重复文件扫描、查看存储信息等。</p><h2 id="ZArchiver"><a href="#ZArchiver" class="headerlink" title="ZArchiver"></a>ZArchiver</h2><p>安卓上最强的压缩/解压缩应用，有这一个就够了。基本上我们能用到的所有格式压缩包都可以处理。<br>支持带密码的压缩包、分卷解压、免解压预览、自定义界面、文件管理等。</p><h2 id="图叨叨"><a href="#图叨叨" class="headerlink" title="图叨叨"></a>图叨叨</h2><p>宫格切图、模板拼图、以图搜图、电影台词、图片水印、图片打码、压缩裁剪、网页截图、动图制作、图片边框、图文卡片、手持弹幕等。</p><p>而且无广告、无后台，相当好用。</p><h2 id="便捷下载"><a href="#便捷下载" class="headerlink" title="便捷下载"></a>便捷下载</h2><p>一款万能手机下载器，简单方便。<br>只要把链接粘贴进去，就可以自动解析下载图片、视频、音频、文档。</p><p>还支持音频提取、视频压缩、一键转换网页为 PDF 等。</p><h2 id="kiwi-brower"><a href="#kiwi-brower" class="headerlink" title="kiwi brower"></a>kiwi brower</h2><h2 id="李跳跳v1-75"><a href="#李跳跳v1-75" class="headerlink" title="李跳跳v1.75"></a>李跳跳v1.75</h2><p><a href="https://mp.weixin.qq.com/s/cB3l-Dt_usR7YSjRoySFhA">原文</a><br> 【软件链接】</p><p><a href="https://wwn.lanzoul.com/iKcrtywtuhc">https://wwn.lanzoul.com/iKcrtywtuhc</a> </p><p>密码:3m3m</p><h2 id="【Xp框架免root】太极-v9-0-0"><a href="#【Xp框架免root】太极-v9-0-0" class="headerlink" title="【Xp框架免root】太极 v9.0.0"></a>【Xp框架免root】太极 v9.0.0</h2><p><a href="https://mp.weixin.qq.com/s/fJ6ZzR3dXqd95wQCwMZAew">原文</a><br>太极是一个无需Root，无需解释Bootloader，也不需要刷机就能使用 Xposed 模块的一个APP。太极拥有无需刷机、无需解锁、使用简单的优点，支持目前大部分xposed模块，该应用搭配各种xpose模块使用时，可以让你的应用程序拥有强大的功能。</p><p>【下载链接】<a href="https://wwn.lanzoul.com/i5INgz5ugxe">https://wwn.lanzoul.com/i5INgz5ugxe</a></p><p>【备用链接】<a href="https://wwn.lanzoux.com/i5INgz5ugxe">https://wwn.lanzoux.com/i5INgz5ugxe</a></p><h2 id="【免root】AppMgr-Pro-III5-35"><a href="#【免root】AppMgr-Pro-III5-35" class="headerlink" title="【免root】AppMgr Pro III5.35"></a>【免root】AppMgr Pro III5.35</h2><p><a href="https://mp.weixin.qq.com/s/smDa32DCLE5BO1OqLyp9jA">原文</a></p><p>需要开启无障碍<br>隐藏应用: 允许您隐藏系统（内置）应用，让隐藏的应用从你的桌面程序列表中消失不见。</p><p>冻结应用: 允许您冻结应用，被冻结的应用将不会被启动、执行或使用任何 CPU 或存储，自然也不会消耗任何电力。</p><p>应用管理: 可以帮助您管理所安装的应用，例如批次卸载应用，批次移动应用或分享你安装的应用给朋友等等。<br>【下载地址】<br><a href="https://rtkcxzh.lanzouw.com/i8YZSzu9psh">https://rtkcxzh.lanzouw.com/i8YZSzu9psh</a></p><h2 id="Android开发工具箱"><a href="#Android开发工具箱" class="headerlink" title="Android开发工具箱"></a>Android开发工具箱</h2><h2 id="安卓开发助手"><a href="#安卓开发助手" class="headerlink" title="安卓开发助手"></a>安卓开发助手</h2><p>它能够用来反编译其他应用、查看其他应用布局和控件信息、快速查看 Activity 历史记录、查看其他应用 Manifest、查看最近使用和最近安装的应用详细信息、提取任何应用 Apk 和 So 文件、调试</p><p>【下载链接】：<br><a href="https://wwn.lanzoul.com/igSpq008kxwj">https://wwn.lanzoul.com/igSpq008kxwj</a><br>【备用链接】：<br><a href="https://wwn.lanzoux.com/igSpq008kxwj">https://wwn.lanzoux.com/igSpq008kxwj</a></p><h2 id="科学"><a href="#科学" class="headerlink" title="科学"></a>科学</h2><p><a href="https://www.alpacadisk.com/shared/AKYTwnwK5k1fir3V">https://www.alpacadisk.com/shared/AKYTwnwK5k1fir3V</a></p><h1 id="ios软件"><a href="#ios软件" class="headerlink" title="ios软件"></a>ios软件</h1><h2 id="TunePro"><a href="#TunePro" class="headerlink" title="TunePro"></a>TunePro</h2><p>iOS 平台免费听歌 app，曲库很大，一般歌都能听，不支持下载音乐。<br><a href="https://apps.apple.com/cn/app/tunepro-music/id12482625083">https://apps.apple.com/cn/app/tunepro-music/id12482625083</a></p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>github</title>
      <link href="/2022/010114187.html"/>
      <url>/2022/010114187.html</url>
      
        <content type="html"><![CDATA[<h1 id="加速访问GitHub"><a href="#加速访问GitHub" class="headerlink" title="加速访问GitHub"></a>加速访问GitHub</h1><p><a href="https://mp.weixin.qq.com/s/ykN7Swxvbl-PinwrssHiOQ">参考文章</a><br><a href="https://mp.weixin.qq.com/s/C5XUgzL3_KGIga2X-LHJuw">参考</a></p><h2 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h2><ul><li>DNS能帮你在访问域名的时候查到实际的IP地址<br>Github 在全球各地都有服务器，而在国内，DNS解析服务基本上都是把域名解析到了美国的服务器，所以访问起来会比较慢<br>但我们可以通过修改本地 hosts 文件来绕过公共DNS解析，直接访问 Github 在韩国、日本等的服务器，从而达到加速访问的目的</li><li>hosts 文件就相当于本地通讯录，你的通讯录里面记了公司的电话。</li></ul><h2 id="steamcommunity-302（WIN）"><a href="#steamcommunity-302（WIN）" class="headerlink" title="steamcommunity 302（WIN）"></a>steamcommunity 302（WIN）</h2><p>羽翼城大佬后来又开发的 steamcommunity 302 就是通过反代来加速访问 Github 等网站</p><p>软件可以到这里下载：<a href="https://www.dogfight360.com/blog/686/">https://www.dogfight360.com/blog/686/</a><br>比较棘手的是可能会出现80／443端口被占用的情况，这个需要关闭对应监听端口的进程／服务来解决，具体教程可见羽翼城大佬在下载页面做出的说明</p><h2 id="FastGithub（WIN／Mac／Linux）"><a href="#FastGithub（WIN／Mac／Linux）" class="headerlink" title="FastGithub（WIN／Mac／Linux）"></a>FastGithub（WIN／Mac／Linux）</h2><p>FastGithub 则是另一款同样基于反代来加速 Gtihub 访问的工具，支持WIN／Mac／Linux三端，还能在docker上一键部署：<a href="https://github.com/dotnetcore/FastGithub">https://github.com/dotnetcore/FastGithub</a></p><p>Windows端的话，下载后双击即可运行，软件没有程序界面，直接就是跑的命令行，所以开启之后不要关闭命令行窗口！</p><p>而 FastGithub 除了可以加速访问 Gtihub ，最大的优势是它顺便还能助你直连V2EX</p><h2 id="网易UU加速器"><a href="#网易UU加速器" class="headerlink" title="网易UU加速器"></a>网易UU加速器</h2><p>网易在一款游戏加速器里面竟然还提供了Github网站访问加速</p><h2 id="修改本地hosts"><a href="#修改本地hosts" class="headerlink" title="修改本地hosts"></a>修改本地hosts</h2><p>1.打开本地host文件<br>C:\Windows\System32\drivers\etc<br>在这个项目<a href="https://github.com/521xueweihan/GitHub520">https://github.com/521xueweihan/GitHub520</a><br>复制添加内容到本地host<br>2.更新DNS缓存  </p><h2 id="FasterHosts谷歌插件"><a href="#FasterHosts谷歌插件" class="headerlink" title="FasterHosts谷歌插件"></a>FasterHosts谷歌插件</h2><p>1.在Chromium内核的浏览器上，你可以安装FasterHosts这款浏览器扩展来解决：<a href="https://github.com/gauseen/faster-hosts">https://github.com/gauseen/faster-hosts</a></p><p>2.FasterHosts的 hosts 资源就是来自 GitHub520，每 1 小时更新一次，所以你无需配置，一装好之后就可以用</p><h2 id="SwitchHosts软件"><a href="#SwitchHosts软件" class="headerlink" title="SwitchHosts软件"></a>SwitchHosts软件</h2><p>1.这个工具来实现自动更新 hosts 中的IP地址<br>2.我们先到 SwitchHosts 官网下载这款管理工具：<a href="https://swh.app/zh/">https://swh.app/zh/</a><br>3.下载安装好SwitchHosts之后标题随意取，URL地址填这个：<a href="https://raw.hellogithub.com/hosts">https://raw.hellogithub.com/hosts</a><br>4.自动刷新最好建议选1小时<br>5.点击确认后，还要手动启用一下，接着稍等片刻本地 hosts 即会更新</p><h2 id="UsbEAm-Hosts-Editor"><a href="#UsbEAm-Hosts-Editor" class="headerlink" title="UsbEAm Hosts Editor"></a>UsbEAm Hosts Editor</h2><p><a href="https://www.dogfight360.com/blog/475/">软件下载</a></p><h1 id="上传本地文件到github"><a href="#上传本地文件到github" class="headerlink" title="上传本地文件到github"></a>上传本地文件到github</h1><h2 id="github在线上传文件夹"><a href="#github在线上传文件夹" class="headerlink" title="github在线上传文件夹"></a>github在线上传文件夹</h2><p>在线上传也可以上传完整的文件夹结构，直接拖拽到上传文件页面的框</p><h2 id="通过git工具上传本地文件夹（本地项目）"><a href="#通过git工具上传本地文件夹（本地项目）" class="headerlink" title="通过git工具上传本地文件夹（本地项目）"></a>通过git工具上传本地文件夹（本地项目）</h2><p><a href="https://wenkexia.github.io/2021/11205629.html">跳转git使用文章</a></p><h1 id="项目推荐"><a href="#项目推荐" class="headerlink" title="项目推荐"></a>项目推荐</h1><h2 id="Awesome-GitHub-Repo"><a href="#Awesome-GitHub-Repo" class="headerlink" title="Awesome GitHub Repo"></a>Awesome GitHub Repo</h2><p>Awesome GitHub Repo 是逛逛 GitHub 创建的开源项目，会收集整理 GitHub 上高质量、有趣的开源项目，并将他们进行归类。<br>地址：<a href="https://github.com/Wechat-ggGitHub/Awesome-GitHub-Repo">https://github.com/Wechat-ggGitHub/Awesome-GitHub-Repo</a></p><h2 id="新一代爬虫平台"><a href="#新一代爬虫平台" class="headerlink" title="新一代爬虫平台"></a>新一代爬虫平台</h2><p>平台以流程图的方式定义爬虫，是一个高度灵活可配置的爬虫平台。新一代爬虫平台，以图形化方式定义爬虫流程，不写代码即可完成爬虫。<br>开源地址：<a href="https://github.com/ssssssss-team/spider-flow">https://github.com/ssssssss-team/spider-flow</a></p><h2 id="开发者技术路线"><a href="#开发者技术路线" class="headerlink" title="开发者技术路线"></a>开发者技术路线</h2><p>技术发展日新月异的，行业也是瞬息万变。技术迭代更新，有没有一个不断更新的指南，为技术进阶之路指一条明路？这个 GitHub 项目就是，它为前端、后端、DevOps等开发着准备可详细的技术路线图。</p><p>开源地址：<a href="https://github.com/kamranahmedse/developer-roadmap">https://github.com/kamranahmedse/developer-roadmap</a>  </p><h2 id="自学编程之路"><a href="#自学编程之路" class="headerlink" title="自学编程之路"></a>自学编程之路</h2><p>Python 开源项目之「自学编程之路」，保姆级教程：AI实验室、宝藏视频、数据结构、学习指南、机器学习实战、深度学习实战、网络爬虫、大厂面经、程序人生、资源分享。</p><p>开源地址：<a href="https://github.com/Jack-Cherish/PythonPark">https://github.com/Jack-Cherish/PythonPark</a></p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> GitHub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql学习笔记</title>
      <link href="/2022/010151482.html"/>
      <url>/2022/010151482.html</url>
      
        <content type="html"><![CDATA[<h2 id="第一部分：数据库的基础知识及概念"><a href="#第一部分：数据库的基础知识及概念" class="headerlink" title="第一部分：数据库的基础知识及概念"></a>第一部分：数据库的基础知识及概念</h2><p> 数据库管理系统（DataBase Management System，DBMS）：指一种操作和管理数据库的大型软件，用于建立、使用和维护数据库，对数据库进行统一管理和控制，以保证数据库的安全性和完整性。用户通过数据库管理系统访问数据库中的数据。<br>  数据库（DATA BASE）指长期保存在计算机的存储设备上，按照一定规则组织起来，可以被各种用户或应用共享的数据集合。<br>  表中用来存放数据信息，以二维行列存储数据。行（row）在sql中称作一条记录也叫实体，列（column）在sql中称作字段。<br>  SQL：Structure Query Language。（结构化查询语言）<br>1.数据管理技术的发展 ：1人工管理阶段  2文件系统阶段 3数据库系统阶段  各自的特点</p><p>2.数据模型的分类：层次模型、网状模型和关系模型</p><h2 id="数据库分类"><a href="#数据库分类" class="headerlink" title="数据库分类"></a>数据库分类</h2><h3 id="关系型数据库："><a href="#关系型数据库：" class="headerlink" title="关系型数据库："></a>关系型数据库：</h3><p> 采用关系模型（二维表）来组织数据结构的数据库</p><p> oracle   DB2    SQLServer    Mysql   SQLite</p><p> 优点：*容易理解，逻辑类似常见的表格</p><pre><code>   *使用方便，都使用sql语句，sql语句非常成熟   *数据一致性高，冗余低，数据完整性好，便于操作   *技术成熟，功能强大，支持很多复杂操作                 </code></pre><p> 缺点：*每次操作都要进行sql语句的解析，消耗较大</p><pre><code>  *不能很好的满足并发需求，特别是海量数据爆发，关系型数据库读写能力会显得不足  *关系型数据库往往每一步都要进行加锁的操作，也造成了数据库的负担  *数据一致性高，有时也会使数据的存储不灵活</code></pre><h3 id="非关系型数据库（NoSql）"><a href="#非关系型数据库（NoSql）" class="headerlink" title="非关系型数据库（NoSql）"></a>非关系型数据库（NoSql）</h3><pre><code>  优点：*高并发，读写能力强        *弱化数据结构一致性，使用更加灵活        *有良好的可扩展性 缺点：*通用性差，没有sql语句那样通用的语句       *操作灵活导致容易出错和混乱       *没有外键关联等复杂的操作</code></pre><p>   Nosql的使用情况：</p><pre><code>   1、对数据存储灵活性要求高，一致性要求低   2、数据处理海量并发，要求瞬间效率速度比较高   3、数据比较容易建立Nosql模型   4、网站灵活时缓冲存储，爬虫应用</code></pre><p> Nosql 的分类：</p><pre><code>         1、键值型数据库   Redis         2、文档型数据库   MongoDB          3、列存储数据库    HBase         4、图形数据库</code></pre><p>4.DOS窗口的命令 启动mysql mysql -uroot -p  （书本P18）</p><p>5.mysql语句的四大组成成分（DDL、DML、DQL、DCL)  （PPT初识MySQL第41页）</p><h3 id="SQL语句分类"><a href="#SQL语句分类" class="headerlink" title="SQL语句分类"></a>SQL语句分类</h3><h4 id="DML语言-Data-Manipulation-Language-数据操作语言"><a href="#DML语言-Data-Manipulation-Language-数据操作语言" class="headerlink" title="DML语言(Data Manipulation Language):数据操作语言"></a>DML语言(Data Manipulation Language):数据操作语言</h4><p>用于操作数据库对象中所包含的数据：<br> 关键字有：insert（插入），update（更改），delete（删除）</p><h4 id="DQL（Data-Query-Language）数据查询语言"><a href="#DQL（Data-Query-Language）数据查询语言" class="headerlink" title="DQL（Data Query Language）数据查询语言"></a>DQL（Data Query Language）数据查询语言</h4><p>关键字SELECT语句<br>1.基础查询<br>2.条件查询<br>3模查词(LIKE)<br>4.字段控制查询( DISTINCT)<br>5.排序( DRDER BY)<br>6.分组查词</p><h4 id="DDL-Data-Definition-Language-数据定义语言"><a href="#DDL-Data-Definition-Language-数据定义语言" class="headerlink" title="DDL(Data Definition Language):数据定义语言"></a>DDL(Data Definition Language):数据定义语言</h4><p> 关键字有：create(创建)，drop（删除） ，truncate（删除表结构，再创一张表），alter（修改）</p><p>6.INODB、MYISAM存储引擎的区别（PPT初识MySQL第67页）</p><h2 id="第二部分：数据的基本操作及高级查询"><a href="#第二部分：数据的基本操作及高级查询" class="headerlink" title="第二部分：数据的基本操作及高级查询"></a>第二部分：数据的基本操作及高级查询</h2><h3 id="库操作"><a href="#库操作" class="headerlink" title="库操作"></a>库操作</h3><p>CREATE DATABASE 数据库名; – 创建数据库<br>SHOW DATABASES; – 查看当前数据库服务器中的所有数据库<br>DROP DATABASE 数据库名; – 删除指定数据库<br>USE 数据库名; – 使用数据库</p><h3 id="表操作"><a href="#表操作" class="headerlink" title="表操作"></a>表操作</h3><p>创建数据表<br>查看表信息 show 表名<br>查看表结构  desc 表名<br>改表记录    UPDATE 表名 SET <code>修改字段</code>=’’ WHERE 条件<br>删除数据表    drop table if exists stu,student;<br>复制表<br>-修改字段的数据类型  alter table &lt;表名&gt; modify &lt;字段名&gt; &lt;新数据类型&gt;<br>添加字段 alter table &lt;表名&gt; add&lt;字段名&gt; &lt;新数据类型&gt;<br>[约束条件]  [first|after 已存在字段名];<br>删除字段 alter table &lt;表名&gt; drop&lt;字段名&gt;;</p><p>1.基本操作语句：查看数据库列表，查看数据库中的表名</p><p>2.数据类型：字符串类型 char、varchar；一般超过200个汉字：用text；decimal()一般用于价钱、金额，考试会考其两个参数M、D表示什么意思<br>教材27页）</p><p>3.表的创建、查询语句、数据的插入</p><p>4.创建表时涉及到的知识点，如 default 默认值</p><p>5.查询的时候，去掉重复的行：distinct</p><p>6.修改表的结构：alter的用法</p><p>7.where条件语句的用法</p><p>8.in 和 not in的用法</p><p>9.group by 分组语句，having子句的使用</p><p>10.limit 子句</p><p>11.exeits 关键字的用法</p><p>12.模糊查询 ：like (‘%’,’_’)（配合百分号、下划线使用） (课本没有)</p><p>13.between…and…的用法 ：如between 1 and 10 。包含1和10</p><p>14.uoion、 unoin all 的用法</p><p>15.truncate table 删除特点：可以删除表中所有的行（书本P56）</p><p>16.函数:聚合函数（sum()、max()、min()、count()、avg()）（使用原则书本58页）</p><p>17.日期函数：now()获取当前日期和时间 2021-12-16 16：59：30</p><p>18.内连接 外连接 基本语法及含义（书本P88）<br>如返回左表中所有的记录和右表中符合连接条件的记录（左外连接）</p><p>19.条件筛选 where 和having的区别<br>where语句从数据表中选取满足条件的数据行、列<br>having子句选取满足条件的分组</p><p>20.批量子查询ALL、ANY</p><h3 id="子查询"><a href="#子查询" class="headerlink" title="子查询"></a>子查询</h3><p>子查询就是嵌套查询，一个select语句中包含另一个完整的select语句。</p><p>1.子查询出现的位置：</p><p>where后，作为条为被查询的一条件的一部分；<br>from后，作表；<br>2.当子查询出现在where后作为条件时，还可以使用如下关键字：</p><p>any<br>all<br>3.子查询结果集的形式：</p><p>单行单列（用于条件）<br>单行多列（用于条件）<br>多行单列（用于条件）<br>多行多列（用于表）</p><p>1.带比较运算符的子查询<br>2.带 EXISTS关键字的子查询<br>3.带ANY关键字的子查询<br>4.带AL关键字的子查询</p><h2 id="多表连接查询"><a href="#多表连接查询" class="headerlink" title="多表连接查询"></a>多表连接查询</h2><pre><code>内连接查询    select 表1查询的字段，表2查询的字段 from 表1 inner join 表2 on 两表都有的字段；3外连接查询(只适用于两表)    左（外）连接查询        select 表1查询的字段，表2查询的字段 from 表1 left join 表2 on 条件；        左表的记录将会全部表示出来，而右表只会显示符合搜索条件的记录    右（外）连接查询</code></pre><p>22.SQL语句的执行顺序。（PPT数据查询第79页）</p><h2 id="第三部分-事务、存储过程、存储函数、视图、索引、备份、恢复"><a href="#第三部分-事务、存储过程、存储函数、视图、索引、备份、恢复" class="headerlink" title="第三部分:事务、存储过程、存储函数、视图、索引、备份、恢复"></a>第三部分:事务、存储过程、存储函数、视图、索引、备份、恢复</h2><h3 id="1-存储过程（重点）"><a href="#1-存储过程（重点）" class="headerlink" title="1.存储过程（重点）"></a>1.存储过程（重点）</h3><p>基本格式及使用，怎么调用存储过程 (PPT存储过程与事务第17页）<br>定义 ：  存储过程（Stored Procedure）是在大型数据库系统中，一组为了完成特定功能的SQL 语句集，存储在数据库中，经过第一次编译后调用不需要再次编译，用户通过指定存储过程的名字并给出参数（如果该存储过程带有参数）来执行它。存储过程是数据库中的一个重要对象。<br>存储过程的特点<br>    1、能完成较复杂的判断和运算<br>    2、可编程行强，灵活<br>    3、SQL编程的代码可重复使用<br>    4、执行的速度相对快一些<br>    5、减少网络之间的数据传输，节省开销<br>创建存储过程的简单语法</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">create procedure 名称()</span><br><span class="line">begin</span><br><span class="line">.........</span><br><span class="line">end</span><br></pre></td></tr></tbody></table></figure><p>调用存储过程    call 名称();<br>存储函数里的变量</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">create procedure test2()</span><br><span class="line">begin</span><br><span class="line">  -- 使用 declare语句声明一个变量</span><br><span class="line">  declare username varchar(32) default '';</span><br><span class="line">  -- 使用set语句给变量赋值</span><br><span class="line">  set username='xiaoxiao';</span><br><span class="line">  -- 将users表中id=1的名称赋值给username</span><br><span class="line">  select name into username from users where id=1;</span><br><span class="line">  -- 返回变量</span><br><span class="line">  select username;</span><br><span class="line">end;</span><br></pre></td></tr></tbody></table></figure><h3 id="事务"><a href="#事务" class="headerlink" title="事务"></a>事务</h3><p>mysql事务处理的四种基本特性（原子性、一致性、隔离性、持久性）（书本P102页）</p><p>4.事务的基本语法，比如开启事务（start transcation、begin) ,提交事务commit，回滚 rollback（书本P103页）</p><p>5.mysql设置了事务的4种隔离级别（读未提交、读提交、可重复读、可串行化）（书本没有）</p><h3 id="视图"><a href="#视图" class="headerlink" title="视图"></a>视图</h3><p>视图是由数据库中的一个表或多个表导出的虚拟表，是一种虚拟存在的表，方便用户对数据的操作。<br>创建视图    create view 视图名 as select </p><p>7.数据库的备份与恢复。mysqldump的基本使用格式</p><h3 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h3><p>索引并非越多越好<br>避免对经常更新的表建立过多的索引<br>数据量小的表最好不要使用索引<br>在不同值少的列上不要建立索引<br>为经常需要排序、分组和联接操作的字段建立索引</p><p>（2）索引的关键字（PPT 索引视图触发器第21页）</p><h3 id="触发器"><a href="#触发器" class="headerlink" title="触发器"></a>触发器</h3><p> 触发器与函数、存储过程一样，触发器是一种对象，它能根据对表的操作时间，触发一些动作，这些动作可以是insert,update,delete等修改操作。<br> </p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">create trigger tr_users_insert after insert on users</span><br><span class="line">   for each row </span><br><span class="line">   begin </span><br><span class="line">       insert into oplog(userid,username,action,optime)</span><br><span class="line">       values(NEW.id,NEW.name,'insert',now());</span><br><span class="line">   end;</span><br></pre></td></tr></tbody></table></figure><br>，三个激活触发器的操作（插入insert、修改update和删除delete）（书本没有）（PPT 索引视图触发器第43页）<p></p><h2 id="第四部分：数据库规范化设计"><a href="#第四部分：数据库规范化设计" class="headerlink" title="第四部分：数据库规范化设计"></a>第四部分：数据库规范化设计</h2><p>1.实体之间的映射关系：一对一1:1 、一对多1:n、多对一n:1 、多对多m:n</p><p>2.E-R图的绘制</p><p>3.E-R图转换成关系模型</p><p>4.数据库模型图的概念</p><h2 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h2><p>将a表的信息导出到E:ext_cp.txt<br>Select * from  a表 into outfile ‘E:ext_cp.txt’;  #必须有单引号</p>]]></content>
      
      
      <categories>
          
          <category> 知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机网络学习笔记</title>
      <link href="/2021/122451189.html"/>
      <url>/2021/122451189.html</url>
      
        <content type="html"><![CDATA[<p>参考计算机网络谢希仁第八版</p><h2 id="第一章-概述"><a href="#第一章-概述" class="headerlink" title="第一章 概述"></a>第一章 概述</h2><p>体系结构<br>OSI的七层协议体系结构<br>物理层，数据链路层，网络层，<br>TCP/IP的四层体系结构<br>链路层（网络接口层），网际层，运输层，应用层<br>    重要内容<br>    计算机网络的一些相关知识<br>    互联网概述<br>    因特网的标准化工作<br>    互联网的组成<br>    计算机网络的类别<br>    计算机网络的性能指标</p><ul><li><p>综合OSI和TCP/IP的优点采用五层协议的体系结构阐述计算机网络的原理</p><h2 id="一-物理层"><a href="#一-物理层" class="headerlink" title="一. 物理层"></a>一. 物理层</h2><p>集线器，中继器</p><h3 id="相关协议"><a href="#相关协议" class="headerlink" title="相关协议"></a>相关协议</h3><h4 id="点对点协议PPP"><a href="#点对点协议PPP" class="headerlink" title="点对点协议PPP"></a>点对点协议PPP</h4><p>用在SONET/SDH链路时，采用零比特填充方法来实现透明传输。<br>  通过传输介质发送和接收二进制比特流。</p><h3 id="数据通信的基本知识"><a href="#数据通信的基本知识" class="headerlink" title="数据通信的基本知识"></a>数据通信的基本知识</h3></li><li><p>编码<br>把数据转换成数字信号（01）</p><pre><code>      不归零制，      归零制（正脉冲代表1，负脉冲代表0），      曼彻斯特编码（位周期中心的向上跳变代表0，向下代表1，反之亦可）      差分曼彻斯特编码（每一位的中心处始终有跳变。位开始边界有跳变为0，位开始边界无跳变为1）。</code></pre><ul><li>调制方法<pre><code>  转换为模拟信号  调幅：对基带信号的波幅进行调整，例如将上图的1信号波幅进行改变，在接收方读取时有载波输出为1  调相：对基带信号相位进行调制，例如将0信号的初相位调整为0度，1信号的初相位调整为180度。  调频：对基带信号频率进行调整，例如将0信号调制为频率f1，1信号调制为频率f2。</code></pre></li></ul><p>  2.数据交换方式</p><pre><code>  ①分组交换  ②电路交换</code></pre><p>  信道复用技术</p><pre><code>  ①频分复用FDM  是有N路信号要在一个信道中传送。可以使用调制的方法，把各路信号分别搬迁到适当的频率位置，使彼此不产生干扰。各路信号在同样的时间占用不同的带宽资源。  ②时分复用TDM  是将时间划分为一段段等长的帧，每一路信号在每一个帧中占用固定信号的时隙。  ③波分复用  ④码分复用CDM</code></pre><p>  数字传输系统<br>  宽带接入技术<br>  重要内容<br>  使用点对点信道的数据链路层<br>  封装成帧<br>  透明传输<br>  差错检测</p><p>  字节填充</p><p>  使用广播通信的数据链路层</p></li></ul><h2 id="二-数据链路层"><a href="#二-数据链路层" class="headerlink" title="二. 数据链路层"></a>二. 数据链路层</h2><p>交换机，网桥</p><h3 id="链路层服务"><a href="#链路层服务" class="headerlink" title="链路层服务"></a>链路层服务</h3><pre><code>组帧：封装高层数据报构成数据帧，加首部和尾部 控制字符SOH放在一帧的最前面，表示帧的首部开始  控制字符EOT放在一帧的最后，表示帧的结束流量控制：协调相邻的发送结点，接收差错检测：信号衰减和噪音会引起差错，接收端检测到差错，通知发送端重传或直接丢弃帧差错纠正：接收端直接纠正比特差错全双工和半双工通信控制全双工：同时双向传输。半双工：交替双向传输 数据链路层协议的代表包括：PPP、帧中继等</code></pre><p>适配器的作用<br>CSMA/CD协议<br>使用集线器的星形拓扑结构<br>MAC层的硬件地址<br>MAC帧的格式<br>以太网的扩展</p><h2 id="三-网络层"><a href="#三-网络层" class="headerlink" title="三. 网络层"></a>三. 网络层</h2><p>提供主机间的逻辑通信机制，在邻接节点间进行数据包可靠传输<br>    负责对子网间的数据包进行路由选择，为分组交换网上的不同主机提供通信服务。<br>    网络层协议的代表包括：IP、ICMP、IGMP等。<br>网络层提供的两种服务</p><h3 id="IP"><a href="#IP" class="headerlink" title="IP"></a>IP</h3><p>目前已经不采用分类表示法，所以大家重点关注CIDR表示法（无分类编址）。<br>例  128.14.35.7/20 = 10000000  00001110  0010|0011  00000111</p><p>即前20位是网络前缀，后12位是主机号，那么我们通过令主机号分别为全0和全1就可以得到一个CIDR地址块的最小地址和最大地址，即</p><pre><code>最小地址是：128.14.32.0      = 10000000  00001110  0010|0000  00000000最大地址是：128.14.47.255  = 10000000  00001110  0010|1111 11111111     子网掩码是：255.255.240.0  = 11111111  11111111  1111|0000  00000000</code></pre><p>因此就可以看出来，这个CIDR地址块可以指派(47-32+1)*256=4096个地址，这里没有把全0和全1除外。</p><h3 id="地址解析协议ARP"><a href="#地址解析协议ARP" class="headerlink" title="地址解析协议ARP"></a>地址解析协议ARP</h3><p>IP数据报的格式<br>划分子网<br>构造超网<br>网际控制报文协议ICMP<br>互联网的路由选择协议<br>内部网关协议RIP<br>内部网关协议OSPF<br>外部网关协议BGP</p><h3 id="路由器"><a href="#路由器" class="headerlink" title="路由器"></a>路由器</h3><p>IPv6<br>从IPv4向IP v6的过渡<br>IP多播<br>虚拟专用网VPN<br>网络地址转换NAT</p><h2 id="四-运输层（transport-layer）"><a href="#四-运输层（transport-layer）" class="headerlink" title="四. 运输层（transport layer）"></a>四. 运输层（transport layer）</h2><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>提供应用进程间的逻辑通信机制<br>应用进程利用该服务传送应用层报文</p><ul><li>复用功能<br>多个应用层进程可同时使用下面运输层的服务</li><li>分用功能<br>运输层把收到的信息分别交付到上面应用层中的相应进程<h3 id="运输层协议（端到端协议）"><a href="#运输层协议（端到端协议）" class="headerlink" title="运输层协议（端到端协议）"></a>运输层协议（端到端协议）</h3>发送方将应用递交的信息下传给网络层<br>接收方将接收的信息上交给应用层</li></ul><h4 id="1-传输控制协议TCP"><a href="#1-传输控制协议TCP" class="headerlink" title="1.传输控制协议TCP"></a>1.传输控制协议TCP</h4><p>数据传输单位是报文段<br>    提供可靠的，面向连接的运输服务<br>    不提供广播或多播服务3.开销较多<br>    面向字节流，全双工<br>    有流量控制和拥塞控制<br>    TCP可靠传输的实现<br>        三次握手<br>            第一次：主机A向主机B发送一个同步序列号的数据段给主机B，请求建立连接<br>            第二次：主机B收到主机A的请求后，用一个确认应答（ACK）和同步序列（SYN）的数据段响应主机A<br>            第三次:主机A 收到这个数据段后，再发送一个确认应答，确认已收到主机B的数据段，开始传输实际数据<br>    TCP的流量控制<br>    TCP的拥塞控制<br>    TCP的运输连接管理</p><h4 id="2-用户数据报协议UDP"><a href="#2-用户数据报协议UDP" class="headerlink" title="2.用户数据报协议UDP"></a>2.用户数据报协议UDP</h4><p>数据传输单位是用户数据报<br>    1.传输数据前不需要先建立连接<br>    2.收到UDP报后，不需要给出确定<br>    3.不提供可靠交付，但是一种最有效的工作方式 </p><h2 id="五-应用层（application-layer）"><a href="#五-应用层（application-layer）" class="headerlink" title="五.应用层（application layer）"></a>五.应用层（application layer）</h2><h3 id="概述-1"><a href="#概述-1" class="headerlink" title="概述"></a>概述</h3><p>任务是通过应用进程间的交互来完成特定网络应用<br>进程指的是主机正在运行的程序<br>应用层交互的数据单元称为报文        </p><h3 id="应用层协议"><a href="#应用层协议" class="headerlink" title="应用层协议"></a>应用层协议</h3><p>定义的是应用进程间通信和交互的规则</p><h4 id="域名系统DNS"><a href="#域名系统DNS" class="headerlink" title="域名系统DNS"></a>域名系统DNS</h4><p>将域名转换为Ip地址</p><h4 id="文件传送协议FTP"><a href="#文件传送协议FTP" class="headerlink" title="文件传送协议FTP"></a>文件传送协议FTP</h4><h4 id="HTTP"><a href="#HTTP" class="headerlink" title="HTTP"></a>HTTP</h4><p>HTTP协议的服务端口为80</p><h4 id="SMTP"><a href="#SMTP" class="headerlink" title="SMTP"></a>SMTP</h4><p>SMP协议的服务端口为25<br>SMTP是建立在FTP文件传输服务上的一种邮件服务，主要用于传输系统之间的邮件信息并提供与来信有关的通知。</p><h3 id="远程终端协议TELNET"><a href="#远程终端协议TELNET" class="headerlink" title="远程终端协议TELNET"></a>远程终端协议TELNET</h3><h4 id="动态主机配置协议"><a href="#动态主机配置协议" class="headerlink" title="动态主机配置协议"></a>动态主机配置协议</h4><p>应用进程跨网络的通信<br>P2P对等方式<br>1.没有固定的服务请求者和服务提供<br>2.对等方相互之间直接通信<br>3.每个对等方既是服务请求者又是服务提供者</p><h2 id="复习题"><a href="#复习题" class="headerlink" title="复习题"></a>复习题</h2><h3 id="选择题"><a href="#选择题" class="headerlink" title="选择题"></a>选择题</h3><ol><li><p>物理层中指明在接口电缆的各条线上出现的电压的范围（  B ）。<br>A. 机械特性                           B. 电气特性<br>C. 功能特性                           D. 过程特性</p></li><li><p>下列属于半双工通信方式的是（  C ）。<br>A. 无线电广播                          B. 有线闭路电视<br>C. 无线对讲机                          D. 手机通话</p></li><li><p>光纤通信使用（  C ）。<br>A. 频分复用FDM                         B. 时分复用 TDM<br>C. 波分复用WDM                         D. 码分复用 CDM</p></li><li><p>典型应用于传输速率1Gbit/s(距离100米)的绞合线类别是（  C ）。<br>A. 3类线                              B. 超5类线<br>C. 6类线                             D. 8类线</p></li><li><p>传输带宽最大的介质是（  C ）。<br>A. 双绞线                             B. 同轴电缆<br>C. 光纤                               D. 微波</p></li><li><p>（  A ）是有N路信号要在一个信道中传送。可以使用调制的方法，把各路信号分别搬迁到适当的频率位置，使彼此不产生干扰。各路信号在同样的时间占用不同的带宽资源。<br>A. 频分复用FDM                         B. 时分复用 TDM<br>C. 波分复用WDM                         D. 码分复用 CDM</p></li><li><p>（ A  ）技术是用数字技术对现有模拟电话的用户线进行改造，使它能承载宽带数字业务。<br>A．ADSL                                 B. 光纤同轴混合网（HFC网）<br>C. 光纤接入                             D. FTTx技术</p></li><li><p>控制字符（ A  ）放在一帧的最前面，表示帧的首部开始。<br>A. SOH                                 B. EOT<br>C. ESC                                 D. MTU</p></li><li><p>局域网通常采用的网络拓扑结构不包括（  D ）。<br>A. 星形网                              B. 环形网<br>C. 总线网                              D. 三角形</p></li><li><p>10GBASE-ER采用的媒体介质是（ B  ）。<br>A. 多模光纤                            B. 单模光纤<br>C. 同轴电缆                            D. 双绞线</p></li><li><p>无分类编址CIDR地址块中网络前缀长度为/18相当于包含（ D  ）个C类网络数。<br>A. 21                                  B. 23<br>C. 80                                  D. 64</p></li><li><p>CIDR地址块206.0.64.0/18的子网掩码采用点分十进制法是记法是（ C  ）。<br>A. 255.255.255.0                     B. 255.255.240.0<br>C. 255.255.192.0                       D. 255.255.254.0</p></li><li><p>以下可分配给主机或者路由器的IP地址是（  C ）。<br>A. 131.107.255.80/28                   B. 231.211.128.0/17<br>C. 126.1.4.255/23                      D. 198.121.204.128/25</p></li><li><p>Internet的前身是美国的（  A ）。<br>A. ARPANET                             B. 信息高速公路<br>C. RFC                                 D. 分组交换网络<br>15．下列不属于ISP的是（  D ）。<br>A. 中国联通                            B. 中国电信<br>C. 德国电信                            D. 优酷<br>16．计算机通信网络的数据传送方式属于（C   ）。<br>A. 电路交换                           B. 报文交换<br>C. 分组交换                           D. 虚电路交换</p></li><li><p>广州工商学院的校园网属于（  C ）。<br>A. 广域网                            B. 城域网<br>C. 局域网                              D. 个域网</p></li><li><p>主机或路由器发送数据帧所需要的时间是（  A ）。<br>A. 发送时延                           B. 传播时延<br>C. 处理时延                            D. 排队时延</p></li><li><p>网络协议三要素中的（ A  ）表示数据与控制信息的结构或格式。<br>A. 语法                                B. 语义<br>C. 同步                                D. 协议</p></li><li><p>以下属于UDP支持的应用程序是（ C  ）。<br>A. 浏览器打开网页                    B. 收发电子邮件<br>C. 网络视频点播                      D. 远程登陆方式连接</p></li><li><p>物理层中指明接口所用接线器的形状和尺寸、引脚数目和排列、固定和锁定装置等是（  A ）。<br>A. 机械特性                           B. 电气特性<br>C. 功能特性                           D. 过程特性</p></li><li><p>下列属于全双工通信方式的是（  D ）。<br>A. 无线电广播                          B. 有线闭路电视<br>C. 无线对讲机                          D. 手机通话</p></li><li><p>3G移动通信技术使用（  D ）。<br>A. 频分复用FDM                         B. 时分复用 TDM<br>C. 波分复用WDM                         D. 码分复用 CDM</p></li><li><p>通常双绞线的最大传输距离是（  D ）。<br>A. 10米                               B. 18米<br>C. 50米                              D. 100米</p></li><li><p>早期有线电视网使用的介质主要是（  B ）。<br>A. 双绞线                             B. 同轴电缆<br>C. 光纤                               D. 微波</p></li><li><p>（  B ）是将时间划分为一段段等长的帧，每一路信号在每一个帧中占用固定信号的时隙。<br>A. 频分复用FDM                         B. 时分复用 TDM<br>C. 波分复用WDM                         D. 码分复用 CDM</p></li><li><p>（ B  ）是目前覆盖面很广的有线电视网的基础上开发的一种居民宽带接入网，除可传达电视节目外，还能提供电话、数据和其他宽带交互型业务。<br>A．ADSL                                 B. 光纤同轴混合网（HFC网）<br>C. 光纤接入                             D. FTTx技术</p></li><li><p>控制字符（  B ）放在一帧的最后，表示帧的结束。<br>A. SOH                                 B. EOT<br>C. ESC                                 D. MTU</p></li><li><p>总线型以太网通常采用（ A  ）访问控制协议。<br>A. CSMA/CD                             B.CSMA/CA<br>C. 频分复用                            D.时分复用</p></li><li><p>（  B ）的光源要使用昂贵的半导体激光器，而不能使用较便宜的发光二极管。<br>A. 多模光纤                            B. 单模光纤<br>C. 同轴电缆                            D. 双绞线</p></li><li><p>无分类编址CIDR地址块中网络前缀长度为/16相当于包含（ A  ）个B类网络数。<br>A. 1                                   B. 2<br>C. 64                                  D. 256</p></li><li><p>CIDR地址块206.0.64.0/17的子网掩码采用点分十进制法是记法是（ B  ）。<br>A. 255.255.0.0                      B. 255.255.128.0<br>C. 255.255.192.0                       D. 255.255.254.0</p><h3 id="判断题"><a href="#判断题" class="headerlink" title="判断题"></a>判断题</h3><p>（√）1.*一般的适配器都包括了数据链路层和物理层这两层的功能。<br>（√）2.封装成帧(framing)就是在一段数据的前后分别添加首部和尾部，然后就构成了一个帧。<br>（√）3.所有的PPP帧的长度都是整数字节。<br>（√）4.PPP协议用在SONET/SDH链路时，采用零比特填充方法来实现透明传输。<br>（√）5.最初的以太网是将许多计算机都连接到一根总线上，也称为共享以太网。<br>（√）1.*一般的适配器都包括了数据链路层和物理层这两层的功能。<br>（√ ）2.封装成帧(framing)就是在一段数据的前后分别添加首部和尾部，然后就构成了一个帧。<br>（√）3.所有的 PPP 帧的长度都是整数字节。<br>（√）4.PPP 协议用在 SONET/SDH 链路时，采用零比特填充方法来实现透明传输。<br>（√）5.最初的以太网是将许多计算机都连接到一根总线上，也称为共享以太网。<br>（×）6.以太网使用面向连接的工作方式。<br>（√）7.*以太网发送的数据都使用曼彻斯特编码，其特点是可以实现时钟自同步。<br>（√）8.以太网的站点在发送帧时，如果经过2τ后还没有检测到冲突，则本次发送不会再出现冲突了。<br>（  √ ）9.速率达到或超过 100 Mb/s 的以太网称为高速以太网。<br>（  √ ）10.100BASE-T 以太网工作在全双工方式时，不使用CSMA/CD协议<br>( √ )11. CSMA/CD协议采用半双工通信。<br>( × )6. 集线器工作于数据链路层。   //工作于物理层<br>(√  )7. 以太网交换机是一种即插即用设备，其内部的地址表是通过自学习算法自动逐渐建立起来的。</p><h3 id="填空题"><a href="#填空题" class="headerlink" title="填空题"></a>填空题</h3><p>1．OSI/RM的七层协议分别是物理层、数据链路层、____网络层__、运输层、会话层、表示层、应用层。<br>2．双绞线分为无屏蔽双绞线（UTP）和____屏蔽双绞线(STP)__。<br>3．为了解决透明传输问题，在发送端的数据链路层在数据中出现控制字符“SOH”或“EOT”的前面插入一个_____转义字符“ESC”_____。</p></li><li><p>____物理地址_____是使用数据链路层的地址，而IP地址是网络层和以上各层使用的地址，是一种逻辑地址。</p></li><li><p>在IP层下面每一种数据链路层协议都规定了一个数据帧中的数据字段的最大长度，这称为___最大传送单元MTU ______。</p></li><li><p>HTTPS应用程序采用熟知的端口号____TCP_____。</p></li><li><p>万维网使用____超文本标记语言HTML ________来显示各种万维网页面。<br>11．TCP/IP的四层协议包括链路层、网际层IP、运输层、____应用层______。<br>12．数字信号可以通过_____调制器_____转化为模拟信号。<br>13．在带宽W（Hz）的低通信道中，若不考虑噪声影响，则码元传输的最高速率是2W（码元/秒）。传输速率超过此上限，就会出现严重的码间串扰的问题，使接收端对码元的识别称为不可能，这就是著名的____奈氏准则___。</p></li><li><p>___香农公式_____表明信道的带宽或信道中的信噪比越大，信息的极限传输速率就越高。</p></li><li><p>___封装成帧____就是在一段数据的前后分别添加首部和尾部，这样就构成了一个帧。</p></li><li><p>计算机与外界局域网的连接是通过___网络适配器完成的_________。</p></li><li><p>网络层提供的服务分为虚电路和____数据报______。</p></li><li><p>C类地址可容纳的主机数是____254________。</p></li><li><p>HTTP应用程序采用熟知的端口号______TCP______。</p></li><li><p>FTP的中文翻译是___文件传输协议_________。</p></li><li><p>__生存时间或者TTL ___占8位，表明数据报在网络中的寿命。</p></li><li><p>内部网关协议IGP使用最多的是RIP和_____最短路径优先或者OSPF _______。</p></li><li><p>外部网关协议EGP使用最多的是_____ BGP的版本4或者BGP-4__。</p></li><li><p>1．数字信号可以通过___抽样，量化，编码____转化为模拟信号。</p><h3 id="简答题"><a href="#简答题" class="headerlink" title="简答题"></a>简答题</h3><p>1．什么是DNS？什么是DHCP服务器？<br>答：域名系统DNS是互联网使用的命名系统，用来便于人们使用的机器名字转换为IP地址。<br>动态主机配置协议DHCP提供了一种机制，称为即插即用连网。这种机制允许一台计算机自动加入新的网络和获取IP地址而不用手工参与。</p></li><li><p>什么是虚拟专用网络VPN？（P186）什么是网络地址转换NAT？(P188)<br>答：虚拟专用网络VPN是指这种网络是为本机构的主机用于机构内部的通信，而不是用于和网络外非本机构的主机通信。如果专用网不同网点之间的通信必须经过公用的互联网，但又有保密的要求，那么多有通过互联网传送的数据都必须加密。<br>网络地址转换NAT是指在专用网连接到互联网的路由器上安装NAT软件。装有NAT软件的路由器叫作NAT路由器，它至少一个有效的外部全球IP地址。这样，所有使用本地地址的主机在和外界通信时，都要在NAT路由器上将其本地地址转换成全球IP地址，才能和互联网连接。</p></li></ol><p>1.三报文握手建立TCP连接过程   P247<br>第一次握手:客户端将报文标志位SYN置为1,产生一个序号值seq=x,将该数据包发送给服务器端后客户端进入SYN_SENT状态<br>第二次握手：服务器端收到数据包后由标志位SYN=1知道客户端请求建立连接，服务器端将TCP报文标志位SYN和ACK都置为1，ack=x+1，随机产生一个序号值seq=y，并将该数据包发送给客户端以确认连接请求，服务器端进入SYN_RCVD状态。<br>第三次握手：客户端收到确认后，检查ack是否为x+1，ACK是否为1，如果正确则将标志位ACK置为1，ack=y+1，并将该数据包发送给服务器端，服务器端检查ack是否为y+1，ACK是否为1，如果正确则连接建立成功，客户端和服务器端进入ESTABLISHED状态，完成三次握手，随后客户端与服务器端之间可以开始传输数据了</p><p>2.TCP和UDP的主要区别<br>TCP提供面向连接、按序可靠的字节流服务（面向字节流）、有流量控制和拥塞控制。<br>UDP提供无连接、不可靠的数据报服务（面向报文）。<br>3.什么是VPN   P186<br>4.什么叫网络地址转换为NAT    P188</p><p>5.什么是DNS       P261<br>将域名转换为IP地址</p><p>6.什么是DHCP      P304<br>动态 主机 配置 协议<br>不需要手动的去配置ip地址以及其他的网络参数</p><p>7.什么是超文本传输协议HTTP<br>答：超文本传输协议HTTP是面向事务的应用层协议，它是万维网上能够可靠的交换文件（包括文本、声音、图像等各种多媒体文件）的重要基础。协议HTTP不仅传送完成超文本跳转所必需的信息，而且也传送任何可从互联网上得到的信息，如文本、超文本、声音和图像等。</p><p>8.顶级域名分为哪几类  p263<br>（1）国家顶级域名（2）通用顶级域名（3）基础结构域名<br>9.域名服务器有哪几类   P265<br>（1）根域名服务器<br>（2）顶级域名服务器<br>（3）权限域名服务器<br>（4）本地域名服务器</p><p>10.什么是超文本标记语言HTML P283<br>超文本标记语言HTML是一种制作万维网页面的标准语言，它消除了不同计算机之间信息交流的障碍<br>11.什么是远程终端协议TELNET   P271<br>用户通过TCP登陆远地主机，远程操控远地主机，又称终端仿真协议<br>12.什么是万维网www   P272<br>万维网是大规模的，联机式的信息储藏所，简称web<br>13什么是统一资源定位符URL   P274<br>从互联网上获取资源位置和访问这些资源的方法<br>6.什么叫做公用网和专用网？<br>公用网：公用网用来提供服务。Client通过此网络与服务器通信。<br>专用网：是某个部门为本单位的特殊工作的需要而建立的网络.这种网络不向本单位以外的人提供服务.例如,军队,铁路,电力等系统均有本系统的专用网。<br>7.时延是由那几部分组成的？发送时延与传输时延的有什么区别？P22</p><p>8.IGP和EGP这两类协议的主要区别是什么?<br>　　答：内部网关协议IGP，是在一个自治系统内部使用的路由选择协议，而这与在互联网中的其他自治系统选用什么路由选择协议无关。外部网关协议EGP，是在不同的自治系统边界传递路由信息的协议，不关心自治系统内部使用何种协议。<br>1、什么叫做“三网融合”？<br>“三网融合”又叫“三网合一”，意指电信网络、有线电视网络和计算机网络的相互渗透、互相兼容、并逐步整合成为全世界统一的信息通信网络，其中互联网是其核心部分。<br>2、什么叫做客户-服务器方式(C/S方式)？<br>客户（Client）和服务器（Server）都是指通信种所涉及的两个应用进程。客户-服务器方式所描述的是进程之间服务和被服务的关系。<br>3、 什么叫做P2P方式？<br>是指两台主机在通信时并不区分哪一个是服务请求方哪一个是服务提供方。只要两台主机都运行了对等连接软件（P2P软件），它们就可以进行平等的、对等连接通信。这时，双方都可以下载对方已经存储在硬盘中的共享文档。因此这种的方式称为P2P方式。<br>4、什么叫做电路交换？<br>是指在同一电信网用户群中任意两个或多个用户终端之间建立电路暂时连接的交换方式。暂时连接独占一条通信路径并保持到连接释放为止<br>例如，用固定电话拨打电话的数据传送方式属于（电路交换）。<br>5、什么叫做报文交换？<br>报文交换不要求在两个通信节点之间建立专用通路。节点把要发送的信息组织成一个数据包一报文，该报文中含有目标节点的地址，完整的报文在网络中一站一站地向前传送。每一个节点接收整个报文，检查目标节点地址，然后根据网络中的交通情况在适当的时候转发到下一个节点。经过多次的存储一转发，最后到达目标，因而这样的网络叫存储一转发网络。<br>6、什么叫分组交换？<br>分组交换也称为包交换，它将用户通信的数据划分成多个更小的等长数据段，在每个数据段的前面加上必要的控制信息作为数据段的首部，每个带有首部的数据段就构成了一个分组。首部指明了该分组发送的地址，当交换机收到分组之后，将根据首部中的地址信息将分组转发到目的地，这个过程就是分组交换。<br>7、什么虚电路交换？<br>所谓交换虚电路(SVC)就是两个数据终端要通信时先用呼叫程序建立电路（即虚电路），然后发送数据，通信结束后用拆线程序拆除虚电路。<br>通过蓝牙无线技术连接起来的网络属于（   ）。<br>8、什么叫做广域网？<br>广域网(Wide Area Network ,简称WAN)是一种跨地区的数据通讯网络,通常包含一个国家或地区。广域网通常由两个或多个局域网组成。<br>9、什么叫做城域网？<br>城域网(Metropolitan Area Network)是在一个城市范围内所建立的计算机通信网，简称MAN。属宽带局域网。<br>10、什么叫做局域网？<br>局域网的覆盖范围一般是方圆几千米之内，其具备的安装便捷、成本节约、扩展方便等特点使其在各类办公室内运用广泛。<br>11、什么叫做个域网？<br>个人域网（PAN），是指能在便携式消费电器与通信设备之间进行短距离通信的网络，其覆盖范围一般在10米半径以内。</p><h3 id="作图：-P45"><a href="#作图：-P45" class="headerlink" title="作图：   P45"></a>作图：   P45</h3><p>1、能根据比特流画出曼彻斯特编码、差分曼彻斯特编码、归零制和不归零制编码的图。<br>2、能根据基带信号画出最基本调制方法中的调幅和调频图。<br>调幅：对基带信号的波幅进行调整，例如将上图的1信号波幅进行改变，在接收方读取时有载波输出为1.<br>调频：对基带信号频率进行调整，例如将0信号调制为频率f1，1信号调制为频率f2。<br>调相：对基带信号相位进行调制，例如将0信号的初相位调整为0度，1信号的初相位调整为180度。</p><h3 id="计算"><a href="#计算" class="headerlink" title="计算"></a>计算</h3><p>CIDR地址快的使用（即路由聚合方法），如课本129页的图4-13。</p><ol><li>有如下的5个/24地址块，试进行最大可能的聚合。</li><li>156.152.0/24</li><li>156.153.0/24</li><li>156.154.0/24</li><li>156.155.0/24</li><li>156.156.0/24<br>解：这几块地址前面两个字节一样，只需比较第三个字节：</li><li>156.152.0/24 第三个字节 1001 1000</li><li>156.153.0/24第三个字节 1001 1001</li><li>156.154.0/24第三个字节 1001 1010</li><li>156.155.0/24第三个字节 1001 1011</li><li>156.156.0/24第三个字节 1001 1100<br>那么这五个地址块的共同前缀有21位：212.156. 1001 1<br>最大可能聚合地址块是：212.156.1001 1000.00000000/21=212.156.152.0/21</li></ol><p>2、 某单位分配到一个地址块136.23.12.32 /27。现在需要进一步划分为4 个一样大的子网。试问：<br>（1）每个子网的网络前缀有多长？<br>（2）每一个子网中有多少个地址？<br>（3）每一个子网的地址块是什么？<br>（4）每一个子网可分配给主机使用的最小地址和最大地址是什么？<br>答：<br>将136.23.12.32 /27转换为二进制：10001000 00010111 00001100 00100000/27<br>（1）根据题意，建立4个子网，要借2位为子网号，22=4，所以网络前缀为27+2=29位，剩下32-29=3位作主机位。 所以每个子网前缀有29位。<br>   （2）每个子网的地址中有3位留给主机用，因此共有23=8个地址。<br>   （3）（4）四 个子网的地址块以及每个子网分配给主机的最小地址和最大地址是：<br>第一个地址块136.23.12.32 /29，可分配给主机使用的<br>转为二进制 10001000 00010111 00001100 00100 000/29<br>最小地址：136.23.12.33（00100 001）<br>最大地址: 136.23.12.38（00100 110）<br>第二个地址块136.23.12.40/29，可分配给主机使用的<br>转为二进制 10001000 00010111 00001100 00101 000/29<br>最小地址：136.23.12.41（00101 001）<br>最大地址：136.23.12.46（00101 110）<br>第三个地址块136.23.12.48 /29，可分配给主机使用的<br>转为二进制 10001000 00010111 00001100 00110 000/29<br>最小地址：136.23.12.49（00110 001）<br>最大地址：136.23.12.54（00110 110）<br>第四个地址块：136.23.12.56/29，可分配给主机使用的<br>转为二进制 10001000 00010111 00001100 00111 000/29<br>最小地址：136.23.12.57（00111 001）<br>最大地址：136.23.12.62（00111 110）</p><p>3、 某单位分配到地址块136.230/16。该单位有2000 台机器，平均分布在 8个不同的地点。试给每一个地点分配一个地址块，并计算出每个地址块中IP地址的最小值和最大值（说明：必须有完整的解题步骤，否则不得分。）<br>答：2000/8=250，每个点平均250台电脑。如选255.255.255.0为掩码，每个子网有28-2=254&gt;250，共有子网数=28-2=254&gt;8，能满足实际需求。<br>每个地点的网络前缀和主机IP地址的最小值和最大值为：<br>地点    子网号      子网络地址             主机的最小值和值<br>1      00000001     136.230.1.0/24  :  136.230.1.1–136.230.1.254<br>2      00000002     136.230.2.0/24  :  136.230.2.1–136.230.2.254<br>3      00000003     136.230.3.0/24  :  136.230.3.1–136.230.3.254<br>………………………………..<br>7      00000007     136.230.7.0/24  :  136.230.7.1–136.230.7.254<br>8      00000001     136.230.8.0/24  :  136.230.8.1–136.230.8.254</p><p>4、某组织分配到一个地址块，其中第一个地址是14.24.74.0/24。这个组织需要划分为11个子网。具体要求是：具有64个地址的子网两个；具有32个地址的子网两个；具有16个地址的子网三个；具有4个地址的子网四个（这里的地址包括网络地址和广播地址）。试设计这些子网。分配结束后还剩下多少地址？<br>（说明：必须有完整的解题步骤，否则不得分。）<br>解答：<br>将14.24.74.0/24转换为二进制：00001110 00011000 01001010 00000000/24</p><ol><li>具有64个地址的子网2个：<br>根据要求可知，要借2位为子网号，因为每个子网为64个地址，所以主机号最少要保留6位才能满足每个子网64个地址，主机号共有8位，剩下8-2=6位可借给网络号。<br>00001110 00011000 01001010 00 000000  转为十进制：14.24.74.0/26<br>00001110 00011000 01001010 01 000000  转为十进制：14.24.74.64/26<br>2）具有32个地址的子网2个<br>因为每个子网为32个地址，所以主机号最少要保留5位才能满足每个子网32个地址，主机号共有8位，剩下8-5=3位可借给网络号。<br>00001110 00011000 01001010 100 00000  转为十进制：14.24.74.128/27<br>00001110 00011000 01001010 101 00000  转为十进制：14.24.74.160/27<br>3）具有16个地址的子网3个<br>因为每个子网为16个地址，所以主机号最少要保留4位才能满足每个子网16个地址，主机号共有8位，剩下8-4=4位可借给网络号。<br>00001110 00011000 01001010 1100 0000  转为十进制：14.24.74.192/28<br>00001110 00011000 01001010 1101 0000  转为十进制：14.24.74.208/28<br>00001110 00011000 01001010 1110 0000  转为十进制：14.24.74.224/28<br>4）具有4个地址的子网4个<br>因为每个子网为4个地址，所以主机号最少要保留2位才能满足每个子网4个地址，主机号共有8位，剩下8-2=6位可借给网络号。<br>00001110 00011000 01001010 111100 00  转为十进制：14.24.74.240/30<br>00001110 00011000 01001010 111101 00  转为十进制：14.24.74.244/30<br>00001110 00011000 01001010 111110 00  转为十进制：14.24.74.248/30<br>00001110 00011000 01001010 111111 00  转为十进制：14.24.74.252/30<br>全部256个地址已经分配完毕，没有剩下的地址。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java基础</title>
      <link href="/2021/122465132.html"/>
      <url>/2021/122465132.html</url>
      
        <content type="html"><![CDATA[<h2 id="字符"><a href="#字符" class="headerlink" title="字符"></a>字符</h2><h3 id="标识符"><a href="#标识符" class="headerlink" title="标识符"></a>标识符</h3><p>命名规则<br>可以包含数字，但不能以数字开头<br>除了下划线_,和$符之外，不能有其它特殊字符，如空格<br>区分字母大小写<br>不能使用Java关键字<br>换行符\n要加双引号<br>System.out.println(“名字”+“\n”);</p><h3 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h3><p>单行注释：//<br>多行注释：从“/<em>”开始到“</em>/”结束，<br>文档注释：从“/*<em>”开始到“</em>/”结束<br>文档注释可以用javadoc命令提取出来，生成类似于jdk文档的网页文件，以便于他人了解一个类的功能。</p><h3 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h3><pre><code>变量基本结构：类型 变量名 =值前面不可以有访问符</code></pre><h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><h3 id="8种基本数据类型"><a href="#8种基本数据类型" class="headerlink" title="8种基本数据类型"></a>8种基本数据类型</h3><h5 id="数值型"><a href="#数值型" class="headerlink" title="数值型"></a>数值型</h5><ul><li>整数<br>short型（短整型）数据在内存中占用2个字节<br>long型（长整型）数据在内存中占用8个字节。<br>int型（整型）数据在内存中占用4个字节。<br>byte型（字节型）数据在内存中占用1个字节，表示的存储数据范围为：-128~127。</li><li>浮点数<pre><code>  float型（单精度浮点型）数据在内存中占用4个字节。      float t = 3.1f           f转为double型  double型（双精度浮点型）数据在内存中占用8个字节。      一般小数默认是double型</code></pre><h5 id="字符型"><a href="#字符型" class="headerlink" title="字符型"></a>字符型</h5>char每个字符占2个字节，定义时用单引号’ ‘<h5 id="布尔型"><a href="#布尔型" class="headerlink" title="布尔型"></a>布尔型</h5>boolean：数据值只有true或false，适用于逻辑计算。<h3 id="引用数据类型"><a href="#引用数据类型" class="headerlink" title="引用数据类型"></a>引用数据类型</h3>类</li></ul><p>字符串类型String<br>最常用的一种存储文本的数据类型，用双引号“”<br>任何数据+字符串操作结果都是字符串<br>使用关键字和构造方法来创建 String 对象。<br>String str2=new String(“Runoob”);<br>有内置方法<br>hashCode() 方法用于返回字符串的哈希码。<br>length() 方法，它返回字符串对象包含的字符数。</p><h2 id="流程控制"><a href="#流程控制" class="headerlink" title="流程控制"></a>流程控制</h2><h4 id="判断语句"><a href="#判断语句" class="headerlink" title="判断语句"></a>判断语句</h4><h5 id="if条件语句"><a href="#if条件语句" class="headerlink" title="if条件语句"></a>if条件语句</h5><h5 id="switch多重选择"><a href="#switch多重选择" class="headerlink" title="switch多重选择"></a>switch多重选择</h5><h4 id="循环语句"><a href="#循环语句" class="headerlink" title="循环语句"></a>循环语句</h4><h5 id="while循环"><a href="#while循环" class="headerlink" title="while循环"></a>while循环</h5><h5 id="do-while循环"><a href="#do-while循环" class="headerlink" title="do while循环"></a>do while循环</h5><h5 id="for循环"><a href="#for循环" class="headerlink" title="for循环"></a>for循环</h5><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (初始条件; 循环检测条件; 循环后更新计数器) {</span><br><span class="line">    <span class="comment">// 执行语句</span></span><br><span class="line">}</span><br><span class="line"><span class="keyword">break</span>语句通常都是配合<span class="keyword">if</span>语句使用。要特别注意，<span class="keyword">break</span>语句总是跳出自己所在的那一层循环</span><br><span class="line"><span class="keyword">continue</span>则是提前结束本次循环，直接继续执行下次循环</span><br></pre></td></tr></tbody></table></figure><p>for each循环能够遍历所有“可迭代”的数据类型，包括后面会介绍的List、Map等。</p><h3 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h3><h4 id="遍历数组"><a href="#遍历数组" class="headerlink" title="遍历数组"></a>遍历数组</h4><p>for循环通过索引来访问</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span>[] ns = { <span class="number">1</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">16</span>, <span class="number">25</span> };</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;ns.length; i++) {</span><br><span class="line">    <span class="keyword">int</span> n = ns[i];</span><br><span class="line">    System.out.println(n);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>for each循环直接迭代数组的每个元素</p><p>第七章异常<br>    Error严重的错误<br>        OutOfMemoryError：内存耗尽<br>        NoClassDefFoundError：无法加载某个Class<br>        StackOverflowError：栈溢出<br>    Exceptio是运行时的错误，它可以被捕获并处理。<br>        RuntimeException以及它的子类；<br>        非RuntimeException<br>        （包括IOException、ReflectiveOperationException等等）<br>            异常类分为两种<br>                1.错误。一般指与虚拟机相关的问题，这些错误无法恢复和捕获<br>                2.异常（Exception），因编码错误或外在因素导致的问题<br>    两种异常处理机制<br>        1.使用try    catch捕获异常<br>            存在多个catch的时候，catch的顺序非常重要：子类必须写在前面<br>        2.trrows抛出异常</p><h1 id="面对对象"><a href="#面对对象" class="headerlink" title="面对对象"></a>面对对象</h1><h2 id="一-类和对象"><a href="#一-类和对象" class="headerlink" title="一.类和对象"></a>一.类和对象</h2><h3 id="1-属性"><a href="#1-属性" class="headerlink" title="1.属性"></a>1.属性</h3><p>直接把field用public暴露给外部可能会破坏封装性，所以用private<br>外部代码可以调用get()方法和set()方法来间接获取和修改指定的私有成员变量的值</p><h3 id="2-方法"><a href="#2-方法" class="headerlink" title="2.方法"></a>2.方法</h3><p> 定义语法</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">修饰符 方法返回类型 方法名(方法参数列表) {</span><br><span class="line">    若干方法语句;</span><br><span class="line">    <span class="keyword">return</span> 方法返回值;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>若方法中没有returun返回值，则该方法的返回类型为void类型</p><h4 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h4><h5 id="方法的参数传递机制"><a href="#方法的参数传递机制" class="headerlink" title="方法的参数传递机制"></a>方法的参数传递机制</h5><p>形参：声明方法时定义的参数，形参前必须有数据类型  格式：方法名（数据类型 形参）<br>实参：调用方法时给方法传递的实际数据，使用格式：对象名.方法名（实参）</p><h5 id="可变参数："><a href="#可变参数：" class="headerlink" title="可变参数："></a>可变参数：</h5><p>定义格式<br>方法名（参数列表，数据类型 … 变量）<br>注意：<br>可变参数只能处于参数列表的最后<br>一个方法最多只能包含一个可变参数<br>可变参数本质是一个数组，因此在调用时，既可以传入多个参数，也可传入一个数组</p><h4 id="构造方法"><a href="#构造方法" class="headerlink" title="构造方法"></a>构造方法</h4><p>作用：在创建对象时初始化对象中的属性值<br>构造方法的名称必须是类名。构造方法没有返回类型（也没有void），调用构造方法，必须用new操作符。<br>不能被static、final、synchronized、abstract和native修饰。构造方法不能被子类继承，所以用final和abstract修饰没有意义。</p><p>构造方法用于初始化一个新建的对象，所以用static修饰没有意义<br>语法：<br>访问符 类名 （参数）{<br>}</p><h5 id="this关键字："><a href="#this关键字：" class="headerlink" title="this关键字："></a>this关键字：</h5><p>this代表当前对象的内存地址，<br>在实例方法或者构造方法中，为了区分局部变量和实例变量，this不能省略<br>代表当前类将来产生的对象，即将来用该类new出来的对象，用于获取当前类的对象的引用</p><h4 id="方法的调用"><a href="#方法的调用" class="headerlink" title="方法的调用"></a>方法的调用</h4><p>1.调用非静态方法<br>    对象名.方法名（）<br>2.调用静态方法<br>    类名.方法名()</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Person p1 = <span class="keyword">new</span> Person(<span class="string">"Xiao Ming"</span>, <span class="number">15</span>); <span class="comment">// 既可以调用带参数的构造方法</span></span><br><span class="line">Person p2 = <span class="keyword">new</span> Person(); <span class="comment">// 也可以调用无参数构造方法</span></span><br></pre></td></tr></tbody></table></figure><h4 id="方法重载"><a href="#方法重载" class="headerlink" title="方法重载"></a>方法重载</h4><p>方法重载是指在一个类中定义多个同名的方法，但要求每个方法具有不同的参数的类型或参数的个数。<br>目的：功能类似的方法使用同一名字，更容易记住，因此，调用起来更简单。</p><h4 id="方法重写"><a href="#方法重写" class="headerlink" title="方法重写"></a>方法重写</h4><p>子类重写了父类的方法<br>注意：方法名相同，方法参数相同，但方法返回值不同，也是不同的方法</p><h3 id="对象"><a href="#对象" class="headerlink" title="对象"></a>对象</h3><h4 id="创建对象"><a href="#创建对象" class="headerlink" title="创建对象"></a>创建对象</h4><p>语法：类名 变量名=new 类名();<br>创建类的对象分为两步<br>1.定义该类的一个变量，此时在栈上会分配空间储存对象在堆中的地址（即对象的引用）<br>2.创建该对象的实际物理空间，即在堆中为该对象分配空间，并把此空间的地址（即引用）赋给对象名，此步骤通过new关键字来实例化该类的一个对象</p><h4 id="使用对象"><a href="#使用对象" class="headerlink" title="使用对象"></a>使用对象</h4><p>创建对象后就可以使用对象<br>访问对象的属性  语法：对象名.属性名<br>调用对象的方法   语法：对象名.方法名（）</p><h2 id="二-面向对象三大特征"><a href="#二-面向对象三大特征" class="headerlink" title="二.面向对象三大特征"></a>二.面向对象三大特征</h2><h3 id="封装"><a href="#封装" class="headerlink" title="封装"></a>封装</h3><p>实际上就是信息隐藏，将类中的成员属性和成员方法修饰为私有化，数据被保护在对象的内部，尽可能地隐藏内部的细节，只保留一些对外接口使之与外部发生联系，即get/set方法。</p><p>其他对象只能通过该对象提供的get/set方法，与这个封装的对象进行交流和交互。也就是说用户是无需知道对象内部的细节（当然也无从知道），但可以通过该对象对外提供的接口来访问该对象。</p><ul><li>访问符：用于指明类、属性或方法的访问权限<br>public公共访问权限，可被同一包或不同包的所有类访问<br>protected子类访问权限，可以被同一包的其它类访问，也可以被其他包的子类访问<br>friendly包访问权限，如果没设置访问符则默认friendly包访问权限，可被同一包中所有类访问<br>private 当前类访问权限，只能被当前类的其它成员访问</li><li>修饰符：用于指明类的特性<pre><code>  abstarct（抽象）  static（静态）  final（最终）</code></pre></li></ul><p>如果有很多代码都使用了Dog这个类；当某一天这个类的age属性需要换成String类型，那么，外部使用它的任何地方都需要需改xxx.age=”xxx”，这将是非常繁琐的一个过程，那该怎么办呢？很简单，使用private修饰符将属性封装，开放访问接口的方法，我们只需要修改一下set方法就能完美解决。</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line">Dog d1 = <span class="keyword">new</span> Dog();</span><br><span class="line"><span class="comment">//调用时发生变化</span></span><br><span class="line">d1.setName(<span class="string">"旺财"</span>);</span><br><span class="line">d1.setAge(<span class="number">3</span>);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Dog</span></span>{</span><br><span class="line"><span class="keyword">private</span> String age;<span class="comment">//修改为String类型</span></span><br><span class="line"><span class="keyword">private</span> String name;</span><br><span class="line"><span class="comment">//将属性私有化，提供set方法，将int类型的值转成String</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(<span class="keyword">int</span> age)</span> </span>{</span><br><span class="line"><span class="keyword">this</span>.age = String.valueOf(age);</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>{</span><br><span class="line"><span class="keyword">this</span>.name = name;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>这样外部使用它的地方都不用修改，我们只用简单的修改对象内部就可以了，更加方便快捷。到了这里我们应该可以看出，封装确实可以使我们容易地修改类的内部实现，而无需修改使用了该类的客户代码。</p><p>这里还可以体现出一些封装属性的优势，案例如下：</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line">Dog d1 = <span class="keyword">new</span> Dog();</span><br><span class="line">d1.setName(<span class="string">"旺财"</span>);</span><br><span class="line">d1.setAge(<span class="number">300</span>);<span class="comment">//狗的年龄赋值很明显不合理，这里就需要在set方法中给出提示</span></span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Dog</span></span>{</span><br><span class="line"><span class="keyword">private</span> String age;</span><br><span class="line"><span class="keyword">private</span> String name;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(<span class="keyword">int</span> age)</span> </span>{</span><br><span class="line"><span class="keyword">if</span>(age&gt;<span class="number">100</span>||age&lt;<span class="number">0</span>) {</span><br><span class="line">System.out.println(<span class="string">"你见过超过100岁的狗狗吗？"</span>);</span><br><span class="line">}<span class="keyword">else</span>  {</span><br><span class="line"><span class="keyword">this</span>.age = String.valueOf(age);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>{</span><br><span class="line"><span class="keyword">this</span>.name = name;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h3><p>作用：通过继承，子类可以使用父类中的非私有属性和非私有方法，从而提高代码的重用性，提高开发效率。<br>子类自动获得了父类的所有字段，严禁定义与父类重名的字段！<br>为了让子类可以访问父类的字段，把private改为protected。用protected修饰的字段可以被子类访问<br>除了父类中私有的属性和方法，子类必须全部继承。<br>3、子类可以拥有自己的属性和方法，即子类可以对父类进行扩展。<br>4、子类可以用自己的方式实现父类的方法（即方法的重写/覆盖）。<br>5、构造器而言，它只能够被调用，而不能被继承，子类可以使用super()调用父类构造器。<br>6、对于继承而已，子类会默认调用父类的无参构造，但是如果父类没有无参构造，子类必须要在其构造方法中的第一行代码调用指定父类的构造器，传递对应参数。<br>7、Java 的继承是单继承，即每个子类只能拥有一个直接父类，但是该父类可以有多个子类<br>通过extends关键字实现继承<br>语法格式<br><code>访问符 修饰符 class 子类 extends 父类{  }</code></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Father</span></span>{</span><br><span class="line"><span class="comment">//父类中的非私有属性都会被继承</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">int</span> age;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">double</span> money;</span><br><span class="line">String home;</span><br><span class="line"><span class="comment">//父类中的非私有方法都会被继承</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span> </span>{} <span class="comment">//吃东西</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sleep</span><span class="params">()</span> </span>{}<span class="comment">//睡觉</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">soner</span><span class="params">()</span> </span>{}<span class="comment">//打呼噜</span></span><br><span class="line"><span class="comment">//父类构造方法如果有参数，子类必须在构造方法第一行中调用</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Father</span><span class="params">(<span class="keyword">int</span> x)</span> </span>{</span><br><span class="line"><span class="comment">//父类如果写了有参构造，那么默认的无参构造将不再生效</span></span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Son</span> <span class="keyword">extends</span> <span class="title">Father</span></span>{</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Son</span><span class="params">(<span class="keyword">int</span> x)</span> </span>{</span><br><span class="line"><span class="keyword">super</span>(x);<span class="comment">//调用父类构造 super() </span></span><br><span class="line">age=<span class="number">12</span>;<span class="comment">//继承后拥有父类的属性</span></span><br><span class="line">home=<span class="string">"王者峡谷河道下边的草丛"</span>;</span><br><span class="line"><span class="comment">//money=3.0; 父类私有属性无法访问</span></span><br><span class="line">sleep();<span class="comment">//可以执行父类中的非私有方法</span></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>子类继承父类，默认在子类构造方法中调用父类构造，在创建子类实例对象时，实际上的执行顺序是（父类构造——子类构造）。在类的构造器中还有一段特别的代码，优先与构造器，在创建对象时优先执行，话不多说直接看代码：</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line">Z z1 = <span class="keyword">new</span> Z();<span class="comment">//创建子类实例对象时，实际上的执行顺序</span></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">F</span> </span>{</span><br><span class="line"><span class="keyword">static</span> { </span><br><span class="line"><span class="comment">//静态代码块，只有方法的大括号，没有方法名返回值等任何内容</span></span><br><span class="line">System.out.println(<span class="string">"父类静态代码块"</span>);</span><br><span class="line">}</span><br><span class="line">{</span><br><span class="line"><span class="comment">//构造代码块，只有方法的大括号，没有方法名返回值等任何内容</span></span><br><span class="line">System.out.println(<span class="string">"父类构造代码块"</span>);</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">F</span><span class="params">()</span> </span>{</span><br><span class="line"><span class="comment">// 父类构造器</span></span><br><span class="line">System.out.println(<span class="string">"父类构造器"</span>);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Z</span> <span class="keyword">extends</span> <span class="title">F</span></span>{</span><br><span class="line"><span class="keyword">static</span> { </span><br><span class="line"><span class="comment">//静态代码块，只有方法的大括号，没有方法名返回值等任何内容</span></span><br><span class="line">System.out.println(<span class="string">"子类静态代码块"</span>);</span><br><span class="line">}</span><br><span class="line">{</span><br><span class="line"><span class="comment">//构造代码块，只有方法的大括号，没有方法名返回值等任何内容</span></span><br><span class="line">System.out.println(<span class="string">"子类构造代码块"</span>);</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Z</span><span class="params">()</span> </span>{</span><br><span class="line"><span class="comment">// 父类构造器</span></span><br><span class="line">System.out.println(<span class="string">"子类构造器"</span>);</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>运行结果</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">父类静态代码块</span><br><span class="line">子类静态代码块</span><br><span class="line">父类构造代码块</span><br><span class="line">父类构造器</span><br><span class="line">子类构造代码块</span><br><span class="line">子类构造器</span><br></pre></td></tr></tbody></table></figure><h3 id="多态"><a href="#多态" class="headerlink" title="多态"></a>多态</h3><p>面向对象三大特征，封装、继承、多态。从某种意义上来讲，封装和继承几乎就是为了多态而准备的，也是三大特征中最重要的知识点。</p><p>多态的定义：指允许不同类的对象对同一消息做出响应。即同一消息可以根据发送对象的不同而采用多种不同的行为方式。简单来说就是不同类型的对象（父类或子类）调用同一个方法，根据发出调用的对象不同，执行的方法也就不同。</p><p>实现多态的技术称为：动态绑定（dynamic binding），是指在执行期间判断所引用对象的实际类型，根据其实际的类型调用其相应的方法。</p><p>多态的作用：消除类型之间的耦合关系。</p><p>这里举一个简单的小例子：父类是个农民，技能是使用锄头耕地。子类继承了父类，重写了父类的锄头耕地技能，更新换代为使用拖拉机耕地。如果是父类对象调用这个技能，就是使用锄头手动耕地，如果是子类对象调用这个技能，就是使用拖拉机耕地。</p><p>java实现多态有三个必要条件：继承、重写、父类引用指向子类对象。<br>继承：在多态中必须存在有继承关系的子类和父类。<br>重写：子类对父类中某些方法进行重新定义，在调用这些方法时就会调用子类的方法。<br>父类引用指向子类对象（向上转型）：在多态中需要将子类的引用赋给父类对象，只有这样该引用才能够具备技能调用父类的方法和子类的方法。</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">People</span> </span>{<span class="comment">//人类 作为所有职业的父类</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">int</span> age;</span><br><span class="line"><span class="keyword">public</span> String name;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">work</span><span class="params">()</span> </span>{<span class="comment">//父类的方法</span></span><br><span class="line">System.out.println(<span class="string">"劳动"</span>);</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line"><span class="comment">//父类引用指向子类对象就是多态性的体现</span></span><br><span class="line">People p1 = <span class="keyword">new</span> Doctor();<span class="comment">// p1的类型是人类类型，但是指向的实例对象是医生</span></span><br><span class="line">p1.work();<span class="comment">//父类引用发出的调用，调用到的是医生类中重写父类的方法</span></span><br><span class="line">People p2 = <span class="keyword">new</span> Teacher();</span><br><span class="line">p2.work();<span class="comment">//父类引用发出的调用，调用到的是教师类中重写父类的方法</span></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Doctor</span> <span class="keyword">extends</span> <span class="title">People</span></span>{</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">work</span><span class="params">()</span> </span>{<span class="comment">//医生类继承人类，重写工作方法</span></span><br><span class="line">System.out.println(<span class="string">"救死扶伤"</span>);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Teacher</span> <span class="keyword">extends</span> <span class="title">People</span></span>{</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">work</span><span class="params">()</span> </span>{<span class="comment">//教师类继承人类，重写工作方法</span></span><br><span class="line">System.out.println(<span class="string">"教书育人"</span>);</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>运行结果</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">救死扶伤</span><br><span class="line">教书育人</span><br></pre></td></tr></tbody></table></figure><p> 注意：指向子类的父类引用由于向上转型了，它只能访问父类中拥有的方法和属性，而对于子类中存在而父类中不存在的方法，该引用是不能使用的。比如说方法的重载，尽管方法名称相同，但是父类只能调用到子类重写的方法，调用不到重载方法。<br> </p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"> <span class="class"><span class="keyword">class</span> <span class="title">Teacher</span> <span class="keyword">extends</span> <span class="title">People</span></span>{</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">work</span><span class="params">()</span> </span>{<span class="comment">//教师类继承人类，重写work方法</span></span><br><span class="line">System.out.println(<span class="string">"教书育人"</span>);</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">work</span><span class="params">(String name)</span> </span>{<span class="comment">//重载了work方法，但是此方法父类引用无法调用</span></span><br><span class="line">System.out.println(<span class="string">"负责教导的课程是"</span>+name);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><br>多态的好处：<p></p><p>1.可替换性（substitutability）。多态对已存在代码具有可替换性。例如：医生、律师、程序员都是人类的子类，根据使用场景不同随时可以替换为符合的职业。<br>2.可扩充性（extensibility）。多态对代码具有可扩充性。增加新的子类不影响已存在类的多态性、继承性，以及其他特性的运行和操作。实际上新加子类更容易获得多态功能。例如，在拥有了医生、律师的继承上，还可以继续添加新的职业，比如主播，运动员等，都是添加为人类的多态性。<br>3.接口性（interface-ability）。多态是超类通过抽象方法，向子类提供了一个共同接口，由子类来完善或者覆盖它而实现的。每个子类都可以根据自身的特性去重写父类的抽象方法。<br>4.灵活性（flexibility）。它在应用中体现了灵活多样的操作，提高了使用效率。<br>5.简化性（simplicity）。多态简化对应用软件的代码编写和修改过程，尤其在处理大量对象的运算和操作时，这个特点尤为突出和重要。</p><p><a href="https://blog.csdn.net/weixin_37942054/article/details/119081228?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522164069407816780265482575%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=164069407816780265482575&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_click~default-5-119081228.pc_search_insert_es_download&amp;utm_term=java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1&amp;spm=1018.2226.3001.4187">https://blog.csdn.net/weixin_37942054/article/details/119081228?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522164069407816780265482575%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=164069407816780265482575&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_click~default-5-119081228.pc_search_insert_es_download&amp;utm_term=java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1&amp;spm=1018.2226.3001.4187</a></p><h2 id="三-类之间的关系"><a href="#三-类之间的关系" class="headerlink" title="三.类之间的关系"></a>三.类之间的关系</h2><h3 id="继承-1"><a href="#继承-1" class="headerlink" title="继承"></a>继承</h3><h3 id="依赖关系"><a href="#依赖关系" class="headerlink" title="依赖关系"></a>依赖关系</h3><p>在一个类的方法中操作另一个类的对象，则称其依赖于第二个类<br>例如方法的参数时某个类的对象</p><h3 id="关联关系"><a href="#关联关系" class="headerlink" title="关联关系"></a>关联关系</h3><p>体现为一个类中使用另一个类的对象作为该类的成员变量</p><h3 id="聚合关系"><a href="#聚合关系" class="headerlink" title="聚合关系"></a>聚合关系</h3><p>聚合关系是关联关系的一种特例，体现是整体与部分的关系，<br>表现为一个类（整体）由多个其他类的对象（部分）作为该类的成员变量</p><h3 id="组成关系"><a href="#组成关系" class="headerlink" title="组成关系"></a>组成关系</h3><h2 id="抽象类"><a href="#抽象类" class="headerlink" title="抽象类"></a>抽象类</h2><h3 id="定义抽象类"><a href="#定义抽象类" class="headerlink" title="定义抽象类"></a>定义抽象类</h3><p>语法格式：</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">访问符 <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> 类名</span>{</span><br><span class="line">访问符 <span class="keyword">abstract</span> 返回类型 方法名（参数列表）</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>有抽象方法的类只能被定义为抽象类，但抽象类中可以没有抽象方法<br>抽象类不能被实例化，即无法用new创建一个抽象类的对象<br>抽象类作为子类的模版，避免子类设计的随意性<br>对象不能由抽象类直接创建，只可以通过抽象类派生出新的子类，再由其子类来创建对象<br>abstract 关键字不能用来修饰属性和构造方法<br>抽象方法必须被子类重写才有意义，因此不能用private修饰抽象方法<br>抽象方法,没有方法体</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> call（）； <span class="comment">//抽象方法，没有{}括起来的方法体</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> call（）{}.     <span class="comment">//空方法</span></span><br></pre></td></tr></tbody></table></figure><h3 id="使用抽象类"><a href="#使用抽象类" class="headerlink" title="使用抽象类"></a>使用抽象类</h3><p>写一个子类继承抽象类，重写抽象方法<br>虽然不能直接new一个抽象类，但可以先声明一个抽象类变量，再用这个变量指向其子类对象</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">抽象类名 a;</span><br><span class="line">a = <span class="keyword">new</span> 子类名();</span><br></pre></td></tr></tbody></table></figure><h2 id="接口"><a href="#接口" class="headerlink" title="接口"></a>接口</h2><p>接口规定一批类必须提供某些方法，但不提供实现方法<br>不能用final关键字修饰接口</p><h3 id="定义接口"><a href="#定义接口" class="headerlink" title="定义接口"></a>定义接口</h3><p>接口是隐性抽象的，不必使用abstract<br>用关键字interface定义</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">访问符 <span class="class"><span class="keyword">interface</span> 接口名  </span>{</span><br><span class="line"><span class="comment">//接口定义的只能是静态常量</span></span><br><span class="line"><span class="keyword">int</span> a = <span class="number">5</span>;</span><br><span class="line"><span class="comment">//接口定义的普通方法只能是public的抽象方法</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">display</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">//接口中定义默认方法，用default修饰</span></span><br><span class="line"><span class="function"><span class="keyword">default</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">int</span> b)</span></span>{}</span><br><span class="line"><span class="comment">//接口中定义类方法，用static修饰</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">del</span><span class="params">()</span></span>{}</span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>注意：<br>访问符可以是public或默认，默认是采用包权限访问控制，即在相同包内才可以访问该接口<br>成员变量被隐含地声明为public static final，属性只能是静态常量<br>接口中的方法被隐形指定为public absrtact<br>接口定义的方法只能是定抽象方法，默认方法，类方法<br>接口内定义的常量和方法默认为public,可以不写</p><h3 id="实现接口"><a href="#实现接口" class="headerlink" title="实现接口"></a>实现接口</h3><p>用implements实现接口<br>一个类可实现多个接口，且必须实现接口中定义的所有抽象方法，否则该类必须定义为抽象类<br>语法格式：</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">访问符 <span class="class"><span class="keyword">class</span> <span class="keyword">implements</span> 接口1，接口2</span>{</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span> <span class="params">(String[]args)</span></span>{</span><br><span class="line"><span class="comment">//先声明一个接口类型的变量，new一个该接口实现类的实例对象，并将其引用赋值给变量</span></span><br><span class="line">接口名 变量名 = <span class="keyword">new</span> 接口实现类（）;</span><br><span class="line"><span class="comment">//调用接口的默认方法，必须通过实例对象来调用</span></span><br><span class="line">变量名.默认方法（）;</span><br><span class="line"><span class="comment">//调用接口的类方法</span></span><br><span class="line">接口名.类方法（）;</span><br><span class="line"><span class="comment">//声明接口实现类的变量，并实例化该类型对象</span></span><br><span class="line">接口实现类名 变量名 = <span class="keyword">new</span> 接口实现类名（）;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="接口的继承"><a href="#接口的继承" class="headerlink" title="接口的继承"></a>接口的继承</h3><p>接口可以继承多个接口，不能继承类<br>使用interface可以声明一个接口：</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Person</span> </span>{</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function">String <span class="title">getName</span><span class="params">()</span></span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>属性只能是常量</p><p>一个类可以实现多个interface，例如：</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span> <span class="keyword">implements</span> <span class="title">Person</span>, <span class="title">Hello</span> </span>{ <span class="comment">// 实现了两个interface</span></span><br><span class="line">    ...</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="核心类"><a href="#核心类" class="headerlink" title="核心类"></a>核心类</h2><h3 id="字符串类"><a href="#字符串类" class="headerlink" title="字符串类"></a>字符串类</h3><p>每个用双引号括起来的字符串都是String类的一个实例</p><h2 id="内部类"><a href="#内部类" class="headerlink" title="内部类"></a>内部类</h2><p>java允许在一个类的类体里再定义一个类，该情况下外面的类叫外部类，里面的叫内部类<br>内部类可以访问其所在内部类的所有属性</p><h3 id="成员内部类"><a href="#成员内部类" class="headerlink" title="成员内部类"></a>成员内部类</h3><p>在外部类的内部定义一个类</p><h4 id="静态内部类"><a href="#静态内部类" class="headerlink" title="静态内部类"></a>静态内部类</h4><h4 id="非静态内部类"><a href="#非静态内部类" class="headerlink" title="非静态内部类"></a>非静态内部类</h4><h3 id="局部内部类"><a href="#局部内部类" class="headerlink" title="局部内部类"></a>局部内部类</h3><h3 id="匿名内部类"><a href="#匿名内部类" class="headerlink" title="匿名内部类"></a>匿名内部类</h3><p>final class就不能被别的类继承</p><h1 id="习题"><a href="#习题" class="headerlink" title="习题"></a>习题</h1><h2 id="简答题"><a href="#简答题" class="headerlink" title="简答题"></a>简答题</h2><p>1、java源程序在控制台环境下编译和运行的命令是什么？编译之后生成了什么文件？<br>编译Javac name.java  生成.class文件<br>运行Java name </p><p>2．Java的数据类型分为哪几种？请列举出8个Java的基本数据类型。<br>   byte  short int long double float<br>     char<br>     boolean</p><ol start="3"><li>继承的主要作用是什么？如何使用一个子类继承一个父类？<br>通过继承，子类可以使用父类的非私有属性和非私有方法，从而提高代码重用性，提高开发效率</li></ol><p>4、continue的功能是什么？break的功能是什么？两者的区别？<br>continue跳出本次循环，直接执行下一次循环<br>break直接跳出本层循环</p><ol start="5"><li>toString 方法的功能是什么？如何使用toString 来实现方法重写？<br>toString()将对象的内容转换为字符串<br>当需要将一个对象输出到显示器时,通常要调用他的toString()方法,将对象的内容转换为字符串.java中的所有类默认都有一个toString()方法</li></ol><p>默认情况下 System.out.println(对象名)或者System.out.println(对象名.toString())输出的是此对象的类名和此对象对应内存的首地址 如果想自定义输出信息必须重写toString()方法</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*注意事项</span></span><br><span class="line"><span class="comment">1.必须被声明为public</span></span><br><span class="line"><span class="comment">2.返回类型为String</span></span><br><span class="line"><span class="comment">3.方法的名称必须为toString,且无参数</span></span><br><span class="line"><span class="comment">4.方法体中不要使用输出方法System.out.println()</span></span><br><span class="line"><span class="comment">语法格式为*/</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span></span>{      }</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>6、构造方法的作用是什么？<br>在创建对象时，初始化对象的属性</p><ol start="7"><li>什么是抽象方法？什么是抽象类？<br>抽象类就是不能使用new方法进行实例化的类，即没有具体实例对象的类<br>抽象方法：抽象方法就是以abstract修饰的方法，这种方法只声明返回的数据类型，方法名称和所需要的参数，没有方法体，这个方法必须被子类的方法所重写</li></ol><p>8  什么是类间的依赖关系？什么是类的关联关系？什么是类的聚合关系？什么是类的组成关系？<br> 依赖关系<br>在一个类的方法中操作另一个类的对象，则称其依赖于第二个类<br>例如方法的参数时某个类的对象</p><p>关联关系体现为一个类中使用另一个类的对象作为该类的成员变量</p><p>聚合关系是关联关系的一种特例，表现为一个类（整体）由多个其他类的对象（部分）作为该类的成员变量</p><ol start="9"><li><p> super关键字的主要作用是什么？<br>对于有继承关系的类，子类可以通过这个关键字调用父类中的方法<br>写法，即 super（构造方法名），而且必须是这个构造方法的第一句。<br>在子类的构造方法中调用父类的构造方法<br>在子类方法访问父类的属性和方法</p></li><li><p>this代表什么？this大部分情况下是可以省略的，请说明什么时候不能省略this。<br>this是一个变量，保存了当前对象的内存地址，指向这个对象自身。this代表的就是 “当前对象”<br>在实例方法或者构造方法当中，为了区分同名的局部变量和实例变量，this不能省略</p></li><li><p>Java中包含哪几种内部类？什么是成员内部类？什么是局部内部类？什么是最终类？<br>包含：成员内部类、局部内部类、静态内部类、匿名内部类<br>成员内部类：在“外部类”的内部定义一个类，作为一个成员存在，与外部类的属性、方法并列<br>局部内部类：在方法中定义的内部类称为局部内部类，不仅可以访问包含它的外部类成员，还可以访问局部变量<br>最终类：最终类有final关键字修饰，最终类不可被继承</p></li><li><p>什么是类？类里面包含什么？什么是对象？两者之间的区别是什么？<br>类：类是具有相同属性和方法的一组对象的集合<br>类包含字段和方法<br>对象：对象是一具体事物<br>区别：对象是类的一个实例，拥有类定义的属性和方法</p></li><li><p>java中有哪几种注释？分别用什么符号表示？<br>单行注释：//<br>多行注释：从“/<em>”开始到“</em>/”结束，<br>文档注释：从“/*<em>”开始到“</em>/”结束<br>文档注释可以用javadoc命令提取出来，生成类似于jdk文档的网页文件，以便于他人了解一个类的功能。</p></li><li><p>什么是缺省构造器？它的作用是什么？缺省构造器什么时候无法产生作用？<br>如果一个类没有定义构造方法，编译器会自动创建一个缺省构造器<br>作用在创建对象时初始化对象的属性<br>如果你已经定义了一个无参构造方法，</p></li><li><p>public、private、protected三个访问控制符代表了不同的访问级别，请分别进行说明。<br>public公共访问权限，可被同一包或不同包的所有类访问<br>protected子类访问权限，可以被同一包的其它类访问，也可以被其他包的子类访问<br>friendly包访问权限，如果没设置访问符则默认friendly包访问权限，可被同一包中所有类访问<br>private 当前类访问权限，只能被当前类的其它成员访问</p></li></ol><ol start="17"><li><p>什么是多态？多态在代码中的表现形式是什么？多态的作用？<br>同一个对象在不同阶段，多种状态<br>表现形式：继承、重写、父类引用指向子类对象<br>作用：可以将子类对象直接赋值给一个父类引用变量，无须任何类型转换</p></li><li><p>一个”.java”源文件中是否可以包括多个类(不是内部类)?有什么限制?<br>可以，但只能有一个public类，并且public的类名必须和文件名一致</p></li><li><p>final关键字的主要作用是什么？<br>被final关键字修饰的类不能被继承，被final关键字修饰的类属性和类方法不能被覆盖（重写）；</p></li><li><p>什么是接口？接口如何定义？接口中能够包含哪些方法？接口和类在继承方面的区别。<br>接口可以定义抽象方法，默认方法，类方法<br>接口可以多继承，即一个接口可以继承多个接口<br>类只能单继承，一个子类只能有一个直接父类</p></li><li><p>什么是方法重载？什么是方法重写？两者的区别？<br>方法重载是指在同一个类中定义多个同名的方法，但要求每个方法具有不同的参数类型或者参数个数<br>方法重写是指在子类创建一个与父类中除了方法体的实现不同外，其它都相同的方法，以便实现不同于父类的功能</p><h2 id="判断一个变量的数据是奇数还是偶数"><a href="#判断一个变量的数据是奇数还是偶数" class="headerlink" title="判断一个变量的数据是奇数还是偶数"></a>判断一个变量的数据是奇数还是偶数</h2><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>{</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line">judgeNum(<span class="number">2</span>);</span><br><span class="line">judgeNum(<span class="number">3</span>);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 判断是奇数还是偶数的方法</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> num</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">judgeNum</span><span class="params">(<span class="keyword">int</span> num)</span> </span>{</span><br><span class="line"><span class="keyword">if</span>(num % <span class="number">2</span> == <span class="number">0</span>) {</span><br><span class="line">System.out.println(num + <span class="string">"是偶数"</span>);</span><br><span class="line">} <span class="keyword">else</span> {</span><br><span class="line">System.out.println(num + <span class="string">"是奇数"</span>);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="计算-1000-以内不能被-7-整除的整数之和。"><a href="#计算-1000-以内不能被-7-整除的整数之和。" class="headerlink" title="计算 1000 以内不能被 7 整除的整数之和。"></a>计算 1000 以内不能被 7 整除的整数之和。</h2><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test02</span> </span>{</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> s=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">1000</span>;i++){</span><br><span class="line">            <span class="keyword">if</span>((i%<span class="number">7</span>)!=<span class="number">0</span>){</span><br><span class="line">                s=s+i;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        System.out.println(s);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="计算-1-2-3-4-5-…-100-的结果。"><a href="#计算-1-2-3-4-5-…-100-的结果。" class="headerlink" title="计算 1+2-3+4-5+…+100 的结果。"></a>计算 1+2-3+4-5+…+100 的结果。</h2><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Method03</span> </span>{</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> res = getSum();</span><br><span class="line">        System.out.println(res);</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    返回值类型: int</span></span><br><span class="line"><span class="comment">    方法名称： getSum</span></span><br><span class="line"><span class="comment">    参数列表：</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getSum</span><span class="params">()</span></span>{</span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">100</span>; i++) {</span><br><span class="line">            sum += i;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> sum;</span><br><span class="line">    }</span><br></pre></td></tr></tbody></table></figure><h2 id="定义一个方法，计算某个整数的阶乘。"><a href="#定义一个方法，计算某个整数的阶乘。" class="headerlink" title="定义一个方法，计算某个整数的阶乘。"></a>定义一个方法，计算某个整数的阶乘。</h2><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Method04</span> </span>{</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> res = jieCheng(<span class="number">5</span>);</span><br><span class="line">        System.out.println(res);</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">jieCheng</span><span class="params">(<span class="keyword">int</span> num)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> result = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = num; i &gt; <span class="number">1</span>; i--) {</span><br><span class="line">            result *= i;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="定义一个方法，判断某个整数是否为质数。（质数是指大于-1-的自然数中，除了-1-和它"><a href="#定义一个方法，判断某个整数是否为质数。（质数是指大于-1-的自然数中，除了-1-和它" class="headerlink" title="定义一个方法，判断某个整数是否为质数。（质数是指大于 1 的自然数中，除了 1 和它"></a>定义一个方法，判断某个整数是否为质数。（质数是指大于 1 的自然数中，除了 1 和它</h2><p>本身之外不再有其它因数的自然数。） </p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test02</span> </span>{</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line">        System.out.println(prime(<span class="number">3</span>));</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">//定义方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">prime</span><span class="params">(<span class="keyword">int</span> n)</span> </span>{</span><br><span class="line">        <span class="comment">//先判断小于0的</span></span><br><span class="line">        <span class="keyword">if</span> (n &lt; <span class="number">0</span>) {</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (n == <span class="number">1</span> || n == <span class="number">2</span>) {</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        } <span class="keyword">else</span> {</span><br><span class="line">            <span class="keyword">int</span> a = (<span class="keyword">int</span>) Math.sqrt(n);</span><br><span class="line">            <span class="comment">//如9%3=0 他除了1合本身还有别的数</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= a; i++) {</span><br><span class="line">                <span class="keyword">if</span> (n % i == <span class="number">0</span>) {</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="小红的妈妈每天都会给她-2-5-元钱，她都会存起来。但是，如果这一天是存钱的第-5-天"><a href="#小红的妈妈每天都会给她-2-5-元钱，她都会存起来。但是，如果这一天是存钱的第-5-天" class="headerlink" title="小红的妈妈每天都会给她 2.5 元钱，她都会存起来。但是，如果这一天是存钱的第 5 天"></a>小红的妈妈每天都会给她 2.5 元钱，她都会存起来。但是，如果这一天是存钱的第 5 天</h2><p>或者是 5 的倍数的话，她都会花去 6 元。请问：经过多少天，小红才可以存到 100 元钱。 </p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">XiTi5</span> </span>{</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>{</span><br><span class="line">        <span class="keyword">double</span> sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;;i++){</span><br><span class="line">            sum = <span class="number">2.5</span> + sum;</span><br><span class="line">            <span class="keyword">if</span>(i%<span class="number">5</span>==<span class="number">0</span>){</span><br><span class="line">                sum = sum-<span class="number">6</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span>(sum&gt;=<span class="number">100</span>){</span><br><span class="line">                System.out.println(<span class="string">"经过"</span>+i+<span class="string">"天可以存到100元钱"</span>+<span class="string">","</span>+<span class="string">"钱的总数是"</span>+sum+<span class="string">"元"</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="水仙花数"><a href="#水仙花数" class="headerlink" title="水仙花数"></a>水仙花数</h2><p>一个数如果是一个三位数，并且它的十位、个位、百位的数字立方和等于它本身，这个<br>数就叫做水仙花数。例如：371 = 3 的立方+7 的立方+1 的立方。 请求出所有水仙花数。 </p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">XiTi6</span> </span>{</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> a,b,c,s;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">100</span>;i&lt;<span class="number">1000</span>;i++)</span><br><span class="line">        {</span><br><span class="line">            c=i%<span class="number">10</span>;</span><br><span class="line">            b=(i/<span class="number">10</span>)%<span class="number">10</span>;</span><br><span class="line">            a=i/<span class="number">100</span>;</span><br><span class="line">            <span class="keyword">if</span>(Math.pow(a,<span class="number">3</span>)+Math.pow(b,<span class="number">3</span>)+Math.pow(c,<span class="number">3</span>)==i)</span><br><span class="line">            {</span><br><span class="line">                System.out.print(<span class="string">" "</span>+i);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="求出数组中的最大值"><a href="#求出数组中的最大值" class="headerlink" title="求出数组中的最大值"></a>求出数组中的最大值</h2><p>[5, 15, 30, 20, 1000] </p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Array03</span> </span>{</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span>[] array = {<span class="number">5</span>, <span class="number">15</span>, <span class="number">30</span>, <span class="number">20</span>, <span class="number">1000</span>};</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> max;</span><br><span class="line">        max = array[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; array.length; i++) {</span><br><span class="line">            <span class="keyword">if</span>(array[i] &gt; max) {</span><br><span class="line">                max = array[i];</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        System.out.println(<span class="string">"max:"</span> + max);</span><br><span class="line"></span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="数组元素反转"><a href="#数组元素反转" class="headerlink" title="数组元素反转"></a>数组元素反转</h2><p>本来：[10, 30, 20, 40, 50]<br>结果：[50，40, 20, 30, 10]<br>要求不能使用新数组，就用原来的唯一一个数组。 </p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Array04</span> </span>{</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span>[] array = {<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>, <span class="number">40</span>, <span class="number">50</span>};</span><br><span class="line"></span><br><span class="line">        <span class="comment">//遍历打印数组本来的样子</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; array.length; i++) {</span><br><span class="line">            System.out.println(array[i]);</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"=================="</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        初始化语句： int min = 0, max = array.length - 1;</span></span><br><span class="line"><span class="comment">        条件判断： min &lt; max</span></span><br><span class="line"><span class="comment">        步进表达式： min++, max--</span></span><br><span class="line"><span class="comment">        循环体：交换</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> min = <span class="number">0</span>, max = array.length - <span class="number">1</span>; min &lt; max; min++, max--) {</span><br><span class="line">            <span class="comment">//交换</span></span><br><span class="line">            <span class="keyword">int</span> temp = array[min];</span><br><span class="line">            array[min] = array[max];</span><br><span class="line">            array[max] = temp;</span><br><span class="line"></span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; array.length; i++) {</span><br><span class="line">            System.out.println(array[i]);</span><br><span class="line"></span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="对象数组"><a href="#对象数组" class="headerlink" title="对象数组"></a>对象数组</h2><p>定义一个数组，用来存储 3 个 Person 类的对象<br>break &amp; continue </p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>{</span><br><span class="line"></span><br><span class="line">    <span class="comment">//属性 == 实例变量</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//构造方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Person</span><span class="params">()</span> </span>{</span><br><span class="line"></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Person</span><span class="params">(String name, <span class="keyword">int</span> age)</span> </span>{</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//setter getter</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>{</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span>  <span class="keyword">int</span> <span class="title">getAge</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(<span class="keyword">int</span> age)</span> </span>{</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PersonTe</span> </span>{</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line">        <span class="comment">//首先创建一个长度为3的数组，用来存放Person类型的对象</span></span><br><span class="line">        Person[] array = <span class="keyword">new</span> Person[<span class="number">3</span>];</span><br><span class="line"></span><br><span class="line">        System.out.println(array[<span class="number">0</span>]);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//创建3个对象</span></span><br><span class="line">        Person p1 = <span class="keyword">new</span> Person(<span class="string">"ZhangSan"</span>, <span class="number">18</span>);</span><br><span class="line">        Person p2 = <span class="keyword">new</span> Person(<span class="string">"ZhangSa"</span>, <span class="number">19</span>);</span><br><span class="line">        Person p3 = <span class="keyword">new</span> Person(<span class="string">"Zhang"</span>, <span class="number">20</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//赋值</span></span><br><span class="line">        array[<span class="number">0</span>] = p1;</span><br><span class="line">        array[<span class="number">1</span>] = p2;</span><br><span class="line">        array[<span class="number">2</span>] = p3;</span><br><span class="line"></span><br><span class="line">        System.out.println(array[<span class="number">1</span>].getName());</span><br><span class="line"></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PersonTest</span> </span>{</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line">        Person01 p1 = <span class="keyword">new</span> Person01();</span><br><span class="line">        p1.name = <span class="string">"ZhangSan"</span>;</span><br><span class="line"></span><br><span class="line">        p1.sayHello(<span class="string">"Lisi"</span>);</span><br><span class="line">        System.out.println(p1);</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person01</span></span>{</span><br><span class="line"></span><br><span class="line">    <span class="comment">//实例变量</span></span><br><span class="line">    String name;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//实例方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sayHello</span><span class="params">(String name)</span> </span>{</span><br><span class="line">        System.out.println(name + <span class="string">" , hello, I am "</span> + <span class="keyword">this</span>.name);</span><br><span class="line">        System.out.println(<span class="keyword">this</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="实现一个-student-类"><a href="#实现一个-student-类" class="headerlink" title="实现一个 student 类"></a>实现一个 student 类</h2><p>包含属性：name age address zipCode<br>要求：全部属性都私有化，并提供相应的 get/set 方法以及无参构造方法和有参构造方法。<br>并为该类添加一个方法，返回 student 对象的地址和邮编。<br>最后编写测试类，返回自己的地址邮编。</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>{</span><br><span class="line"></span><br><span class="line">    <span class="comment">//实例变量</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line">    <span class="keyword">private</span> String address;</span><br><span class="line">    <span class="keyword">private</span> String zipcode;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//静态变量：类级别</span></span><br><span class="line">    <span class="keyword">static</span> String job = <span class="string">"study"</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//无参构造</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Student</span><span class="params">()</span></span>{</span><br><span class="line"></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">//有参构造</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Student</span><span class="params">(String name, <span class="keyword">int</span> age, String address, String zipcode)</span> </span>{</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.address = address;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">        <span class="keyword">this</span>.zipcode = zipcode;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">//返回地址和邮编</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getPostAddress</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"地址："</span> + <span class="keyword">this</span>.address + <span class="string">" , 邮编："</span> + <span class="keyword">this</span>.zipcode;</span><br><span class="line">        <span class="comment">//return "地址：" + this.g + " , 邮编：" + this.zipcode;</span></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">study</span><span class="params">()</span> </span>{</span><br><span class="line">        System.out.println(<span class="keyword">this</span>.getName() + <span class="string">"is studying."</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">//静态方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">testStatic</span><span class="params">()</span> </span>{</span><br><span class="line">        System.out.println(<span class="string">"static"</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">//getter and setter</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>{</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span>  <span class="keyword">int</span> <span class="title">getAge</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(<span class="keyword">int</span> age)</span> </span>{</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StudentTest</span> </span>{</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line"></span><br><span class="line">        Student s1 = <span class="keyword">new</span> Student();</span><br><span class="line">        s1.setName(<span class="string">"XiaoMei"</span>);</span><br><span class="line">        s1.setAge(<span class="number">20</span>);</span><br><span class="line">        System.out.println(s1.getName() + <span class="string">","</span> + s1.getAge());</span><br><span class="line"></span><br><span class="line">        Student s2 = <span class="keyword">new</span> Student(<span class="string">"XiaoMing"</span>, <span class="number">18</span>, <span class="string">"佛山"</span>, <span class="string">"374893748"</span>);</span><br><span class="line">        System.out.println(s2.getPostAddress());</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="实现一个日期类，表示年月日信息。"><a href="#实现一个日期类，表示年月日信息。" class="headerlink" title="实现一个日期类，表示年月日信息。"></a>实现一个日期类，表示年月日信息。</h2><p>要求：全部属性都私有化，并提供相应的 get/set 方法以及无参构造方法和有参构造方法。<br>如果调用无参构造方法，默认创建的日期为 1970 年 1 月 1 号。并为该类添加一个可以打印<br>日期的方法。最后编写测试类输出 2022 年 1 月 1 日。 </p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Date</span> </span>{</span><br><span class="line"></span><br><span class="line">    <span class="comment">//实例变量</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> year;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> month;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> day;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//无参构造</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Date</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="keyword">this</span>.year = <span class="number">1999</span>;</span><br><span class="line">        <span class="keyword">this</span>.month = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">this</span>.day = <span class="number">1</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">//有参构造</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Date</span><span class="params">(<span class="keyword">int</span> year, <span class="keyword">int</span> month, <span class="keyword">int</span> day)</span></span>{</span><br><span class="line">        <span class="keyword">this</span>.year = year;</span><br><span class="line">        <span class="keyword">this</span>.month = month;</span><br><span class="line">        <span class="keyword">this</span>.day = day;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">//setter and getter</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setYear</span><span class="params">(<span class="keyword">int</span> year)</span> </span>{</span><br><span class="line">        <span class="comment">//设立关卡</span></span><br><span class="line">        <span class="keyword">this</span>.year = year;</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getYear</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> year;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">//打印的日期方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">printDate</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="comment">//System.out.println(this.year + "年" + this.month + "月" + this.day + "日");</span></span><br><span class="line">        <span class="comment">//System.out.println(year + "年" + month + "月" + day + "日");</span></span><br><span class="line">        System.out.println(<span class="keyword">this</span>.getYear() + <span class="string">"年"</span> + <span class="keyword">this</span>.month + <span class="string">"月"</span> + <span class="keyword">this</span>.day + <span class="string">"日"</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DateTest</span> </span>{</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line">        Date d1 = <span class="keyword">new</span> Date();</span><br><span class="line">        d1.printDate();</span><br><span class="line"></span><br><span class="line">        Date d2 = <span class="keyword">new</span> Date(<span class="number">2021</span>, <span class="number">11</span>, <span class="number">16</span>);</span><br><span class="line">        <span class="comment">//System.out.println(d2.printDate());</span></span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>继承和方法覆盖： </p><h2 id="实现说话"><a href="#实现说话" class="headerlink" title="实现说话"></a>实现说话</h2><p>中国人说中文，输出 小美说中文<br>美国人说英文， 输出 jack 说英文<br>（要求用多态实现）</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PersonTest</span> </span>{</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line">        Chinese chinese = <span class="keyword">new</span> Chinese();</span><br><span class="line">        chinese.setName(<span class="string">"XiaoMei"</span>);</span><br><span class="line">        chinese.speak();</span><br><span class="line"></span><br><span class="line">        American american = <span class="keyword">new</span> American();</span><br><span class="line">        american.setName(<span class="string">"Jack"</span>);</span><br><span class="line">        american.speak();</span><br><span class="line"></span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">//父类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span>{</span><br><span class="line">    <span class="comment">//属性</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="comment">//构造方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Person</span><span class="params">()</span></span>{}</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Person</span><span class="params">(String name)</span></span>{</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">//setter and getter</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>{</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">//speak</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">speak</span><span class="params">()</span></span>{</span><br><span class="line">        System.out.println(name + <span class="string">" is speaking..."</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">//子类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Chinese</span> <span class="keyword">extends</span> <span class="title">Person</span></span>{</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">speak</span><span class="params">()</span></span>{</span><br><span class="line">        System.out.println(<span class="keyword">this</span>.getName() + <span class="string">" is speaking Chinese."</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">American</span> <span class="keyword">extends</span> <span class="title">Person</span></span>{</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">speak</span><span class="params">()</span></span>{</span><br><span class="line">        System.out.println(<span class="keyword">this</span>.getName() + <span class="string">" is speaking English."</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line">## <span class="number">1</span>、编写程序模拟 主人 喂养 宠物 的场景。 </span><br><span class="line">主人养了一只狗作为宠物， </span><br><span class="line">主人会喂狗，只要主人喂狗，狗就吃 </span><br><span class="line">最后输出：主人喂了食物，狗吃的很香 </span><br><span class="line">过了一段时间，主人又养了一个新的宠物：猫咪 </span><br><span class="line">最后输出：主人喂了食物，猫吃的很香 </span><br><span class="line">```java</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Testfeed</span></span>{</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="comment">//创建一个宠物对象</span></span><br><span class="line">        Pet pet = <span class="keyword">new</span> Pet();</span><br><span class="line">        <span class="comment">//创建一个狗对象</span></span><br><span class="line">        Dog dog = <span class="keyword">new</span> Dog();</span><br><span class="line">        <span class="comment">//创建一个主人对象</span></span><br><span class="line">        Master master = <span class="keyword">new</span> Master();</span><br><span class="line">        <span class="comment">//调用主人投喂方法</span></span><br><span class="line">        master.feed(dog);</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Pet</span></span>{<span class="comment">//创建宠物类让其它类都继承他</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span></span>{<span class="comment">//创建宠物吃方法</span></span><br><span class="line">        System.out.println(<span class="string">"动物在吃"</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Dog</span> <span class="keyword">extends</span> <span class="title">Pet</span>//创建狗类</span></span><br><span class="line"><span class="class"></span>{</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span></span>{<span class="comment">//覆盖父类吃方法对吃方法重写</span></span><br><span class="line">        System.out.println(<span class="string">"狗在吃"</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Cat</span> <span class="keyword">extends</span> <span class="title">Pet</span></span></span><br><span class="line"><span class="class"></span>{</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span></span>{</span><br><span class="line">        System.out.println(<span class="string">"猫在吃"</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">YingWu</span> <span class="keyword">extends</span> <span class="title">Pet</span></span></span><br><span class="line"><span class="class"></span>{</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span></span>{</span><br><span class="line">        System.out.println(<span class="string">"鹦鹉在吃"</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Master</span></span></span><br><span class="line"><span class="class"></span>{</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">feed</span><span class="params">(Pet p)</span></span>{<span class="comment">//此处实际上是 Pet p = new Dog();此处涉及到父类引用指向子类对象，即多态</span></span><br><span class="line">        p.eat();<span class="comment">//调用父类吃方法，此处为编译器识别通过，具体调用哪个子类的吃方法还要看动态绑定的那个子类是啥</span></span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li></ol><h2 id="2、编写程序实现乐手弹奏乐器，可以弹奏不同的乐器从而发出不同的声音。"><a href="#2、编写程序实现乐手弹奏乐器，可以弹奏不同的乐器从而发出不同的声音。" class="headerlink" title="2、编写程序实现乐手弹奏乐器，可以弹奏不同的乐器从而发出不同的声音。"></a>2、编写程序实现乐手弹奏乐器，可以弹奏不同的乐器从而发出不同的声音。</h2><p>乐器包括：二胡、钢琴和琵琶<br>实现乐器类 Instrument, 包括方法 makeSound()<br>通过测试类，让乐手弹奏不同的乐器<br>参考代码： </p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">play</span><span class="params">(Instrument instrument)</span></span>{ </span><br><span class="line">instrument.makeSound() </span><br><span class="line">}</span><br><span class="line"><span class="comment">//测试类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestMusic</span> </span></span><br><span class="line"><span class="class"></span>{</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        Musician m = <span class="keyword">new</span> Musician();</span><br><span class="line">        Violin v = <span class="keyword">new</span> Violin();</span><br><span class="line">        m.play(v);</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"><span class="comment">//乐器类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Instrument</span></span></span><br><span class="line"><span class="class"></span>{</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">makeSound</span><span class="params">()</span></span>{</span><br><span class="line">        System.out.println(<span class="string">"乐器发声"</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"><span class="comment">//二胡</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Erhu</span> <span class="keyword">extends</span> <span class="title">Instrument</span></span></span><br><span class="line"><span class="class"></span>{</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">makeSound</span><span class="params">()</span></span>{</span><br><span class="line">        System.out.println(<span class="string">"二胡在拉"</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"><span class="comment">//钢琴</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Piano</span> <span class="keyword">extends</span> <span class="title">Instrument</span></span></span><br><span class="line"><span class="class"></span>{</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">makeSound</span><span class="params">()</span></span>{</span><br><span class="line">        System.out.println(<span class="string">"弹钢琴"</span>);</span><br><span class="line">    }    </span><br><span class="line">}</span><br><span class="line"><span class="comment">//小提琴</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Violin</span> <span class="keyword">extends</span> <span class="title">Instrument</span></span></span><br><span class="line"><span class="class"></span>{</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">makeSound</span><span class="params">()</span></span>{</span><br><span class="line">        System.out.println(<span class="string">"拉小题琴"</span>);</span><br><span class="line">    }    </span><br><span class="line">}</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Musician</span></span></span><br><span class="line"><span class="class"></span>{</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">play</span><span class="params">(Instrument i)</span></span>{</span><br><span class="line">        i.makeSound();</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p> 接口：（要求用多态实现） </p><h2 id="1、创建一个用于描述汽车的接口"><a href="#1、创建一个用于描述汽车的接口" class="headerlink" title="1、创建一个用于描述汽车的接口"></a>1、创建一个用于描述汽车的接口</h2><p>行驶、刹车、鸣笛都继承该接口并且实现具体功能，<br>测试类进行测试。<br>汽车行驶中<br>汽车鸣笛嘀嘀嘀<br>汽车刹车声！ </p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test02</span> </span>{</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line">        Car car = <span class="keyword">new</span> MingDi();</span><br><span class="line">        car.action();</span><br><span class="line"></span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Car</span></span>{</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">action</span><span class="params">()</span></span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MingDi</span> <span class="keyword">implements</span> <span class="title">Car</span></span>{</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">action</span><span class="params">()</span></span>{</span><br><span class="line">        System.out.println(<span class="string">"汽车鸣笛嘀嘀嘀！"</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="2、实现：中午去饭馆吃饭顾客-点菜"><a href="#2、实现：中午去饭馆吃饭顾客-点菜" class="headerlink" title="2、实现：中午去饭馆吃饭顾客 点菜"></a>2、实现：中午去饭馆吃饭顾客 点菜</h2><p>菜（菜单）是接口<br>厨师 做菜<br>厨师负责实现这个接口<br>顾客负责调用这个接口</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Menu</span></span>{</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">yuXiang</span><span class="params">()</span></span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Cook</span> <span class="keyword">implements</span> <span class="title">Menu</span></span>{</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">yuXiang</span><span class="params">()</span></span>{</span><br><span class="line">        System.out.println(<span class="string">"yuXiang"</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Customer</span></span>{</span><br><span class="line"></span><br><span class="line">    Menu menu;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">order</span><span class="params">()</span></span>{</span><br><span class="line">        menu.yuXiang();</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>什么是RSS订阅</title>
      <link href="/2021/121949063.html"/>
      <url>/2021/121949063.html</url>
      
        <content type="html"><![CDATA[<p><a href="https://sspai.com/post/56391">原文</a></p><h2 id="为什么选择-RSS"><a href="#为什么选择-RSS" class="headerlink" title="为什么选择 RSS"></a>为什么选择 RSS</h2><p>RSS&nbsp;的全称是&nbsp;Really&nbsp;Simple&nbsp;Syndication（简易信息聚合），用户可以通过订阅不同网站 RSS 链接的方式将不同的信息源进行聚合，在一个工具里阅读这些内容。简单来说，RSS&nbsp;就是一种订阅某个网站内容更新的协议。<br>社交媒体混乱的时间线、聚合阅读工具烦人的算法推荐，都让我们无法高效地获取需要的信息。RSS 只抓取订阅信息源、按照时间顺序展示内容</p><h2 id="什么是RSS服务"><a href="#什么是RSS服务" class="headerlink" title="什么是RSS服务"></a>什么是RSS服务</h2><p>虽然&nbsp;RSS&nbsp;能做到只呈现你订阅的内容，但并非所有网站都像少数派这样，每天只推送几篇文章。以科技媒体&nbsp;Engadget&nbsp;为例，它每周推送的新闻就有上百条。相信你不想、也没时间去逐条阅读这些内容。这时候，如何通过 RSS 只看想看的内容、防止信息过载就成了我们需要解决的问题。<br>RSS&nbsp;服务是基于&nbsp;RSS&nbsp;协议开发的聚合服务，目前比较知名的&nbsp;RSS&nbsp;服务有&nbsp;Feedly、NewsBlur、Inoreader 等，这些服务大多提供了过滤筛选文章的功能。它们在能够自动抓取 RSS 订阅源中的更新内容的同时，还能按照你设置好的过滤条件，将符合条件的文章以文件夹或者标签的形式进行聚合并呈现给你，让你只看想看的内容，告别信息过载。<br>除此之外，各家&nbsp;RSS&nbsp;服务也有自己的特色功能：比如，Feedly 支持对文章内容进行高亮和记笔记，Inoreader 支持丰富的过滤规则、能和自动化服务联动等。你可以根据自己的需求选择适合的 RSS 服务，让通过 RSS 获取信息这件事变得更加简单和轻松。<br>2018 年主流 RSS 服务选哪家？Feedly、Inoreader 和 NewsBlur 全面横评  <a href="https://sspai.com/post/44420">https://sspai.com/post/44420</a></p><h2 id="如何寻找-RSS-订阅源"><a href="#如何寻找-RSS-订阅源" class="headerlink" title="如何寻找 RSS 订阅源"></a>如何寻找 RSS 订阅源</h2><p>要知道一个网站是否支持&nbsp;RSS&nbsp;订阅，最直接的方法就是看网站的底部或侧边栏是否有&nbsp;RSS&nbsp;图标。一般来说，图标所指向的地址就是该网站的订阅链接。你可以直接点击 RSS 订阅链接跳转到 RSS 客户端内进行订阅，也可以复制粘贴按钮中的地址到自己在用的 RSS 服务中订阅这些网站中的内容。<br>大多数情况下，支持&nbsp;RSS&nbsp;订阅的网站都会将&nbsp;RSS&nbsp;图标展示出来。不过总有例外，这时候你也可以尝试在网站域名后面加上&nbsp;/feed&nbsp;或&nbsp;/rss&nbsp;或许可以碰巧猜中，比如少数派的&nbsp;RSS&nbsp;订阅链接就是&nbsp;<a href="https://sspai.com/feed%E3%80%82%E5%BD%93%E7%84%B6%EF%BC%8C%E4%BD%A0%E4%B9%9F%E5%8F%AF%E4%BB%A5%E7%9B%B4%E6%8E%A5%E9%80%9A%E8%BF%87%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E9%80%9A%E8%BF%87">https://sspai.com/feed。当然，你也可以直接通过搜索引擎通过</a>&nbsp;网站名&nbsp;+&nbsp;RSS&nbsp;的关键字进行搜索，往往都能找到支持网站的 RSS 链接。<br>除了手动搜索订阅链接，RSSHub Radar 是一个可以帮你一键发现并订阅当前网站 RSS 链接的 Chrome 浏览器扩展。如果你当前浏览的网页支持 RSS，你可以通过这一插件直接复制 RSS 订阅链接、或者一键订阅 RSS 链接到 Feedly、Inoreader 等 RSS 服务中。</p><h2 id="如何自己制作-RSS-订阅源"><a href="#如何自己制作-RSS-订阅源" class="headerlink" title="如何自己制作 RSS 订阅源"></a>如何自己制作 RSS 订阅源</h2><p>当你想给一个没有号码的朋友打电话时，最便捷办法就是给他办一个号码。RSS&nbsp;也一样，我们常用的公众号、B&nbsp;站等网站都不支持&nbsp;RSS，又或许你想精确订阅某个具体的页面，这些情况下，学会制作订阅源就显得尤为重要。<br>借助&nbsp;RSSHub&nbsp;等工具，你可以轻松地制作一个订阅源。举个例子，我在&nbsp;Bilibili&nbsp;发现了一个名为「少数派&nbsp;sspai」的高产&nbsp;UP&nbsp;主，想要订阅他的视频更新。我们可以在他的个人空间找到这位&nbsp;UP&nbsp;主的&nbsp;UID：176321970。随后根据&nbsp;官方文档&nbsp;的介绍，在&nbsp;<a href="https://rsshub.app/bilibili/user/video/">https://rsshub.app/bilibili/user/video/</a>&nbsp;后填入&nbsp;UID&nbsp;即可完成制作。</p>]]></content>
      
      
      <categories>
          
          <category> 知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>浏览器插件分享</title>
      <link href="/2021/121924995.html"/>
      <url>/2021/121924995.html</url>
      
        <content type="html"><![CDATA[<h1 id="谷歌插件"><a href="#谷歌插件" class="headerlink" title="谷歌插件"></a>谷歌插件</h1><h2 id="国内可下载安装Chrome扩展的方法"><a href="#国内可下载安装Chrome扩展的方法" class="headerlink" title="国内可下载安装Chrome扩展的方法"></a>国内可下载安装Chrome扩展的方法</h2><p><a href="https://www.gugeapps.net/">https://www.gugeapps.net/</a><br><a href="https://www.extfans.com/">https://www.extfans.com/</a><br><a href="https://huajiakeji.com/">https://huajiakeji.com/</a><br><a href="https://www.cnplugins.com/">https://www.cnplugins.com/</a><br><a href="https://www.crx4chrome.com/">https://www.crx4chrome.com/</a><br><a href="https://fnd.io/#/">https://fnd.io/#/</a><br><a href="https://chrome.zzzmh.cn/#/index">https://chrome.zzzmh.cn/#/index</a><br><a href="https://www.chromefk.com/">https://www.chromefk.com/</a><br><a href="https://www.yuque.com/eureka007">https://www.yuque.com/eureka007</a><br><a href="https://crxdl.com/">https://crxdl.com/</a><br><a href="http://blandlifedev.blogspot.com/">http://blandlifedev.blogspot.com/</a><br><a href="https://marketplace.visualstudio.com/">https://marketplace.visualstudio.com/</a><br><a href="https://www.chajian5.com/">https://www.chajian5.com/</a><br><a href="https://173app.com/chrome-ext">https://173app.com/chrome-ext</a><br><a href="https://crxdl.com/">https://crxdl.com/</a><br><a href="https://chrome.zzzmh.cn/#/index">https://chrome.zzzmh.cn/#/index</a><br><a href="https://www.extfans.com/">https://www.extfans.com/</a><br><a href="https://www.chromefor.com/">https://www.chromefor.com/</a><br><a href="http://yurl.sinaapp.com/crx2.php">http://yurl.sinaapp.com/crx2.php</a></p><h2 id="Chrome扩展安装方法"><a href="#Chrome扩展安装方法" class="headerlink" title="Chrome扩展安装方法"></a>Chrome扩展安装方法</h2><p>1.直接把crx文件拖进扩展管理中心<br>如果顺利，你直接把这个直接拖进 Chrome 扩展程序页面就能安装了<br>2.不过有些时候，你可能会遇到安装 crx 文件报错<br> 这样的话，就用另外一个办法：</p><ul><li>在你的文件夹找到这个 crx 文件，确保你打开了文件管理器中的查看「文件扩展名」功能是勾上的</li><li>然后对你刚刚下载到的 crx 文件进行重命名，把扩展名改为 zip</li><li>然后把这个压缩包解压到一个你不会删除的位置！</li><li>打开 Chrome 扩展程序页面的「开发者模式」</li><li>然后「加载已解压的扩展程序」</li></ul><h2 id="二管家"><a href="#二管家" class="headerlink" title="二管家"></a>二管家</h2><p>Chrome 扩展管理工具<br>功能<br>1.根据规则自动开关扩展<br>2.管理扩展<br>3.根据网站推荐扩展<br>4.快速提取CRX</p><h2 id="BookmarkHub"><a href="#BookmarkHub" class="headerlink" title="BookmarkHub"></a>BookmarkHub</h2><p>跨浏览器同步书签<br>它使用 GitHub 的 Gist 记录来存储浏览器的书签，可以放心安全的使用。</p><h2 id="获取Github-Token"><a href="#获取Github-Token" class="headerlink" title="获取Github Token"></a>获取Github Token</h2><p>登录Github<br>选择“设置-开发者设置-生成新token”，这里记得勾选Gist，然后点击“生成token”即可。</p><h2 id="获取Gist-ID"><a href="#获取Gist-ID" class="headerlink" title="获取Gist ID"></a>获取Gist ID</h2><p>这里new gist</p><p><img src="https://gitee.com/wenkex/blogimage/raw/master/1.png"></p><p>进入对应的网页之后，输入描述、文件名、内容，这里可以随便输入即可，然后点击创建私有Gist。<br>这时，在地址栏可以看到，URL的尾部就是Gist ID。从4a开始<br><img src="https://gitee.com/wenkex/blogimage/raw/master/2.png"></p><h2 id="配置插件"><a href="#配置插件" class="headerlink" title="配置插件"></a>配置插件</h2><p>点击插件的设置添加信息<br><img src="https://gitee.com/wenkex/blogimage/raw/master/Quicker_20220108_140446.png"></p><h2 id="Unpaywal"><a href="#Unpaywal" class="headerlink" title="Unpaywal"></a>Unpaywal</h2><p>当你浏览一篇学术文章时，Unpaywall会从2000万个免费合法的文献库里索引一个PDF副本，如果找到对应的文章，会在侧边出现一个绿色按钮，点击按钮就可以阅读或者下载全文。</p><h2 id="WeChatSync（微信公众号同步助手）"><a href="#WeChatSync（微信公众号同步助手）" class="headerlink" title="WeChatSync（微信公众号同步助手）"></a>WeChatSync（微信公众号同步助手）</h2><p>原文：<a href="https://mp.weixin.qq.com/s/oTMc_t_f65ITyTgy4Wdg9g">https://mp.weixin.qq.com/s/oTMc_t_f65ITyTgy4Wdg9g</a><br>是一款将微信文章同步到知乎， B站，微博，豆瓣，百家号， 简书， 头条号，搜狐号， 大鱼号， 一点资讯， Cnblog， CSDN， 51CTO， 掘金， 慕课网-手记， 开源中国，Typecho，WordPress等许多平台。</p><h2 id="automa-自动化处理重复工作"><a href="#automa-自动化处理重复工作" class="headerlink" title="automa 自动化处理重复工作"></a>automa 自动化处理重复工作</h2><p>原文：<a href="https://mp.weixin.qq.com/s/ARID9OYRGcLLWGKT4BSd8Q">https://mp.weixin.qq.com/s/ARID9OYRGcLLWGKT4BSd8Q</a><br>Automa v0.5.1<br><a href="https://www.123pan.com/s/HQeA-EN1Sh">https://www.123pan.com/s/HQeA-EN1Sh</a></p><h2 id="Global-Speed-视频速度控制"><a href="#Global-Speed-视频速度控制" class="headerlink" title="Global Speed: 视频速度控制"></a>Global Speed: 视频速度控制</h2><p> 支持0.25~16倍速的视频加速播放。<br>而且它能用到的场景很多，比如某奇艺等平台的开头广告，直接点击16倍数，几秒就跳过去了。</p><h2 id="ViolentMonkey"><a href="#ViolentMonkey" class="headerlink" title="ViolentMonkey"></a>ViolentMonkey</h2><p>  让你的Chrome可以使用油猴脚本（相比 Tampermonkey、GreaseMonkey 更为简洁方便）</p><h2 id="Nimbus"><a href="#Nimbus" class="headerlink" title="Nimbus"></a>Nimbus</h2><p>一个网页版的多功能截图工具，提供了类似区域截屏、可滚动截屏、延迟截屏等等，花式截屏的小功能，甚至还可以帮你录制视频。</p><h1 id="油猴脚本"><a href="#油猴脚本" class="headerlink" title="油猴脚本"></a>油猴脚本</h1><p>网页文章转PDF<br>脚本名称：网页限制解除(改)<br>作用：解除网页复制的限制</p><p>脚本名称：知乎增强<br>作用：让电脑浏览知乎的时候界面更实用</p><p>1、Userscript+<br>一款脚本推荐利器，能够自动帮我们寻找适用于当前网站的所有脚本。<br>AC-baidu-重定向优化<br>去广告、绕过搜索引擎的重定向、自定义网址拦截、添加站点图标、优化搜索结果排版、自动翻页……<br>searchEngineJump 搜索引擎快捷跳转<br>在搜索引擎的输入框下面添加一行快捷菜单。<br>能够快捷地在多个搜索引擎和网站之间进行跳转。<br>支持自定义编辑跳转网站。<br>5、Search By Image<br>以图搜图脚本，内置了 12 个图片搜索引擎，</p><h1 id="kiwi浏览器"><a href="#kiwi浏览器" class="headerlink" title="kiwi浏览器"></a>kiwi浏览器</h1><p>一款基于Chromium核心的手机浏览器，强大的可扩展性让你轻松安装chrome应用商店里的扩展，真正支持Chrome电脑版插件</p><h1 id="Via浏览器：https-viayoo-com-zh-cn"><a href="#Via浏览器：https-viayoo-com-zh-cn" class="headerlink" title="Via浏览器：https://viayoo.com/zh-cn/"></a>Via浏览器：<a href="https://viayoo.com/zh-cn/">https://viayoo.com/zh-cn/</a></h1><p>参考：<a href="https://mp.weixin.qq.com/s/aUBBfdWrzXReW8DRmQ24sA">https://mp.weixin.qq.com/s/aUBBfdWrzXReW8DRmQ24sA</a><br>启动秒开，没有杂七杂八的附加功能<br>会自主学习的搜索引擎：Magi：<a href="https://magi.com/search?q=">https://magi.com/search?q=</a><br>via相关插件：<a href="http://via-app.cn/">http://via-app.cn</a><br>广告过滤1：<br><a href="https://cats-team.coding.net/p/adguard/d/AdRules/git/raw/main/adguard.txt">https://cats-team.coding.net/p/adguard/d/AdRules/git/raw/main/adguard.txt</a><br>广告过滤2：<br><a href="https://cats-team.coding.net/p/adguard/d/AdRules/git/raw/main/AdKillRules.txt">https://cats-team.coding.net/p/adguard/d/AdRules/git/raw/main/AdKillRules.txt</a>&nbsp;<br>广告过滤3：<br><a href="https://cdn.jsdelivr.net/gh/DoingDog/xXKiller@main/w.txt">https://cdn.jsdelivr.net/gh/DoingDog/xXKiller@main/w.txt</a>&nbsp;</p><h1 id="ios"><a href="#ios" class="headerlink" title="ios"></a>ios</h1><h2 id="Userscripts-for-Safari"><a href="#Userscripts-for-Safari" class="headerlink" title="Userscripts for Safari"></a>Userscripts for Safari</h2><p><a href="https://www.appinn.com/userscripts-for-safari/">https://www.appinn.com/userscripts-for-safari/</a><br>Userscripts 就是可以让海量的油猴脚本在 Safari 上运行的脚本管理器，和 Tampermonkey 是一个功能，只不过，它可以在 iPhone 上使用，就很香了。</p><p>由于 Userscripts 属于标准的 Safari 扩展，所以在 App Store 安装（Mac/iPhone/iPad）之后，需要前往 Safari 设置中开启扩展，具体路径是：</p><p>iPhone 系统设置 &gt; Safari 浏览器 &gt; 扩展 &gt; Userscripts：</p><p>注意除了打开 Userscripts 之外，在里面的设置中，还需要允许所有网站。注意这里青小蛙尝试过“询问”，但并不成功，所以设置为了允许，如果你有安全顾虑，请谨慎操作。</p><h1 id="持续更新中"><a href="#持续更新中" class="headerlink" title="持续更新中"></a>持续更新中</h1>]]></content>
      
      
      <categories>
          
          <category> 资源分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 插件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网站分享</title>
      <link href="/2021/121924397.html"/>
      <url>/2021/121924397.html</url>
      
        <content type="html"><![CDATA[<h1 id="图片相关"><a href="#图片相关" class="headerlink" title="图片相关"></a>图片相关</h1><h2 id="在线图片高清化"><a href="#在线图片高清化" class="headerlink" title="在线图片高清化"></a>在线图片高清化</h2><p><a href="https://bigjpg.com/">https://bigjpg.com/</a></p><h2 id="壁纸"><a href="#壁纸" class="headerlink" title="壁纸"></a>壁纸</h2><p>wallhaven<br><a href="https://wallhaven.cc/">https://wallhaven.cc/</a><br>极简壁纸<br><a href="https://bz.zzzmh.cn/index">https://bz.zzzmh.cn/index</a></p><h1 id="网站工具箱"><a href="#网站工具箱" class="headerlink" title="网站工具箱"></a>网站工具箱</h1><p><a href="https://www.67tool.com/">https://www.67tool.com/</a></p><p><a href="https://tools.miku.ac/">https://tools.miku.ac/</a><br>功能：收款码合并</p><h1 id="好用的网站"><a href="#好用的网站" class="headerlink" title="好用的网站"></a>好用的网站</h1><p><a href="https://hyperbeam.com/">https://hyperbeam.com/</a><br>注册好账号登录后，需要你创建一个房间，然后把房间链接分享出去就能和远在异地的女朋友交流了，支持文字、GIF、视频、语音通话。</p><h1 id="搜索引擎"><a href="#搜索引擎" class="headerlink" title="搜索引擎"></a>搜索引擎</h1><p>fsou.cc<br>搜索结果排除了百度和搜狗的结果，30%来自Google，30%来自必应，其余的40%来自其他的搜索渠道。</p><h1 id="影视"><a href="#影视" class="headerlink" title="影视"></a>影视</h1><p><a href="https://qzy998-1.ysgq.xyz/">https://qzy998-1.ysgq.xyz/</a></p><p>片库：<a href="https://www.mypianku.net/">https://www.mypianku.net</a></p><p>奈飞中文电影站：<a href="https://yanetflix.com/">https://yanetflix.com</a></p><p>剧嗨：<a href="https://www.juhi.cc/">https://www.juhi.cc</a></p><p>555电影网：<a href="https://www.o8tv.com/">https://www.o8tv.com</a></p><p>Tubitv：<a href="https://tubitv.com/">https://tubitv.com</a></p><p>片源：<a href="http://pianyuan.org/">http://pianyuan.org/</a><br>影视导航网站：<a href="http://www.549.tv/">http://www.549.tv/</a><br>片吧  <a href="https://www.pianba.net/">https://www.pianba.net/</a><br>低端影视  <a href="https://ddrk.me/">https://ddrk.me/</a><br>片库  <a href="https://www.pianku.li/">https://www.pianku.li/</a><br>七七看片  <a href="https://www.77kpp.com/">https://www.77kpp.com/</a><br>旋风视频  <a href="https://miao101.com/">https://miao101.com/</a><br>体育直播：<a href="https://feisuzhibo.com/">https://feisuzhibo.com</a><br>BD影视分享 <a href="https://www.bd2020.com/">https://www.bd2020.com/</a><br>一刻电影 <a href="http://www.yikedy.co/">http://www.yikedy.co/</a><br>影视教程 <a href="https://www.yuque.com/eureka007/ziyuan/rnezaq">https://www.yuque.com/eureka007/ziyuan/rnezaq</a></p><h2 id="【VIP视频解析网站】"><a href="#【VIP视频解析网站】" class="headerlink" title="【VIP视频解析网站】"></a>【VIP视频解析网站】</h2><p>365t在線免費解析觀看系統<br><a href="http://vip.365tol.top/">http://vip.365tol.top/</a><br>BL智能解析<br><a href="https://vip.bljiex.com/">https://vip.bljiex.com/</a><br>BL解析-Vip视频在线解析<br><a href="https://vip.bljiex.cc/">https://vip.bljiex.cc/</a><br>TVB云播全网VIP视频解析：<br><a href="http://vip.tvyb10.com/">http://vip.tvyb10.com/</a><br>Playm3u8解析-PC和手机全无广告!<br><a href="https://www.playm3u8.cn/jiexi.php?url=">https://www.playm3u8.cn/jiexi.php?url=</a><br>诺讯全网视频在线解析无广告<br><a href="https://www.nxflv.com/?url=">https://www.nxflv.com/?url=</a><br>天翼解析<br><a href="https://jsap.attakids.com/?url=">https://jsap.attakids.com/?url=</a><br>kingtail智能解析<br> <a href="https://jx.kingtail.xyz/?url=">https://jx.kingtail.xyz/?url=</a></p><h2 id="【在线动漫网站汇总】"><a href="#【在线动漫网站汇总】" class="headerlink" title="【在线动漫网站汇总】"></a>【在线动漫网站汇总】</h2><p>ZzzFun动漫 <a href="http://www.zzzfun.com/">http://www.zzzfun.com/</a><br>樱花动漫  <a href="http://www.yinghuacd.com/">http://www.yinghuacd.com/</a><br>AGE动漫  <a href="https://www.agefans.vip/">https://www.agefans.vip/</a><br>動畫線上看  <a href="https://anime1.me/">https://anime1.me/</a><br>嘀哩嘀哩  <a href="https://www.dilidili55.com/">https://www.dilidili55.com/</a><br>哈哩哈哩  <a href="http://halihali4.com/">http://halihali4.com/</a></p><h2 id="系统"><a href="#系统" class="headerlink" title="系统"></a>系统</h2><p>密钥分享：<a href="https://pkeytools.azurewebsites.net/ShareKeys">https://pkeytools.azurewebsites.net/ShareKeys</a></p><h2 id="设计"><a href="#设计" class="headerlink" title="设计"></a>设计</h2><p>改图鸭网站提供图片压缩、图片编辑、图片转文字等功能<br><a href="https://www.gaituya.com/">https://www.gaituya.com/</a><br>用卷积神经网络把小而糊的图片进行放大，支持降噪处理，<br><a href="http://waifu2x.udp.jp/">http://waifu2x.udp.jp/</a><br>可快速将 JPG、PNG 等格式的图片快速转换为 SVG 矢量图<br><a href="https://www.visioncortex.org/vtracer/">https://www.visioncortex.org/vtracer/</a></p><p>世界各地的朋友在这里分享他们的桌面布置灵感<br><a href="https://www.makerstations.io/">https://www.makerstations.io/</a><br>为大家介绍创意相关工作者的工作桌面摆设情况<br><a href="https://www.workspaces.xyz/">https://www.workspaces.xyz/</a></p><p>东京大学发布的一款工具 ：paper-digest<br>可利用 AI 为每篇论文生成摘要，将阅读时间缩短为 3 分钟<br>目前该工具仍处于初级阶段，生成的论文摘要仅供参考，深入研究最好还是阅读论文原稿。<br><a href="https://www.paper-digest.com/">https://www.paper-digest.com/</a></p><p>清华大学计算机系课程攻略<br><a href="https://rekcarc-tsc-uht.readthedocs.io/en/latest/">https://rekcarc-tsc-uht.readthedocs.io/en/latest/</a><br><a href="https://github.com/PKUanonym/REKCARC-TSC-UHT">https://github.com/PKUanonym/REKCARC-TSC-UHT</a></p><p>spider-flow一个无需写代码的爬虫平台<br><a href="https://www.spiderflow.org/">https://www.spiderflow.org/</a><br><a href="https://github.com/ssssssss-team/spider-flow">https://github.com/ssssssss-team/spider-flow</a></p><p>Kmonad，一个自由改变键盘布局的软件<br>可以让你无限地定制和扩展几乎所有键盘功能，包括改建、配置组合键等功能<br><a href="https://www.appinn.com/kmonad/">https://www.appinn.com/kmonad/</a></p><p> 用 Fruition + Notion 搭建个人网站<br>DEMO: <a href="https://fruitionsite.com/">https://fruitionsite.com/</a><br>GitHub: <a href="https://github.com/stephenou/fruitionsite">https://github.com/stephenou/fruitionsite</a><br>作者主页： <a href="https://stephenou.com/">https://stephenou.com/</a><br>教程：<a href="https://the-block.club/Fruition-Notion-e05ddf4392744a8a819a30ac7952520b">https://the-block.club/Fruition-Notion-e05ddf4392744a8a819a30ac7952520b</a></p><p>2021年【思维导图】盒子，C/C++，Golang，Linux，云原生，数据库，DPDK，音视频开发，TCP/IP，数据结构，计算机原理等<br><a href="https://github.com/0voice/learning_mind_map">https://github.com/0voice/learning_mind_map</a></p><p>extract.pics？</p><p>Extract.pics 是一个易于使用的工具，允许您从任何公共网站提取、查看和下载图像。只需将网站的 URL 粘贴到输入字段中，然后单击“提取”即可开始该过程。</p><p>fffuel：设设设计用的小工具集合</p><p>官网 <a href="https://fffuel.co/">https://fffuel.co/</a>  </p><p>fffuel 是一个「即将推出」Html 模板的集合网站。除了网页模板，还提供了一些在网页设计中会使用到的工具</p><p> ssshape <a href="https://fffuel.co/ssshape/">https://fffuel.co/ssshape/</a> ：矢量形状生成器<br>在画布上添加几个点，点击 ssshape，会自动闭合所有点并对其形状进行平滑处理，最终得到一个边缘平滑的 SVG 形状</p><p> llline <a href="https://fffuel.co/llline/">https://fffuel.co/llline/</a> ：矢量线段生成器<br>在画布上添加几个点，点击生成后便能得到一条光滑的曲线，然后你可以旋转角度、改变它的颜色以及线段的形态</p><p> bbburst <a href="https://fffuel.co/bbburst/">https://fffuel.co/bbburst/</a> ：图形散落分布<br>以往想要制作一个「图形散落」风格的背景图，大多是通过喷枪或逐个逐个放置而成，过程比较繁琐。bbburst 可以帮你在预设的几个图形中，自动生成一张「图形散落」风格的图片</p><p> nnnoise <a href="https://fffuel.co/nnnoise/">https://fffuel.co/nnnoise/</a> ：「杂色」纹理生成器<br>利用 nnnoise，可以生成一些「杂色」纹理，搭配上你想要的风格，或许别有一番滋味</p><p> dddoodle <a href="https://fffuel.co/dddoodle/">https://fffuel.co/dddoodle/</a> ：「极其」手绘风格的插图<br>dddoodle 是一套手绘的 doodle 插图，其中有线段、箭头、圆形、星星以及一些有趣的形状，均为 CC 协议</p><p>✅ rrready <a href="https://fffuel.co/rrready/">https://fffuel.co/rrready/</a> ：CSS 特性兼容列表<br>不同浏览器支持不同 CSS 特性，这个问题长期困扰着开发者，利用 rrready 可以查看要使用到的 CSS 特性在不同浏览器中是否能够达成一致的效果</p><p> cccolor <a href="https://fffuel.co/cccolor">https://fffuel.co/cccolor</a> ：选色器<br>除了能够利用色盘、哈希值选取到想要的颜色，cccolor 还会为你生成匹配该颜色的相似色调、适合作为其阴影的颜色，及与其匹配的冷暖色调</p><p> ffflux <a href="https://fffuel.co/ffflux/">https://fffuel.co/ffflux/</a> ：流体渐变生成器<br>流体渐变带来的冲击力会比普通渐变色更强，色彩也更加丰富，或许能让你的设计更加活跃</p><p> lllook <a href="https://fffuel.co/lllook/">https://fffuel.co/lllook/</a> ：你想要什么表情<br>lllook 是一套面部的简笔画表情包，比 emoji 丰富得多，也更加有趣</p><p> 除了这些小工具，fffuel 的作者 Seb <a href="https://sebseb.co/">https://sebseb.co/</a>  还有其它有趣的项目，不妨去看看，其中我比较喜欢的是 muted <a href="https://muted.io/">https://muted.io/</a>  和 rrrelax <a href="https://rrrelax.app/">https://rrrelax.app/</a> ，这里还有他整理的一些 设计小工具 <a href="https://cccreate.co/">https://cccreate.co/</a>  </p><h1 id="程序员学习网站"><a href="#程序员学习网站" class="headerlink" title="程序员学习网站"></a>程序员学习网站</h1><p><a href="https://mp.weixin.qq.com/s/5TVmsaYP_M_y2zGZdCFuUg">原文</a></p><ol><li>中国大学MOOC<br>中国大学MOOC原名ICOURSE（爱课程），是教育R部和网易共同合作发布的一个互联网教育平台，旨在推动高等教学资源共享，让大家能免费享受许多985及TOP名校课程。绝大部分领域均有免费国家精品课程，资深教授授课！蹭网课必备！</li></ol><p>网址：<a href="https://www.icourse163.org/">https://www.icourse163.org/</a></p><ol start="2"><li>中国国家图书馆<br>中国国家图书馆，收录绝对够全！只有你想不到，没有你搜不到，想要的资料应有尽有，还可以在线阅读~ 无论专业书籍还是人文书籍，均可搜索得到，还配有其ISBN账号，配合某盘资源可以进行pdf搜索下载！</li></ol><p>网址：<a href="http://www.nlc.cn/">http://www.nlc.cn/</a></p><ol start="3"><li>B站<br>B站不再是一个看番刷鬼畜的地方，学习课程越来越多，你想学的东西基本都可以在这里找到~</li></ol><p>网址：<a href="https://www.bilibili.com/">https://www.bilibili.com/</a></p><ol start="4"><li>W3C<br>W3School，一个全球最大的中文 Web 技术教程。在 W3School，你可以找到你所需要的所有的网站建设教程。从基础的 HTML 到 CSS，乃至进阶的 XML、SQL、JS、PHP 和 ASP.NET。</li></ol><p>网址：<a href="https://www.w3school.com.cn/">https://www.w3school.com.cn/</a></p><ol start="5"><li>菜鸟教程<br>和W3C性质差不多，都是提供各种基础编程教程，可以让你在短时间内实现从0到1的质的飞跃！</li></ol><p>网址：<a href="https://www.runoob.com/">https://www.runoob.com/</a></p><ol start="6"><li>MDN<br>MDN Web Docs 站点提供有关开放 Web 技术的信息，包括用于 Web 站点和渐进式 Web 应用程序的 HTML、CSS 和 API。面向Web开发者的文档，权威教程。</li></ol><p>网址：<a href="https://developer.mozilla.org/zh-CN/docs/Web">https://developer.mozilla.org/zh-CN/docs/Web</a></p><ol start="7"><li>掘金<br>掘金是一个帮助开发者成长的社区,是给开发者用的 Hacker News,给设计师用的 Designer News,和给产品经理用的 Medium。有不少技术大牛和极客们在输出优质干货。</li></ol><p>网址：<a href="https://juejin.cn/">https://juejin.cn/</a></p><ol start="8"><li>Github<br>GitHub 是世界上最大的代码托管平台。如果说 P***Hub 对于宅男来说是神一般的存在，那么 GitHub 对于程序员来说是永远滴神！</li></ol><p>网址：<a href="https://github.com/">https://github.com/</a></p><ol start="9"><li>慕课网<br>慕课网（IMOOC）是IT技能学习平台。慕课网(IMOOC)课程涉及JAVA、前端、Python、大数据等60类主流技术语言，覆盖了面试就业、职业成长、自我提升等需求场景，帮助用户实现从技能提升到岗位提升的能力闭环。</li></ol><p>网址：<a href="https://www.imooc.com/">https://www.imooc.com/</a></p><ol start="10"><li>张鑫旭的博客<br>博客语言以简单明了著称，擅长深入挖掘css技巧及内部实现机制。</li></ol><p><a href="https://www.zhangxinxu.com/wordpress/">https://www.zhangxinxu.com/wordpress/</a></p><ol start="11"><li>The Odin Project<br>Odin 项目使有抱负的 Web 开发人员能够免费一起学习</li></ol><p>网址：<a href="https://www.theodinproject.com/paths/foundations/courses/foundations">https://www.theodinproject.com/paths/foundations/courses/foundations</a></p><ol start="12"><li> angularJS学习资源合集<br>一个 angularJS 资源大全</li></ol><p>网址：<a href="https://angularjs.zeef.com/gianluca.arbezzano">https://angularjs.zeef.com/gianluca.arbezzano</a></p><ol start="13"><li>30 seconds of code<br>当你打开这个网站时，你会发下自己捡到宝了，这个网站分享了1084个有用的简短代码片段,你可以在30秒或更少时间中理解,满足开发者绝大多数开发需求</li></ol><p>网址：<a href="https://www.30secondsofcode.org/">https://www.30secondsofcode.org/</a></p><ol start="14"><li>JS Tips<br>这是一个分享 JavaScript 小技巧的网站,让读者提升撰写代码的能力.每天花不到 2 分鐘，你可以阅读到关于效能、习惯、技术、面试问题以及所有 JavaScript 相关知识</li></ol><p>网址：<a href="https://www.jstips.co/zh_CN/javascript/">https://www.jstips.co/zh_CN/javascript/</a></p><ol start="15"><li>如何跟上前端开发的最新前沿<br>这是一个帮助前端学子们了解最新推出的工具, 最新的潮流以及开发流程的网站</li></ol><p>网址：<a href="https://uptodate.frontendrescue.org/zh/">https://uptodate.frontendrescue.org/zh/</a></p><ol start="16"><li>JS Run<br>JSRUN.NET 一个极具活力的代码在线运行平台。有专业的HTML/CSS/JS在线调试工具，适用前端工程师的开发和学习。同时还有C语言、Java、PHP、Python等代码在线编译运行工具</li></ol><p>网址：<a href="https://jsrun.net/">https://jsrun.net/</a></p><ol start="17"><li>Codepen<br>Codepen是一个完全免费的前端 Web 开发的在线代码编辑器、学习环境和社区，汇集了大量的优秀前端作品，很多大佬的作品都会上传到这里。</li></ol><p>网址：<a href="https://codepen.io/">https://codepen.io/</a></p><ol start="18"><li>ES6 入门教程<br>《ECMAScript 6 入门教程》一本由阮一峰老师撰写开源的 JavaScript 语言教程，全面介绍 ECMAScript 6 新引入的语法特性。这本书主要引导你进入 React 和 Webpack 世界。</li></ol><p>网址：<a href="https://es6.ruanyifeng.com/">https://es6.ruanyifeng.com/</a></p><ol start="19"><li>Stack Overflow<br>Stack Overflow 作为全球最大的技术问答网站，几乎没有你找不到的问题</li></ol><p>网址：<a href="https://stackoverflow.com/">https://stackoverflow.com/</a></p><ol start="20"><li>SegmentFault<br>SegmentFault 思否是中国领先的开发者技术社区。国内风靡的程序员社区，以技术问答、技术专栏、技术课程、技术资讯为核心的产品形态,为开发者提供纯粹、高质的技术交流平台。</li></ol><p>网址：<a href="https://segmentfault.com/">https://segmentfault.com/</a></p><ol start="21"><li>LeetCode<br>LeetCode 是一个非常棒的OJ（Online Judge）平台，收录了许多互联网公司的算法题目，被称为刷题神器</li></ol><p>网址：<a href="https://leetcode-cn.com/">https://leetcode-cn.com/</a></p><ol start="22"><li>LintCode<br>这个网站可算是个面试的“作弊神器”吧，因为上面有很多国内外大厂面试真题，里面大厂面试真题还挺多的，而且会定期更新，跳槽前可以看一看~</li></ol><p>网址：<a href="https://www.lintcode.com/">https://www.lintcode.com/</a></p><ol start="23"><li>程序员一站式导航<br>这个导航站提供了最精华有趣的内容，根据分类可以找到你所需要的站点、工具，能够节省不少时间~</li></ol><p>网址：<a href="https://cxy521.com/">https://cxy521.com/</a></p><h2 id="提高web前端开发效率的网站"><a href="#提高web前端开发效率的网站" class="headerlink" title="提高web前端开发效率的网站"></a>提高web前端开发效率的网站</h2><h3 id="Animista"><a href="#Animista" class="headerlink" title="Animista"></a>Animista</h3><p>地址：<a href="https://animista.net/">https://animista.net/</a><br>Animista 是一个简单的 CSS 动画库网站。您可以测试和使用现成的 CSS 动画，也可以下载它们的代码。Web 开发人员一定要上的网站，这个对您提升开发效率非常有帮助。</p><h3 id="Ray-so"><a href="#Ray-so" class="headerlink" title="Ray.so"></a>Ray.so</h3><p>地址：<a href="https://ray.so/">https://ray.so/</a><br>此网站可以将让您制作的精美图像进行源代码的分享。它支持几乎所有的编程语言格式。您可以设置背景、颜色、字体等。一定要试试这个网站。</p><h3 id="FontAwesome"><a href="#FontAwesome" class="headerlink" title="FontAwesome"></a>FontAwesome</h3><p>地址：<a href="https://fontawesome.com/">https://fontawesome.com/</a></p><p>如果您在为您的项目寻找一些很棒的图标，您可以访问 FontAwesome 下载任何项目的免费图标。</p><h3 id="Jsfiddle"><a href="#Jsfiddle" class="headerlink" title="Jsfiddle"></a>Jsfiddle</h3><p>地址：<a href="http://jsfiddle/">http://jsfiddle/</a></p><p>Jsfiddle 是代码编辑器，您可以在其中通过实时预览测试 JavaScript、CSS、Html 代码。该网站是 Web 开发人员的便捷工具。</p><h3 id="Unscreen"><a href="#Unscreen" class="headerlink" title="Unscreen"></a>Unscreen</h3><p>地址：<a href="https://www.unscreen.com/">https://www.unscreen.com/</a></p><p>Unscreen 是一个帮助您去除视频背景的网站。它用于制作无背景视频。必须尝试该网站。</p><h3 id="Dev-Samples"><a href="#Dev-Samples" class="headerlink" title="Dev Samples"></a>Dev Samples</h3><p>地址：<a href="https://www.devsamples.com/">https://www.devsamples.com/</a><br>此网站是您可以自由复制粘贴到项目中的代码集合网站。该网站的重点是 Web 开发人员的源代码。Dev Samples 对新手开发人员来说很方便。</p><p>Readme.so</p><p>地址：<a href="https://readme.so/">https://readme.so/</a></p><p>Readme.so 是一个在线自述文件制作，可帮助开发人员为其项目创建自述文件。大多数开发人员使用readme.so为其 Github 项目创建自述文件。</p><h3 id="ScreenShot-rock"><a href="#ScreenShot-rock" class="headerlink" title="ScreenShot.rock"></a>ScreenShot.rock</h3><p>地址：<a href="https://screenshot.rocks/">https://screenshot.rocks/</a></p><p>Screenshot Rock 是一个可以创建漂亮的移动和浏览器屏幕截图的地方。您只需要上传任何屏幕截图，它就会为浏览器提供移动框架触摸功能。</p><h3 id="Undesign"><a href="#Undesign" class="headerlink" title="Undesign"></a>Undesign</h3><p>地址：<a href="https://undesign.learn.uno/">https://undesign.learn.uno/</a></p><p>Undesign 是设计工具、插图、开发人员和设计师的源代码、制造商资源等的免费集合。一定要试试这个网站。</p><h3 id="Coolors"><a href="#Coolors" class="headerlink" title="Coolors"></a>Coolors</h3><p>地址：<a href="http://coolors/">http://coolors/</a></p><p>Coolors 是我推荐的颜色组合网站。每次按“空格键”时，它都会生成新的颜色组合。</p><p><a href="https://mp.weixin.qq.com/s/o_f9U9SPFUnaj3LWmtk_PA">参考</a></p><h2 id="服务器和网站在线测速工具"><a href="#服务器和网站在线测速工具" class="headerlink" title="服务器和网站在线测速工具"></a>服务器和网站在线测速工具</h2><p><a href="http://ping.pe/">http://ping.pe</a><br><a href="https://www.ping.cn/">https://www.ping.cn/</a><br><a href="https://ping.chinaz.com/">站长工具</a><br><a href="https://ping.aizhan.com/">https://ping.aizhan.com</a><br><a href="https://zijian.aliyun.com/detect/http/">阿里云网站运维检测平台</a></p><h1 id="写论文可以用到的网站："><a href="#写论文可以用到的网站：" class="headerlink" title="写论文可以用到的网站："></a>写论文可以用到的网站：</h1><ol><li><p>国家哲学社会科学文献中心： <a href="http://www.ncpssd.org/">www.ncpssd.org</a><br>现有中文期刊、外文期刊、古籍等资源，收录哲学社会科学相关领域文献共计10,000,000余条，提供有线阅读、全文下载等服务。</p></li><li><p>文津搜索： find.nlc.cn<br>国家图书馆资源检索，汇聚了60多个资源库、近2亿条文献信息，可以查询包括图书、古文献、论文、期刊报纸、多媒体等在内的多种资料。</p></li><li><p>术语在线： <a href="http://www.termonline.cn/">www.termonline.cn</a><br>一个可以查询专业术语的在线网站，非常权威，内容更新也很及时。</p></li><li><p>科塔学术： site.sciping.com<br>学术导航网站，整理了许多论文搜索网站、学术工具、科研软件、期刊出版等，每一个都有细致的分类，并归纳了对应的网站。</p></li><li><p>Academic Phrasebank： <a href="http://www.phrasebank.manchester.ac.uk/">www.phrasebank.manchester.ac.uk</a><br>论文写作助手，这个网站主要提供论文各部分的模版，如介绍怎么写，总结怎么写，如何描述方法，报告细节等，对非英语母语作者非常有帮助。</p></li><li><p>iData： <a href="http://www.cn-ki.net/">www.cn-ki.net</a><br>一个知网镜像站，可以免费下载论文，知网比较新的没有，每天有免费下载限额。</p></li><li><p>SCI-Hub： sci-hub.com<br>这个网站就不多介绍了，一个超棒的免费下载论文的网站，输入文献doi号即可搜索下载。</p></li><li><p>OALib： <a href="http://www.oalib.com/">www.oalib.com</a><br>目前收录了570万篇学术论文，涵盖多个领域，所有文章均可免费下载，是一个较为高效的论文查找网站。</p></li><li><p>研享网： <a href="http://www.academicshare.cn/">www.academicshare.cn</a><br>检索下载英文文献的利器，页面超级干净，支持关键词、题目、论文doi搜索。</p></li><li><p>Medsci： <a href="http://www.medsci.cn/sci">www.medsci.cn/sci</a><br>期刊智能查询系统，支持模糊查询，每一个期刊还有对应的论坛。</p></li><li><p>Connected Papers： <a href="http://www.connectedpapers.com/">www.connectedpapers.com</a><br>文献调研必备神器，它可以在线进行分析文献的引文信息，轻松了解某篇文献的引用和被引用关联，分析出文献的前世今生，方便我们对一篇文献或者某个领域进行调研。</p></li><li><p>近邻词汇检索： tool.mingdawoo.com<br>可免费查找近似短语和相关术语，词穷的时候可以看看。</p></li><li><p>秘塔写作猫： xiezuocat.com<br>可以校对中文字词错误、标点错误、语序错误、语法问题、同意混淆等，并给出修改建议，支持全文分析和智能排版，免费版基本上能满足日常需求。</p></li><li><p>Grammarly： <a href="http://www.grammarly.com/">www.grammarly.com</a><br>英文语法错误查询好助手，可以安装为word插件，在你写作的时候就可以纠正你的语法错误了。</p></li><li><p>知犀思维导图： <a href="http://www.zhixi.com/">www.zhixi.com</a><br>免费好用的论文大纲整理工具，可以借助这个工具做论文大纲。这个网站还提供许多思维导图模板，包括工作方法、考研考证的资料、管理方法、科普知识等方面的模板。</p></li><li><p>词云统计： cloud.niucodata.com<br>在线中文词汇统计和分析工具，可以帮助用户分析一段话中的词性分类、词频统计并生成词云图。</p></li><li><p>Linggle： <a href="http://www.linggle.com/">www.linggle.com</a><br>提供英文常用语、搭配、近义词等检索，可以根据词性来推测完整搭配，还能帮助学习者分析出更准确的英文写作建议。</p></li><li><p>Netspeak： netspeak.org<br>这个网站也是词汇，不过是用来查找你记不太清楚的词汇，比如congratulations，你不记得全部拼写了，你就可以在这个网站上来查一下。</p></li><li><p>Linguee： cn.linguee.com<br>一个全能的在线多语言互译平台，提供24种语言的对应查询服务，而且还收集了数亿条译文例句，无论是日常领域的术语，还是专业难度偏大的词汇，在这里都能找到专业的翻译方式。</p></li><li><p>DocTranslator： <a href="http://www.onlinedoctranslator.com/">www.onlinedoctranslator.com</a><br>可免费在线翻译文档，支持109种不同语言文档任意转换，并保持排版不变。操作简单，直接上传文档就可以。   </p></li></ol><h2 id="持续更新"><a href="#持续更新" class="headerlink" title="持续更新"></a>持续更新</h2>]]></content>
      
      
      <categories>
          
          <category> 资源分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网站 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搜索技巧</title>
      <link href="/2021/121943862.html"/>
      <url>/2021/121943862.html</url>
      
        <content type="html"><![CDATA[<h2 id="常用搜索"><a href="#常用搜索" class="headerlink" title="常用搜索"></a>常用搜索</h2><h3 id="电子书"><a href="#电子书" class="headerlink" title="电子书"></a>电子书</h3><h4 id="搜索技巧"><a href="#搜索技巧" class="headerlink" title="搜索技巧"></a>搜索技巧</h4><p>  Google的相关索引量巨大，但需要配一些关键词食用。本站不提供代理服务，请自行料理<br>  只是输入入特别一点：书名关键词后加上格式(pdf/epub/mobi/azw3/txt)<br>  书名+格式：例如：巴圣母院 pdf<br>  书名+ filetype/inu格式；例如：格林童话 filetype: mobi ; 三个火枪手 inurl: pdf.<br>  书名+提取码：例如：三体 提取码</p><h4 id="中文"><a href="#中文" class="headerlink" title="中文"></a>中文</h4><p>  图书馆联盟[需先注册]:<a href="http://www.ucdrs.superlib.net/">http://www.ucdrs.superlib.net/</a><br>  脚本之家：htps://ww.jb51.net/ books/<br>  电子书共享社区<a href="https://ebook2.lorefree.com/">https://ebook2.lorefree.com/</a></p><h4 id="外文"><a href="#外文" class="headerlink" title="外文"></a>外文</h4><h4 id="学术搜索综合"><a href="#学术搜索综合" class="headerlink" title="学术搜索综合"></a>学术搜索综合</h4><p>  字术搜素合集<a href="https://scholar.chongbuluo.com/">https://scholar.chongbuluo.com/</a></p><h4 id="电子书搜索综合"><a href="#电子书搜索综合" class="headerlink" title="电子书搜索综合"></a>电子书搜索综合</h4><p>  电子书搜素合集：htps://www. giffox.com/</p><h3 id="网盘"><a href="#网盘" class="headerlink" title="网盘"></a>网盘</h3><ul><li>阿里网盘<br><a href="https://www.alipansou.com/">https://www.alipansou.com/</a><br><a href="https://www.niceso.fun/">https://www.niceso.fun/</a></li><li>百度网盘<br>飞猪盘：<a href="https://www.feizhupan.com/">https://www.feizhupan.com/</a></li></ul><h2 id="浏览器搜索语法"><a href="#浏览器搜索语法" class="headerlink" title="浏览器搜索语法"></a>浏览器搜索语法</h2><p>+加号 –强制包含关键词<br>减号一排除关键词或网站<br>“双引号和书名号一精确匹配<br>(|)一一并行搜索<br>site_一在特定网站或域中搜索<br>  intitle–在特定的网页标题中搜索<br>inurl一在特定ur链接中搜索<br>filetype–在特定文档格式中搜索<br>『』一一查找论坛版块<br>intitle: bookmarks一查询别人的收藏夹</p><h2 id="资源网站"><a href="#资源网站" class="headerlink" title="资源网站"></a>资源网站</h2><p>语雀:<a href="https://www.yuque.com/eureka007/ziyuan">https://www.yuque.com/eureka007/ziyuan</a><br>电报tg:<a href="https://t.me/fku0007">https://t.me/fku0007</a><br>吾爱论坛：<a href="https://www.52pojie.cn/">https://www.52pojie.cn/</a><br>虫部落：<a href="https://www.chongbuluo.com/">https://www.chongbuluo.com/</a><br>知乎：<a href="https://ww.zhihu.com/">https://ww.zhihu.com/</a><br>Github:<a href="https://github.com/">https://github.com/</a><br>B站:<a href="https://ww.bilibili.com/">https://ww.bilibili.com/</a><br>油管：<a href="https://www.youtubecom/">https://www.youtubecom/</a><br>瑞客论坛[大多为计算机内容J:<a href="https://www.ruikel.com/">https://www.ruikel.com/</a></p>]]></content>
      
      
      <categories>
          
          <category> 知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>node.js</title>
      <link href="/2021/12184010.html"/>
      <url>/2021/12184010.html</url>
      
        <content type="html"><![CDATA[<h1 id="Nodejs是什么"><a href="#Nodejs是什么" class="headerlink" title="Nodejs是什么"></a>Nodejs是什么</h1><p>JavaScript 是一种编程语言，在 Node.js 诞生前，JavaScript 都运行于浏览器端， Node.js 是一个基于 Chrome V8 引擎的 JavaScript 运行环境。电脑安装了Node.js后， Node.js 相当于浏览器，也可以在里面运行 JavaScript 了！</p><p>简单的说node.js就是把浏览器的解释器封装起来作为服务器运行平台，用类似javascript的结构语法进行编程，在node.js上运行。</p><p>在Node端写JS，就是用Node封装好的一系列功能模块来写代码。NodeJS封装了网络，文件，安全加密，压缩等等很多功能模块，我们只需要学会常用的一些，然后在需要的时候去查询文档即可。</p><h1 id="Nodejs的组成："><a href="#Nodejs的组成：" class="headerlink" title="Nodejs的组成："></a>Nodejs的组成：</h1><p>ECMAScript(语言基础，如：语法、数据类型结构以及一些内置对象)</p><p>os(操作系统)</p><p>file(文件系统)</p><p>net(网络系统)</p><p>database(数据库)</p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p><a href="https://nodejs.org/en/">Node.js下载地址</a></p><p>打开cmd输入命令检查是否安装成功：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">node -v 查看node版本</span><br><span class="line">npm -v 查看npm版本</span><br></pre></td></tr></tbody></table></figure><p>Node.js 安装成功时也默认安装了 npm， npm 是随 Node.js 一起被安装的包管理工具，你可以理解成 Node.js 自带的应用商店。是用来安装/卸载Node.js需要装的东西</p><h1 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h1><p>1.修改全局模块路径和缓存路径<br>当我们在执行<code>npm install express -g</code>命令时，会默认下载到c盘，更改下载盘<br>在nodejs安装目录下创建创建两个文件夹，名称分别为：node_global(全局模块)和node_cache(缓存)，在node_global文件夹下再建一个node_modules文件夹，配置环境变量用</p><p>2.win+R打开运行窗口，输入cmd，再输入以下两条指令<br>npm config set prefix “创建的node_global文件夹所在路径”<br>npm config set cache “创建的node_cache文件夹所在路径”</p><p>3.修改完毕后，再配置环境变量<br>右键此电脑——&gt;高级系统设置——&gt;环境变量<br>在系统变量中，新建，变量名：NODE_PATH<br>变量值：node_global文件夹下的node_modules文件夹。如：E:\develop\nodejs\node_global\node_modules</p><p>修改用户变量中的Path变量，将默认的npm路径修改为新建的node_global路径<br>如：D:\ruanjian\nodejs\node_global</p><h1 id="npm"><a href="#npm" class="headerlink" title="npm"></a>npm</h1><h2 id="npm-是什么？"><a href="#npm-是什么？" class="headerlink" title="npm 是什么？"></a>npm 是什么？</h2><p><a href="https://yafine-blog.cn/posts/8094.html">参考</a><br>npm 为你和你的团队打开了连接整个 JavaScript 天才世界的一扇大门。它是世界上最大的软件注册表，每星期大约有 30 亿次的下载量，包含超过 600000 个 包（package）（即代码模块）。来自各大洲的开源软件开发者使用 npm 互相分享和借鉴。包的结构使您能够轻松跟踪依赖项和版本。</p><p>npm (node package manager) 是 JavaScript 世界的包管理工具，是 Node.js 平台的默认包管理工具，简单地说，就是通过 npm 下载模块，复用已有的代码，提高工作效率。</p><h2 id="组成"><a href="#组成" class="headerlink" title="组成"></a>组成</h2><p>npm 由三个独立的部分组成：</p><ul><li>网站</li><li>注册表（registry）</li><li>命令行工具 (CLI)</li></ul><p><a href="https://www.npmjs.com/">网站</a> 是开发者查找包（package）、设置参数以及管理 npm 使用体验的主要途径。</p><p>注册表 是一个巨大的数据库，保存了每个包（package）的信息。</p><p>CLI 通过命令行或终端运行。开发者通过 CLI 与 npm 打交道。<br> <a href="https://www.axihe.com/api/npm/api/api.html">npm中文文档</a> </p><h2 id="切换为-taobao-镜像源"><a href="#切换为-taobao-镜像源" class="headerlink" title="切换为 taobao 镜像源"></a>切换为 taobao 镜像源</h2><p>国内使用 npm 可能很慢。你可以考虑切换为 taobao 镜像源。</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> registry https://registry.npm.taobao.org</span><br></pre></td></tr></tbody></table></figure><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装</span></span><br><span class="line">npm install</span><br><span class="line"><span class="comment"># 卸载</span></span><br><span class="line">npm uninstall</span><br><span class="line"><span class="comment"># 清理缓存</span></span><br><span class="line">npm cache clean -f</span><br></pre></td></tr></tbody></table></figure><h1 id="cnpm-是什么？"><a href="#cnpm-是什么？" class="headerlink" title="cnpm 是什么？"></a>cnpm 是什么？</h1><p>简单的讲就是中国版的 NPM，因为 npm 安装插件是从国外服务器下载，受网络影响大，可能出现异常，<br>需要安装 cnpm 模块，命令如下：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></tbody></table></figure><p>cnpm 支持可以使用支持 npm 除 publish 之外的所有命令。</p><p>因为 cnpm 的仓库只是 npm 仓库的一个拷贝，它不承担 publish 工作，所以执行 cnpm publish 命令会失败的。</p><h1 id="yarn-是什么？"><a href="#yarn-是什么？" class="headerlink" title="yarn 是什么？"></a>yarn 是什么？</h1><p>yarn 是个包管理器。你可以通过它使用全世界开发者的代码， 或者分享自己的代码。</p><p>从 npm 安装软件包并保持相同的包管理流程。</p><h2 id="特点："><a href="#特点：" class="headerlink" title="特点："></a>特点：</h2><p>1.速度超快。<br>Yarn 缓存了每个下载过的包，所以再次使用时无需重复下载。 同时利用并行下载以最大化资源利用率，因此安装速度更快。</p><p>2.超级安全<br>在执行代码之前，Yarn 会通过算法校验每个安装包的完整性。</p><p>3.超级可靠<br>使用详细、简洁的锁文件格式和明确的安装算法，Yarn 能够保证在不同系统上无差异的工作。<br>通过命令安装</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g yarn</span><br></pre></td></tr></tbody></table></figure><p>常用命令：<br>yarn init：初始化项目，会在根目录下生成一个 package.json，与 npm 类似具体不做解释</p><p>yarn add <package name="">：安装依赖包，会自动安装最新版本，会覆盖指定版本号</package></p><p>yarn add <package name1=""> <package name1="">：一次性添加多个包</package></package></p><p>yarn add <package name="">@version：添加指定版本的包</package></p><p>yarn upgrade <package name="">@version：将包更新到指定版本</package></p><p>yarn upgrade –latest <package name="">：将包更新到最新版本</package></p><p>yarn remove <package name="">：删除包</package></p><p>yarn remove <package name1=""> <package name2="">：一次性删除多个包</package></package></p><p>yarn info <packagename> ：可以用来查看某个模块的最新版本信息</packagename></p><p>yarn install：安装 package.json 里所有包，并将包及它的所有依赖项保存进 yarn.lock</p><p>yarn install –force ：强制重新下载所有包</p><p>yarn install –flat：安装一个包的单一版本</p><p>yarn install –production：只安装 dependencies 里的包</p><p>yarn install –no-lockfile：不读取或生成 yarn.lock</p><p>yarn install –pure-lockfile：不生成 yarn.lock</p><p>npm是Nodejs自带的包管理器，当你安装Node的时候就自动安装了npm。通俗的讲，当我们想使用一个功能的时候，而Node本身没有提供，那么我们就可以从npm上去搜索并下载这个模块。每个开发语言都有自己的包管理器，比如，java有maven，python有pip。而npm是目前世界上生态最丰富，可用模块最多的一个社区，没有之一。基本上，你所能想到的功能都不用自己手写了，它已经在npm上等着你下载使用了。</p><p>npm的海量模块，使得我们开发复杂的NodeJs的程序变得更为简单。</p><h1 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h1><p>安装npm模块时，没有权限<br>解决方法：打开nodejs安装目录的属性把权限全部勾上 </p><p>npm的包安装分为本地安装（local）、全局安装（global）两种<br> 本地安装: npm install xxx 安装到命令行所在目录的node_module目录。<br> 全局安装: npm install xxx -g 安装到 \AppData\Roaming\npm\node_modules目录。</p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git使用</title>
      <link href="/2021/11205629.html"/>
      <url>/2021/11205629.html</url>
      
        <content type="html"><![CDATA[<h1 id="git安装及配置"><a href="#git安装及配置" class="headerlink" title="git安装及配置"></a>git安装及配置</h1><p>Git是一个分布式代码管理工具，可以在本地提交，不需要依赖网络，并且会将每次提交自动备份到本地。每个开发者都可以把远程仓库clone一份到本地，并会把提交历史一并拿过来。</p><a class="btn-beautify button--animated " href="https://git-scm.com/downloads" title="官网下载"><i class="larger"></i><span>官网下载</span></a><p>按照安装向导来安装Git，相关参数勾选为默认即可</p><p>安装完成后，右键菜单栏会出现Git GUI和Git Bash</p><h2 id="git基本操作命令"><a href="#git基本操作命令" class="headerlink" title="git基本操作命令"></a>git基本操作命令</h2><p>查看系统配置<br><code>git config -l</code> </p><h2 id="配置Github用户名和账号"><a href="#配置Github用户名和账号" class="headerlink" title="配置Github用户名和账号"></a>配置Github用户名和账号</h2><p>打开Git bash</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 配置git用户和邮箱</span></span><br><span class="line">git config --global user.name <span class="string">"xxxx"</span>  </span><br><span class="line">git config --global user.email <span class="string">"xxxxx@qq.com"</span> </span><br><span class="line"><span class="comment">#查看配置的结果   </span></span><br><span class="line">git config --global --list</span><br><span class="line"><span class="comment">## 本机生成SSH公钥，实现免密登录    </span></span><br><span class="line">ssh-keygen -t rsa</span><br></pre></td></tr></tbody></table></figure><h2 id="将公钥添加到Github管理平台"><a href="#将公钥添加到Github管理平台" class="headerlink" title="将公钥添加到Github管理平台"></a>将公钥添加到Github管理平台</h2><p>我的目录是：C:\Users\wenke.ssh<br>将ssh文件夹中的公钥（ id_rsa.pub）添加到GitHub管理平台中，在GitHub的个人账户的设置中找到如下界面<br><img src="https://gitee.com/wenkex/blogimage/raw/master/v2-f0f5f7b988a88a3dee23b2eb085ff329_r.jpg"></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#测试配置是否成功 </span></span><br><span class="line">ssh -T git@github.com </span><br></pre></td></tr></tbody></table></figure><h1 id="关联本地与远程仓库"><a href="#关联本地与远程仓库" class="headerlink" title="关联本地与远程仓库"></a>关联本地与远程仓库</h1><h2 id="第一种方法"><a href="#第一种方法" class="headerlink" title="第一种方法"></a>第一种方法</h2><p>在github创建一个仓库，然后在本地选择一个文件夹克隆仓库<br><code>git clone [url]</code></p><p>然后添加文件即可</p><h2 id="第二种方法"><a href="#第二种方法" class="headerlink" title="第二种方法"></a>第二种方法</h2><h3 id="本地创建一个git库"><a href="#本地创建一个git库" class="headerlink" title="本地创建一个git库"></a>本地创建一个git库</h3><p>进入到指定的文件夹之后，右键打开git bash输入<br><code>git init</code><br>本地文件夹中也会出现.git隐藏文件夹（是git的控制文件）</p><h3 id="新建仓库，选择ssh方式进行连接"><a href="#新建仓库，选择ssh方式进行连接" class="headerlink" title="新建仓库，选择ssh方式进行连接"></a>新建仓库，选择ssh方式进行连接</h3><p>Git支持多种协议，包括https，但通过ssh支持的原生git协议速度最快。</p><p><img src="https://gitee.com/wenkex/blogimage/raw/master/1.jpg"><br>复制代码到Git Bash，即可实现新仓库和本地git的相关联</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin git@github.com:PanXF-HUST/test.git  </span><br><span class="line"><span class="comment">#命令查看关联状况</span></span><br><span class="line">git remote -v    </span><br></pre></td></tr></tbody></table></figure><h2 id="提交文件修改到远程仓库的最简步骤"><a href="#提交文件修改到远程仓库的最简步骤" class="headerlink" title="提交文件修改到远程仓库的最简步骤"></a>提交文件修改到远程仓库的最简步骤</h2><p>git add .<br>git commit -m “注释”    注释必填<br>git pull<br>git push origin 分支  </p><h1 id="远程仓库修改后更新本地仓库"><a href="#远程仓库修改后更新本地仓库" class="headerlink" title="远程仓库修改后更新本地仓库"></a>远程仓库修改后更新本地仓库</h1><h2 id="克隆仓库"><a href="#克隆仓库" class="headerlink" title="克隆仓库"></a>克隆仓库</h2><p><code>git clone 复制的SSH或者HTTPS key</code></p><h1 id="git工作原理详解"><a href="#git工作原理详解" class="headerlink" title="git工作原理详解"></a>git工作原理详解</h1><h2 id="工作区域"><a href="#工作区域" class="headerlink" title="工作区域"></a>工作区域</h2><p>Git有四个工作区域</p><p>工作区（Working Directory)：就是你平时存放项目代码的地方</p><p>暂存区(Stage/Index)：用于临时存放你的改动，事实上是一个保存即将提交到文件列表信息的文件</p><p>仓库区或本地仓库(Repository或Git Directory)：就是安全存放数据的位置，这里面有你提交到所有版本的数据，其中HEAD指向最新放入仓库的版本</p><p>远程仓库(Remote Directory)：托管代码的服务器</p><p><img src="https://cdn.jsdelivr.net/gh/wenkexia/image@main/img/1646480472830Quicker_20220305_193151.png"></p><h2 id="git的工作流程"><a href="#git的工作流程" class="headerlink" title="git的工作流程"></a>git的工作流程</h2><p>1.在工作区添加，修改文件<br>2.将需要进行版本管理的文件存入暂存区   <code>git add.</code><br>3.将暂存区的文件提交到git仓库     <code>git commit</code></p><p>因此，git管理的文件有三种状态：已修改（modified）、已暂存（staged）、已提交（committed）</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查看指定文件状态</span></span><br><span class="line">git status [filename]</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看所有文件状态</span></span><br><span class="line">git status</span><br><span class="line"></span><br><span class="line"><span class="comment">#添加所有文件到暂存区</span></span><br><span class="line">git add.</span><br><span class="line"></span><br><span class="line"><span class="comment">#提交暂存区中的内容到本地仓库</span></span><br><span class="line">git commit -m <span class="string">"描述"</span></span><br></pre></td></tr></tbody></table></figure><h2 id="忽略文件"><a href="#忽略文件" class="headerlink" title="忽略文件"></a>忽略文件</h2><p>有些时候我们不想把某些文件纳入版本控制中，比如数据库文件，临时文件，设计文件等</p><p>在主目录下建立”.gitignore”文件，此文件有如下规则：</p><p>1.忽略文件中的空行或以井号(#)开始的行将会被忽略。<br>2.可以使用Liux通配符。例如：星号(*)代表任意多个字符，问号(？)代表一个字符，方括号([abc])代表可选字符范围，<br>大括号({string1,string2})代表可选的字符串等。<br>3.如果名称的最前面有一个感叹号(！)，表示例外规则，将不被忽略。<br>4.如果名称的最前面是一个路径分隔符(/)，表示要忽略的文件在此目录下，而子目录中的文件不忽略。<br>5.如果名称的最后面是一个路径分隔符(/)，表示要忽略的是此目录下该名称的子目录，而非文件（默认文件或目录都忽略）。</p><h1 id="git-bash快捷键"><a href="#git-bash快捷键" class="headerlink" title="git bash快捷键"></a>git bash快捷键</h1><p> 复制 ctrl + insert<br> 粘贴 shift + insert</p><h1 id="vscode安装git插件"><a href="#vscode安装git插件" class="headerlink" title="vscode安装git插件"></a>vscode安装git插件</h1><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><a class="btn-beautify button--animated " href="https://zhuanlan.zhihu.com/p/124687836" title="参考文章"><span>参考文章</span></a><a class="btn-beautify button--animated " href="https://mp.weixin.qq.com/s/AxOpMKzMzpe4Dnhk4N-Nlg" title="参考文章"><span>参考文章</span></a><a class="btn-beautify button--animated " href="https://zhuanlan.zhihu.com/p/123195804" title="参考"><i class="larger"></i><span>参考</span></a><p><a href="https://www.bilibili.com/video/BV1FE411P7B3?p=11">参考b站视频</a></p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo博客搭建</title>
      <link href="/2021/111958091.html"/>
      <url>/2021/111958091.html</url>
      
        <content type="html"><![CDATA[<h1 id="Hexo-简介"><a href="#Hexo-简介" class="headerlink" title="Hexo 简介"></a>Hexo 简介</h1><p>Hexo 是一个快速，简单且功能强大的博客框架。如果你用 Markdown 写博客，Hexo 可以在几秒内生成带有精美主题的静态文件。</p><h1 id="准备环境"><a href="#准备环境" class="headerlink" title="准备环境"></a>准备环境</h1><h2 id="Node-js-安装。"><a href="#Node-js-安装。" class="headerlink" title="Node.js 安装。"></a>Node.js 安装。</h2><h2 id="Git-并安装"><a href="#Git-并安装" class="headerlink" title="Git 并安装"></a>Git 并安装</h2><p>配置环境变量，两个都要配置</p><h2 id="安装Hexo，"><a href="#安装Hexo，" class="headerlink" title="安装Hexo，"></a>安装Hexo，</h2><p>创建一个文件夹例如blog，右键打开Git Bash<br>运行：  npm install -g hexo-cli<br>查看版本 hexo -v</p><h2 id="初始化Hexo"><a href="#初始化Hexo" class="headerlink" title="初始化Hexo"></a>初始化Hexo</h2><p>hexo init blog<br>cd blog  #进入blog目录<br>npm install</p><p>新建完成后，指定文件夹目录下有：<br>node_modules: 依赖包<br>public：存放生成的页面<br>scaffolds：生成文章的一些模板<br>source：用来存放你的文章<br>themes：主题<br>_config.yml: 博客的配置文件  </p><h2 id="Hexo版本升级"><a href="#Hexo版本升级" class="headerlink" title="Hexo版本升级"></a>Hexo版本升级</h2><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"># 使用淘宝源的 cnpm 替换 npm</span><br><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br><span class="line"></span><br><span class="line">cnpm install -g cnpm                 # 升级 npm</span><br><span class="line">cnpm cache clean -f                 # 清除 npm 缓存</span><br><span class="line"></span><br><span class="line">===更新 hexo: 进入 blog 目录，执行如下命令=== </span><br><span class="line"># 更新 package.json 中的 hexo 及个插件版本</span><br><span class="line">cnpm install -g npm-check </span><br><span class="line">npm-check                  # 检查之前安装的插件，都有哪些是可以升级的 </span><br><span class="line">cnpm install -g npm-upgrade         </span><br><span class="line">npm-upgrade                 # 升级系统中的插件</span><br><span class="line"></span><br><span class="line"># 更新 hexo 及所有插件</span><br><span class="line">cnpm update</span><br><span class="line"></span><br><span class="line"># 确认 hexo 已经更新</span><br><span class="line">hexo -v</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h1 id="创建GitHub仓库或者码云仓库"><a href="#创建GitHub仓库或者码云仓库" class="headerlink" title="创建GitHub仓库或者码云仓库"></a>创建GitHub仓库或者码云仓库</h1><p>1.创建仓库，仓库名必须和用户名一致，其他按照默认，直接创建<br>2.打开cmd，添加Git本地用户<br>git config –global user.name “ 用户名  “<br>git config –global user.email “绑定的邮箱”</p><p>3.申请Sky秘钥<br>ssh-keygen -t rsa -C “Git绑定的邮箱”<br>sky在这 C:\Users\啊科.ssh</p><p>4.复制Sky秘钥添加到GitHub或者码云<br>查看是否成功  ssh -T <a href="mailto:git@github.com">git@github.com</a></p><h1 id="将本地仓库与远程仓库连接"><a href="#将本地仓库与远程仓库连接" class="headerlink" title="将本地仓库与远程仓库连接"></a>将本地仓库与远程仓库连接</h1><p>1.安装git部署插件：才能用hexo d 上传<br>npm install hexo-deployer-git –save</p><p>2.复制生成的仓库连接<br>修改博客目录下的_config.yml文件</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repository:</span> <span class="string">https://gitee.com/wenkex/wenkex.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></tbody></table></figure><h1 id="本地创建文章，上传到远程仓库"><a href="#本地创建文章，上传到远程仓库" class="headerlink" title="本地创建文章，上传到远程仓库"></a>本地创建文章，上传到远程仓库</h1><p>hexo clean清理缓存<br> hexo g 刷新博客文章<br> hexo s 开启本地映射 #为了在本地检查文章，该步骤可以跳过，该命令按Ctrl+C结束<br> hexo d 将本地博客上传到远程仓库，第一次上传会让你输入GitHub或码云的账号密码<br>等待上传完成，打开Gitee pages，更新Https内容（每次上传文件后都要执行这一步）</p><p>在你创建的博客文件夹下打开git bash，输入命令 hexo new 文章标题</p><p>用yarn cgd或npm run cgd运行如下命令<br>hexo cl &amp;&amp; hexo g &amp;&amp; hexo d一键上传到远程仓库<br>hexo cl &amp;&amp; hexo g &amp;&amp; hexo s一键开启本地映射</p><h1 id="1-目录结构说明"><a href="#1-目录结构说明" class="headerlink" title="1.目录结构说明"></a>1.目录结构说明</h1><p><a href="https://juejin.cn/post/6844904082042257415#heading-6">参考</a><br><a href="https://hexo.io/zh-cn/docs/">参考</a></p><p>在执行过Hexo deploy命令之后，目录结构新增了.deploy_git，public，.gitignore，如下</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"> $ tree -L 2</span><br><span class="line">.</span><br><span class="line">├── .deploy_git</span><br><span class="line">├── node_modules</span><br><span class="line">├── public</span><br><span class="line">├── scaffolds</span><br><span class="line">│&nbsp;&nbsp; ├── draft.md</span><br><span class="line">│&nbsp;&nbsp; ├── page.md</span><br><span class="line">│&nbsp;&nbsp; └── post.md</span><br><span class="line">├── source</span><br><span class="line">│&nbsp;&nbsp; ├── _posts</span><br><span class="line">│&nbsp;&nbsp; ├── _drafts</span><br><span class="line">├── themes</span><br><span class="line">├── _config.yml</span><br><span class="line">├── db.json</span><br><span class="line">├── package.json</span><br><span class="line">└── package-lock.json</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><ul><li><p>_config.yml<br>用来配置博客相关的参数，初始化时自动创建</p></li><li><p>node_modules用来存储已安装的各类依赖包</p></li><li><p>package.json用来查看 Hexo 的版本以及相关依赖包的版本。</p></li><li><p>scaffold<br>模板文件夹，初始化时自动创建。包含page，post，draft三种模板，分别对应 页面、要发布的文章、草稿。<br>在新建文章时，Hexo 会根据 scaffolds 文件夹内相对应的文件来建立文件，例如：<br><code>$ hexo new photo "My Gallery"</code><br>在执行这行指令时，Hexo 会尝试在 scaffolds 文件夹中寻找 photo.md，并根据其内容建立文章，</p></li><li><p>themes<br>主题文件夹，初始化时自动创建。每一个主题，都有一个单独的文件夹。</p></li><li><p>source：资源文件夹。用来存放图片、Markdown 文档（文章、草稿）、各种页面（分类、关于页面等）。</p></li><li><p>public：将 source 文件夹里的 Markdown 文档，转换成 index.html。再结合主题进行渲染，就是我们最终看到的博客。</p></li><li><p>.deploy_git：将 public 文件夹的内容提交到 Github 后生成，内容与 public 文件夹基本一致。</p></li></ul><p>这三者的关系大致是：source -&gt; public -&gt; .deploy_git<br>执行hexo generate，根据 source，更新 public。<br>执行hexo deploy，根据 public，更新 .deploy_git。</p><hr><h1 id="2-常用命令"><a href="#2-常用命令" class="headerlink" title="2.常用命令"></a>2.常用命令</h1><p>1.<code>hexo server</code> #启动本地服务器，用于预览主题。Hexo 会监视文件变动并自动更新，除修改站点配置文件外,无须重启服务器,直接刷新网页即可生效。简写：<code>hexo s</code></p><p>2.<code>hexo clean</code>#清除缓存 ,网页正常情况下可以忽略此条命令,执行该指令后,会删掉站点根目录下的public文件夹</p><p>3.<code>hexo g</code>#生成静态网页 (执行后会在站点根目录下生成public文件夹, hexo会将”/blog/source/“ 下面的.md后缀的文件编译为.html后缀的文<br>件,存放在”/blog/public/ “ 路径下)  等价于<code>hexo generate</code></p><p>4.<code>hexo d</code>#自动生成网站静态文件，并将本地数据部署到设定的仓库(如github)等价于<code>hexo deploy</code></p><h1 id="3-更换主题"><a href="#3-更换主题" class="headerlink" title="3.更换主题"></a>3.更换主题</h1><h2 id="Hexo主题升级方法"><a href="#Hexo主题升级方法" class="headerlink" title="Hexo主题升级方法"></a>Hexo主题升级方法</h2><p>1.使用Git Bash工具跳转到主题文件对应的目录中<br>2.首先，更新工作的状态树：<br><code>git add .</code><br>3.之后，输入如下命令，将文件放在堆栈中，获取更新后，再弹栈：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git stash</span><br><span class="line">git pull</span><br><span class="line">git stash pop</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h1 id="4-新建文章自动打开编辑器"><a href="#4-新建文章自动打开编辑器" class="headerlink" title="4.新建文章自动打开编辑器"></a>4.新建文章自动打开编辑器</h1><p>执行 hexo new “名字”，这样就会在_posts 下生成一篇新文章，但需要手动打开，<br>1.只需要在站点根目录下新建 scripts 目录，<br>2.然后在scripts目录下新建 auto_open.js，在文件填入一下内容：</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> spawn = <span class="built_in">require</span>(<span class="string">'child_process'</span>).exec;</span><br><span class="line"><span class="comment">// Hexo 3 用户复制这段</span></span><br><span class="line">hexo.on(<span class="string">'new'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>{</span><br><span class="line">  spawn(<span class="string">'start  "D:\Program Files\Typora\Typora.exe" '</span> + data.path);</span><br><span class="line">});</span><br></pre></td></tr></tbody></table></figure><p>其中 “D:\Program Files\Typora\Typora.exe” 是我本地编辑器的路径，只需要改为你本地编辑器的路径即可，然后在执行 hexo cl &amp;&amp; hexo g -d，部署到 GitHub 即可，以后在发布文章就会自动打开编辑器。</p><h1 id="5-一键部署"><a href="#5-一键部署" class="headerlink" title="5.一键部署"></a>5.一键部署</h1><p>通过 hexo-deployer-git 插件可以实现一键将博客同时部署到多个git仓库中。如同时发布到github及gitee提供的pages服务。安装：<br><code>npm install hexo-deployer-git --save</code><br>修改 Hexo 根目录下的_config.yml 文件中的如下内容:</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#一键部署，修改成自己的repo和branch</span></span><br><span class="line"><span class="attr">deploy:</span> </span><br><span class="line">  <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">git</span>    </span><br><span class="line">  <span class="attr">repo:</span> <span class="string">https://github.com/lxl80/blog.git</span>  </span><br><span class="line">  <span class="attr">branch:</span> <span class="string">gh-pages</span>   </span><br><span class="line">  <span class="string">ignore_hidden:false</span></span><br><span class="line">  <span class="string">-type:git</span></span><br><span class="line">  <span class="string">repo:https://gitee.com/lxl80/lxl80.git</span></span><br><span class="line">  <span class="string">branch:master</span></span><br><span class="line">  <span class="string">ignore_hidden:false</span></span><br></pre></td></tr></tbody></table></figure><h1 id="简化部署"><a href="#简化部署" class="headerlink" title="简化部署"></a>简化部署</h1><p>在package.json中<br>添加<code>"cgd": "hexo clean &amp;&amp; hexo g &amp;&amp; hexo d"</code><br>以后就可以用<code>npm run cgd</code>直接部署上线</p><figure class="highlight json"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"scripts"</span>: {</span><br><span class="line">  <span class="attr">"build"</span>: <span class="string">"hexo generate"</span>,</span><br><span class="line">  <span class="attr">"clean"</span>: <span class="string">"hexo clean"</span>,</span><br><span class="line">  <span class="attr">"deploy"</span>: <span class="string">"hexo deploy"</span>,</span><br><span class="line">  <span class="attr">"server"</span>: <span class="string">"hexo server"</span>,</span><br><span class="line">  <span class="attr">"cgs"</span>: <span class="string">"hexo clean &amp;&amp; hexo g &amp;&amp; hexo s"</span>,</span><br><span class="line">  <span class="attr">"cgd"</span>: <span class="string">"hexo clean &amp;&amp; hexo g &amp;&amp; hexo d"</span></span><br><span class="line">},</span><br></pre></td></tr></tbody></table></figure><h1 id="6-使用文章资源文件夹-弃用，现在用图床"><a href="#6-使用文章资源文件夹-弃用，现在用图床" class="headerlink" title="6.使用文章资源文件夹(弃用，现在用图床)"></a>6.使用文章资源文件夹(弃用，现在用图床)</h1><p>在config.yaml文件中更改一下配置：<br><code>post_asset_folder: true</code><br>当该配置被应用后，使用hexo new命令创建新文章时，会生成相同名字的文件夹，也就是文章资源文件夹。<br>此时应该使用这样的方式来引入图片：<br><code>{% asset_img image.jpg 这是一张图片 %}</code></p><ul><li>图片插件</li></ul><p>插件hexo-renderer-marked解决了这个问题。可以只用<code>npm install hexo-renderer-marked</code>命令直接安装，之后在config.yaml中更改配置如下：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">post_asset_folder: true</span><br><span class="line">marked:</span><br><span class="line">  prependRoot: true</span><br><span class="line">  postAsset: true</span><br></pre></td></tr></tbody></table></figure><h1 id="7-github添加自己的域名"><a href="#7-github添加自己的域名" class="headerlink" title="7.github添加自己的域名"></a>7.github添加自己的域名</h1><p><a href="https://yafine-blog.cn/posts/fc0.html">参考</a></p><p>1.注册一个域名<br>2.添加域名解析（注：使用自定义域名，需要将记录类型修改为 CNAME 将域名指向另一个域名，记录值修改为 GitHub对应仓库名，如：zhang123-123.github.io）<br>3.在GitHub 中设置新的注册的域名（具体位置：Settings –&gt; Pages –&gt; Custom domain），之后保存验证就可以了<br>4.进入 hexo 根目录的 source 文件夹；<br>创建 CNAME 文件，文件添加域名 –&gt; zhangyh.fun。注意：文件名全部大写，没有后缀；文件内容只有域名；<br>5.重新生成静态文件，并提交。hexo d</p><h1 id="8-搜索"><a href="#8-搜索" class="headerlink" title="8.搜索"></a>8.搜索</h1><p>1.使用到了 hexo-generator-search 的 Hexo 插件来做内容搜索，安装命令如下：<br><code>npm install hexo-generator-search --save</code><br>2.在 Hexo 根目录下的 _config.yml 文件中，新增以下的配置项：</p><figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">search:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">search.xml</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">post</span></span><br></pre></td></tr></tbody></table></figure><p>3.在主题配置文件中开启本地搜索</p><h1 id="9-文章字数统计插件"><a href="#9-文章字数统计插件" class="headerlink" title="9.文章字数统计插件"></a>9.文章字数统计插件</h1><p>如果你想要在文章中显示文章字数、阅读时长信息，可以安装 hexo-wordcount插件。<br>安装命令如下：<br><code>npm i --save hexo-wordcount</code><br>然后只需在主题下的 _config.yml 文件中，激活以下配置项即可：</p><figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">wordCount:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span> <span class="comment"># 将这个值设置为 true 即可.</span></span><br><span class="line">  <span class="attr">postWordCount:</span> <span class="literal">true</span>  </span><br><span class="line">  <span class="attr">min2read:</span> <span class="literal">true</span>  </span><br><span class="line">  <span class="attr">totalCount:</span> <span class="literal">true</span></span><br></pre></td></tr></tbody></table></figure><h1 id="10-图片懒加载"><a href="#10-图片懒加载" class="headerlink" title="10.图片懒加载"></a>10.图片懒加载</h1><ul><li>图片预加载：顾名思义，图片预加载就是在网页全部加载之前，提前加载图片。当用户需要查看时可直接从本地缓存中渲染，以提供给用户更好的体验，减少等待的时间。否则，如果一个页面的内容过于庞大，没有使用预加载技术的页面就会长时间的展现为一片空白，这样浏览者可能以为图片预览慢而没兴趣浏览，把网页关掉，这时，就需要图片预加载。当然这种做法实际上牺牲了服务器的性能换取了更好的用户体验。</li><li>图片懒加载（缓载）：延迟加载图片或符合某些条件时才加载某些图片。这样做的好处是减少不必要的访问数据库或延迟访问数据库的次数，因为每次访问数据库都是比较耗时的即只有真正使用该对象的数据时才会创建。懒加载的主要目的是作为服务器前端的优化，减少请求数或延迟请求数。</li><li>懒加载对服务器前端有一定的缓解压力作用，预载则会增加服务器前端压力。<br>使用图片懒加载需要安装插件：hexo-lazyload-image<br>在站点根目录执行下面的命令：</li></ul><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-lazyload-image --save</span><br></pre></td></tr></tbody></table></figure><p>之后在站点配置文件下添加下面的代码：</p><figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">lazyload:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span>  <span class="comment"># 是否开启图片懒加载</span></span><br><span class="line">  <span class="attr">onlypost:</span> <span class="literal">false</span>  <span class="comment"># 是否只对文章的图片做懒加载</span></span><br><span class="line">  <span class="attr">loadingImg:</span> <span class="comment"># eg ./images/loading.gif</span></span><br></pre></td></tr></tbody></table></figure><h1 id="11-代码压缩"><a href="#11-代码压缩" class="headerlink" title="11.代码压缩"></a>11.代码压缩</h1><p>因为 hexo 生成的 html、css、js 等都有很多的空格或者换行，而空格和换行也是占用字节的，所以需要将空格换行去掉也就是我要进行的 “压缩”。<br>我们采用 gulp 代码压缩方式。<br>使用方法：</p><ul><li>进入站点根目录下依次执行下面的命令：</li></ul><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 全局安装gulp模块</span></span><br><span class="line">npm install gulp -g</span><br><span class="line"><span class="comment"># 安装各种小功能模块  执行这步的时候，可能会提示权限的问题，最好以管理员模式执行</span></span><br><span class="line">npm install gulp gulp-htmlclean gulp-htmlmin gulp-minify-css gulp-uglify gulp-imagemin --save</span><br><span class="line"><span class="comment"># 额外的功能模块</span></span><br><span class="line">npm install gulp-debug gulp-clean-css gulp-changed gulp-if gulp-plumber gulp-babel babel-preset-es2015 del @babel/core --save</span><br></pre></td></tr></tbody></table></figure><ul><li>在 Hexo 根目录新建文件 gulpfile.js，并复制以下内容到文件中</li></ul><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> gulp = <span class="built_in">require</span>(<span class="string">"gulp"</span>);</span><br><span class="line"><span class="keyword">var</span> debug = <span class="built_in">require</span>(<span class="string">"gulp-debug"</span>);</span><br><span class="line"><span class="keyword">var</span> cleancss = <span class="built_in">require</span>(<span class="string">"gulp-clean-css"</span>); <span class="comment">//css压缩组件</span></span><br><span class="line"><span class="keyword">var</span> uglify = <span class="built_in">require</span>(<span class="string">"gulp-uglify"</span>); <span class="comment">//js压缩组件</span></span><br><span class="line"><span class="keyword">var</span> htmlmin = <span class="built_in">require</span>(<span class="string">"gulp-htmlmin"</span>); <span class="comment">//html压缩组件</span></span><br><span class="line"><span class="keyword">var</span> htmlclean = <span class="built_in">require</span>(<span class="string">"gulp-htmlclean"</span>); <span class="comment">//html清理组件</span></span><br><span class="line"><span class="keyword">var</span> imagemin = <span class="built_in">require</span>(<span class="string">"gulp-imagemin"</span>); <span class="comment">//图片压缩组件</span></span><br><span class="line"><span class="keyword">var</span> changed = <span class="built_in">require</span>(<span class="string">"gulp-changed"</span>); <span class="comment">//文件更改校验组件</span></span><br><span class="line"><span class="keyword">var</span> gulpif = <span class="built_in">require</span>(<span class="string">"gulp-if"</span>); <span class="comment">//任务 帮助调用组件</span></span><br><span class="line"><span class="keyword">var</span> plumber = <span class="built_in">require</span>(<span class="string">"gulp-plumber"</span>); <span class="comment">//容错组件（发生错误不跳出任务，并报出错误内容）</span></span><br><span class="line"><span class="keyword">var</span> isScriptAll = <span class="literal">true</span>; <span class="comment">//是否处理所有文件，(true|处理所有文件)(false|只处理有更改的文件)</span></span><br><span class="line"><span class="keyword">var</span> isDebug = <span class="literal">true</span>; <span class="comment">//是否调试显示 编译通过的文件</span></span><br><span class="line"><span class="keyword">var</span> gulpBabel = <span class="built_in">require</span>(<span class="string">"gulp-babel"</span>);</span><br><span class="line"><span class="keyword">var</span> es2015Preset = <span class="built_in">require</span>(<span class="string">"babel-preset-es2015"</span>);</span><br><span class="line"><span class="keyword">var</span> del = <span class="built_in">require</span>(<span class="string">"del"</span>);</span><br><span class="line"><span class="keyword">var</span> Hexo = <span class="built_in">require</span>(<span class="string">"hexo"</span>);</span><br><span class="line"><span class="keyword">var</span> hexo = <span class="keyword">new</span> Hexo(process.cwd(), {}); <span class="comment">// 初始化一个hexo对象</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 清除public文件夹</span></span><br><span class="line">gulp.task(<span class="string">"clean"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{</span><br><span class="line">    <span class="keyword">return</span> del([<span class="string">"public/**/*"</span>]);</span><br><span class="line">});</span><br><span class="line"></span><br><span class="line"><span class="comment">// 下面几个跟hexo有关的操作，主要通过hexo.call()去执行，注意return</span></span><br><span class="line"><span class="comment">// 创建静态页面 （等同 hexo generate）</span></span><br><span class="line">gulp.task(<span class="string">"generate"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{</span><br><span class="line">    <span class="keyword">return</span> hexo.init().then(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{</span><br><span class="line">        <span class="keyword">return</span> hexo</span><br><span class="line">            .call(<span class="string">"generate"</span>, {</span><br><span class="line">                <span class="attr">watch</span>: <span class="literal">false</span></span><br><span class="line">            })</span><br><span class="line">            .then(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{</span><br><span class="line">                <span class="keyword">return</span> hexo.exit();</span><br><span class="line">            })</span><br><span class="line">            .catch(<span class="function"><span class="keyword">function</span> (<span class="params">err</span>) </span>{</span><br><span class="line">                <span class="keyword">return</span> hexo.exit(err);</span><br><span class="line">            });</span><br><span class="line">    });</span><br><span class="line">});</span><br><span class="line"></span><br><span class="line"><span class="comment">// 启动Hexo服务器</span></span><br><span class="line">gulp.task(<span class="string">"server"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{</span><br><span class="line">    <span class="keyword">return</span> hexo</span><br><span class="line">        .init()</span><br><span class="line">        .then(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{</span><br><span class="line">            <span class="keyword">return</span> hexo.call(<span class="string">"server"</span>, {});</span><br><span class="line">        })</span><br><span class="line">        .catch(<span class="function"><span class="keyword">function</span> (<span class="params">err</span>) </span>{</span><br><span class="line">            <span class="built_in">console</span>.log(err);</span><br><span class="line">        });</span><br><span class="line">});</span><br><span class="line"></span><br><span class="line"><span class="comment">// 部署到服务器</span></span><br><span class="line">gulp.task(<span class="string">"deploy"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{</span><br><span class="line">    <span class="keyword">return</span> hexo.init().then(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{</span><br><span class="line">        <span class="keyword">return</span> hexo</span><br><span class="line">            .call(<span class="string">"deploy"</span>, {</span><br><span class="line">                <span class="attr">watch</span>: <span class="literal">false</span></span><br><span class="line">            })</span><br><span class="line">            .then(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{</span><br><span class="line">                <span class="keyword">return</span> hexo.exit();</span><br><span class="line">            })</span><br><span class="line">            .catch(<span class="function"><span class="keyword">function</span> (<span class="params">err</span>) </span>{</span><br><span class="line">                <span class="keyword">return</span> hexo.exit(err);</span><br><span class="line">            });</span><br><span class="line">    });</span><br><span class="line">});</span><br><span class="line"></span><br><span class="line"><span class="comment">// 压缩public目录下的js文件</span></span><br><span class="line">gulp.task(<span class="string">"compressJs"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{</span><br><span class="line">    <span class="keyword">return</span> gulp</span><br><span class="line">        .src([<span class="string">"./public/**/*.js"</span>, <span class="string">"!./public/libs/**"</span>]) <span class="comment">//排除的js</span></span><br><span class="line">        .pipe(gulpif(!isScriptAll, changed(<span class="string">"./public"</span>)))</span><br><span class="line">        .pipe(gulpif(isDebug, debug({ <span class="attr">title</span>: <span class="string">"Compress JS:"</span> })))</span><br><span class="line">        .pipe(plumber())</span><br><span class="line">        .pipe(</span><br><span class="line">            gulpBabel({</span><br><span class="line">                <span class="attr">presets</span>: [es2015Preset] <span class="comment">// es5检查机制</span></span><br><span class="line">            })</span><br><span class="line">        )</span><br><span class="line">        .pipe(uglify()) <span class="comment">//调用压缩组件方法uglify(),对合并的文件进行压缩</span></span><br><span class="line">        .pipe(gulp.dest(<span class="string">"./public"</span>)); <span class="comment">//输出到目标目录</span></span><br><span class="line">});</span><br><span class="line"></span><br><span class="line"><span class="comment">// 压缩public目录下的css文件</span></span><br><span class="line">gulp.task(<span class="string">"compressCss"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{</span><br><span class="line">    <span class="keyword">var</span> option = {</span><br><span class="line">        <span class="attr">rebase</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="comment">//advanced: true, //类型：Boolean 默认：true [是否开启高级优化（合并选择器等）]</span></span><br><span class="line">        <span class="attr">compatibility</span>: <span class="string">"ie7"</span> <span class="comment">//保留ie7及以下兼容写法 类型：String 默认：''or'*' [启用兼容模式； 'ie7'：IE7兼容模式，'ie8'：IE8兼容模式，'*'：IE9+兼容模式]</span></span><br><span class="line">        <span class="comment">//keepBreaks: true, //类型：Boolean 默认：false [是否保留换行]</span></span><br><span class="line">        <span class="comment">//keepSpecialComments: '*' //保留所有特殊前缀 当你用autoprefixer生成的浏览器前缀，如果不加这个参数，有可能将会删除你的部分前缀</span></span><br><span class="line">    };</span><br><span class="line">    <span class="keyword">return</span> gulp</span><br><span class="line">        .src([<span class="string">"./public/**/*.css"</span>, <span class="string">"!./public/**/*.min.css"</span>]) <span class="comment">//排除的css</span></span><br><span class="line">        .pipe(gulpif(!isScriptAll, changed(<span class="string">"./public"</span>)))</span><br><span class="line">        .pipe(gulpif(isDebug, debug({ <span class="attr">title</span>: <span class="string">"Compress CSS:"</span> })))</span><br><span class="line">        .pipe(plumber())</span><br><span class="line">        .pipe(cleancss(option))</span><br><span class="line">        .pipe(gulp.dest(<span class="string">"./public"</span>));</span><br><span class="line">});</span><br><span class="line"></span><br><span class="line"><span class="comment">// 压缩public目录下的html文件</span></span><br><span class="line">gulp.task(<span class="string">"compressHtml"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{</span><br><span class="line">    <span class="keyword">var</span> cleanOptions = {</span><br><span class="line">        <span class="attr">protect</span>: <span class="regexp">/&lt;\!--%fooTemplate\b.*?%--&gt;/g</span>, <span class="comment">//忽略处理</span></span><br><span class="line">        unprotect: <span class="regexp">/&lt;script [^&gt;]*\btype="text\/x-handlebars-template"[\s\S]+?&lt;\/script&gt;/gi</span> <span class="comment">//特殊处理</span></span><br><span class="line">    };</span><br><span class="line">    <span class="keyword">var</span> minOption = {</span><br><span class="line">        <span class="attr">collapseWhitespace</span>: <span class="literal">true</span>, <span class="comment">//压缩HTML</span></span><br><span class="line">        <span class="attr">collapseBooleanAttributes</span>: <span class="literal">true</span>, <span class="comment">//省略布尔属性的值 &lt;input checked="true"/&gt; ==&gt; &lt;input /&gt;</span></span><br><span class="line">        <span class="attr">removeEmptyAttributes</span>: <span class="literal">true</span>, <span class="comment">//删除所有空格作属性值 &lt;input id="" /&gt; ==&gt; &lt;input /&gt;</span></span><br><span class="line">        <span class="attr">removeScriptTypeAttributes</span>: <span class="literal">true</span>, <span class="comment">//删除&lt;script&gt;的type="text/javascript"</span></span><br><span class="line">        <span class="attr">removeStyleLinkTypeAttributes</span>: <span class="literal">true</span>, <span class="comment">//删除&lt;style&gt;和&lt;link&gt;的type="text/css"</span></span><br><span class="line">        <span class="attr">removeComments</span>: <span class="literal">true</span>, <span class="comment">//清除HTML注释</span></span><br><span class="line">        <span class="attr">minifyJS</span>: <span class="literal">true</span>, <span class="comment">//压缩页面JS</span></span><br><span class="line">        <span class="attr">minifyCSS</span>: <span class="literal">true</span>, <span class="comment">//压缩页面CSS</span></span><br><span class="line">        <span class="attr">minifyURLs</span>: <span class="literal">true</span> <span class="comment">//替换页面URL</span></span><br><span class="line">    };</span><br><span class="line">    <span class="keyword">return</span> gulp</span><br><span class="line">        .src(<span class="string">"./public/**/*.html"</span>)</span><br><span class="line">        .pipe(gulpif(isDebug, debug({ <span class="attr">title</span>: <span class="string">"Compress HTML:"</span> })))</span><br><span class="line">        .pipe(plumber())</span><br><span class="line">        .pipe(htmlclean(cleanOptions))</span><br><span class="line">        .pipe(htmlmin(minOption))</span><br><span class="line">        .pipe(gulp.dest(<span class="string">"./public"</span>));</span><br><span class="line">});</span><br><span class="line"></span><br><span class="line"><span class="comment">// 压缩 public/medias 目录内图片</span></span><br><span class="line">gulp.task(<span class="string">"compressImage"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{</span><br><span class="line">    <span class="keyword">var</span> option = {</span><br><span class="line">        <span class="attr">optimizationLevel</span>: <span class="number">5</span>, <span class="comment">//类型：Number 默认：3 取值范围：0-7（优化等级）</span></span><br><span class="line">        <span class="attr">progressive</span>: <span class="literal">true</span>, <span class="comment">//类型：Boolean 默认：false 无损压缩jpg图片</span></span><br><span class="line">        <span class="attr">interlaced</span>: <span class="literal">false</span>, <span class="comment">//类型：Boolean 默认：false 隔行扫描gif进行渲染</span></span><br><span class="line">        <span class="attr">multipass</span>: <span class="literal">false</span> <span class="comment">//类型：Boolean 默认：false 多次优化svg直到完全优化</span></span><br><span class="line">    };</span><br><span class="line">    <span class="keyword">return</span> gulp</span><br><span class="line">        .src(<span class="string">"./public/medias/**/*.*"</span>)</span><br><span class="line">        .pipe(gulpif(!isScriptAll, changed(<span class="string">"./public/medias"</span>)))</span><br><span class="line">        .pipe(gulpif(isDebug, debug({ <span class="attr">title</span>: <span class="string">"Compress Images:"</span> })))</span><br><span class="line">        .pipe(plumber())</span><br><span class="line">        .pipe(imagemin(option))</span><br><span class="line">        .pipe(gulp.dest(<span class="string">"./public"</span>));</span><br><span class="line">});</span><br><span class="line"><span class="comment">// 执行顺序： 清除public目录 -&gt; 产生原始博客内容 -&gt; 执行压缩混淆 -&gt; 部署到服务器</span></span><br><span class="line">gulp.task(</span><br><span class="line">    <span class="string">"build"</span>,</span><br><span class="line">    gulp.series(</span><br><span class="line">        <span class="string">"clean"</span>,</span><br><span class="line">        <span class="string">"generate"</span>,</span><br><span class="line">        <span class="string">"compressHtml"</span>,</span><br><span class="line">        <span class="string">"compressCss"</span>,</span><br><span class="line">        <span class="string">"compressJs"</span>,</span><br><span class="line">        <span class="string">"compressImage"</span>,</span><br><span class="line">        gulp.parallel(<span class="string">"deploy"</span>)</span><br><span class="line">    )</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 默认任务</span></span><br><span class="line">gulp.task(</span><br><span class="line">    <span class="string">"default"</span>,</span><br><span class="line">    gulp.series(</span><br><span class="line">        <span class="string">"clean"</span>,</span><br><span class="line">        <span class="string">"generate"</span>,</span><br><span class="line">        gulp.parallel(<span class="string">"compressHtml"</span>, <span class="string">"compressCss"</span>, <span class="string">"compressJs"</span>,<span class="string">"compressImage"</span>)</span><br><span class="line">    )</span><br><span class="line">);</span><br><span class="line"><span class="comment">//Gulp4最大的一个改变就是gulp.task函数现在只支持两个参数，分别是任务名和运行任务的函数</span></span><br></pre></td></tr></tbody></table></figure><ul><li>以后的执行方式有两种：<ul><li>直接在 Hexo 根目录执行 gulp 或者 gulp default ，这个命令相当于 hexo cl&amp;&amp;hexo g 并且再把代码和图片压缩。</li><li>在 Hexo 根目录执行 gulp build  ，等于说生成、压缩文件后又帮你自动部署了。</li></ul></li></ul><h1 id="12-文章链接转静态短地址"><a href="#12-文章链接转静态短地址" class="headerlink" title="12.文章链接转静态短地址"></a>12.文章链接转静态短地址</h1><p>如果文章名称是中文的，那么 Hexo 默认生成的永久链接也会有中文，这样不利于SEO，且gitment评论对中文链接也不支持。我们可以用hexo-permalink-pinyin Hexo 插件生成文章时生成中文拼音的永久链接，<br>或者用hexo-abbrlink 生成静态文章链接。以下结合hexo-abbrlink生成类似 /yyyy/mmdd+随机数.html 的文章链接地址。<br>安装命令如下：<br><code>npm install hexo-abbrlink --save</code><br>在 Hexo 根目录下的 _config.yml 文件中，修改 permalink: ，并在文件末尾新增 abbrlink:配置项：</p><figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">permalink:</span> <span class="string">:year/:month:day:abbrlink.html</span></span><br><span class="line"></span><br><span class="line"><span class="attr">abbrlink:</span>   </span><br><span class="line">  <span class="attr">alg:</span> <span class="string">crc16</span> <span class="comment">#算法选项：crc16丨crc32  </span></span><br><span class="line">  <span class="attr">rep:</span> <span class="string">dec</span> <span class="comment">#输出进制：dec为十进制，hex为十六进制</span></span><br></pre></td></tr></tbody></table></figure><h1 id="博客备份hexo-git-backup-暂未采用"><a href="#博客备份hexo-git-backup-暂未采用" class="headerlink" title="博客备份hexo-git-backup(暂未采用)"></a>博客备份hexo-git-backup(暂未采用)</h1><p><a href="https://github.com/coneycode/hexo-git-backup">项目地址</a></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><code>npm install hexo-git-backup --save</code></p><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>新建仓库，例如 Hexo_backup ，权限设为 private ，分支默认main<br>先获取项目 ssh 链接：<br><img src="https://gitee.com/wenkex/blogimage/raw/master/Quicker_20220106_234454.png"><br>在 hexo配置文件 中添加以下内容：</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">backup:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">    <span class="attr">repository:</span></span><br><span class="line">       <span class="attr">backup:</span> <span class="string">git@github.com:xingjiahui/Hexo-Backup.git,main</span></span><br></pre></td></tr></tbody></table></figure><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p><code>hexo b</code></p><h1 id="3-CDN-加速"><a href="#3-CDN-加速" class="headerlink" title="3.CDN 加速"></a>3.CDN 加速</h1><h1 id="5-SEO优化"><a href="#5-SEO优化" class="headerlink" title="5.SEO优化"></a>5.SEO优化</h1><p><a href="https://shen-yu.gitee.io/2020/hexo-seo/">参考</a></p><p>搜索引擎优化，又称为SEO，即Search Engine Optimization，它是一种通过分析搜索引擎的排名规律，了解各种搜索引擎怎样进行搜索、怎样抓取互联网页面、怎样确定特定关键词的搜索结果排名的技术。Google自动收录效果还不错，百度就差得远了（GitHub不允许百度的Spider爬取GitHub上的内容）。所以在第三步验证网站的时候，建议选择CNAME验证的方式。</p><h2 id="SEO-sitemap"><a href="#SEO-sitemap" class="headerlink" title="SEO-sitemap"></a>SEO-sitemap</h2><p>1.安装插件<br>查看是否有安装插件<br><code>npm [name] -v</code> </p><p>百度<br><code> npm install hexo-generator-baidu-sitemap --save</code><br>谷歌<br><code> npm install hexo-generator-sitemap --save</code></p><p>2.添加站点配置_config.yml</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">sitemap:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">sitemap.xml</span></span><br><span class="line"><span class="attr">baidusitemap:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">baidusitemap.xml</span></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>再重启 hexo，在本地访问 localhost:4000/sitemap.xml和 localhost:4000/baidusitemap.xml 就能正确的展示出两个sitemap 文件了。</p><p>##推送到 谷歌 和 百度</p><h3 id="百度"><a href="#百度" class="headerlink" title="百度"></a>百度</h3><p><a href="https://ziyuan.baidu.com/site/">百度站点管理</a><br>添加文件方式不可行，hexo会处理html文件</p><p>所以选择，在 head.ejs 里添加 html 标签</p><p>1.1 手动提交baidusitemap.xml(里面也有自动提交的代码)</p><p>1.2 可以用”抓取诊断”，手动-百度抓取</p><p>1.3 Robots → 检测并更新</p><p><a href="https://search.google.com/search-console/about">谷歌站点管理</a></p><p>5.在根目录下 新建 robots.txt</p><h1 id="Hexo自定义原理"><a href="#Hexo自定义原理" class="headerlink" title="Hexo自定义原理"></a>Hexo自定义原理</h1><p>Hexo 系列的博客中的文章都是经Hexo的主题渲染的静态网页。所以Hexo博客大部分都呈现出一种高度的统一化与规范化。不过 Hexo 提供了跳过渲染功能，使得我们可以直接在博客中放入自定义网页。</p><p>比如在博客中放入图片、自定义404.html、自定义About页面、简历等<br>创建自定义网页<br>网页可以是自己编写的，也可以是别人现成的源码（下载喜欢的页面）。</p><h2 id="添加文件"><a href="#添加文件" class="headerlink" title="添加文件"></a>添加文件</h2><p>网页编写完成后，在Hexo\source目录下创建一个文件夹（文件夹名称任意，比如我创建的是about这个文件夹，部署完成后，访问<a href="http://mrlsm.github.io/about%E5%8D%B3%E5%8F%AF%E7%9C%8B%E5%88%B0%E6%95%88%E6%9E%9C%EF%BC%8C%E4%BE%9D%E6%AD%A4%E7%B1%BB%E6%8E%A8%EF%BC%89">http://mrlsm.github.io/about即可看到效果，依此类推）</a></p><p>将 html 文件放置于此文件夹，并重命名为 index.html 。</p><p>跳过渲染有下述两种方法：</p><h2 id="1-指定文件跳过渲染"><a href="#1-指定文件跳过渲染" class="headerlink" title="1.指定文件跳过渲染"></a>1.指定文件跳过渲染</h2><p>实现原理</p><p>给单个文件添加不应用模板的标记，适用于个别特殊文件的处理。</p><p>实现方法<br>在不需要渲染的文章或HTML文件头部添加以下标记</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">layout: false</span><br><span class="line">---</span><br></pre></td></tr></tbody></table></figure><p>添加该指令后，执行 hexo g命令时便会跳过该 index.html文件，使得index.html不受当前 hexo 主题影响，完全是一个独立的网页，如果网页引用了 css 或 js，css 和 js 需使用外链或者将css js 文件放入index.html同目录下引用。</p><p>引用图片亦是如此</p><h2 id="2-对相关文件跳过渲染"><a href="#2-对相关文件跳过渲染" class="headerlink" title="2.对相关文件跳过渲染"></a>2.对相关文件跳过渲染</h2><p>实现原理<br>只有source目录下的文件才会发布到public（能够在网络上访问到），因此Hexo只渲染source目录下的文件。skip_render参数设置的路径是相对于source目录的路径。<br>Hexo的配置文件中提供了配置项skip_render ，是用来对不需要的目录或者文件进行渲染排除。</p><p>实现方法<br>在_config.yml文件中设置skip_render<br>使用编辑器打开 Hexo 目录下的_config.yml文件，找到skip_render</p><p>skip_render一般有以下四种常用参数：</p><ul><li>跳过source目录下的 test.html:<br>skip_render: test.html</li><li>跳过source目录下 test 文件夹内所有文件：skip_render: test/*</li><li>跳过source目录下 test 文件夹内所有文件包括子文件夹以及子文件夹内的文件：<br>skip_render: test/**</li><li>跳过多个路径：<figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">skip_render:</span></span><br><span class="line"> <span class="bullet">-</span> <span class="string">test.html</span></span><br><span class="line"> <span class="bullet">-</span> <span class="string">test/*</span></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure></li><li>不渲染 md 文件<br>skip_render: test/*.md 单个文件夹下指定类型文件</li></ul><h1 id="安装一个本地后台管理-Hexo-Admin"><a href="#安装一个本地后台管理-Hexo-Admin" class="headerlink" title="安装一个本地后台管理(Hexo Admin)"></a>安装一个本地后台管理(Hexo Admin)</h1><p>1.在博客根目录下运行下列指令<br>npm install –save hexo-admin<br>2.运行hexo s<br>3.接下来在浏览器地址栏粘贴这个地址，<br><a href="http://localhost:4000/admin/">http://localhost:4000/admin/</a><br>4.增加密码<br>进入Settings &gt; Setup authentification<br>设置账户，密码得到一串配置<br>填加到站点配置文件下</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">admin:</span></span><br><span class="line">  <span class="attr">username:</span> <span class="string">myfavoritename</span></span><br><span class="line">  <span class="attr">password_hash:</span> <span class="string">be121740bf988b2225a313fa1f107ca1</span></span><br><span class="line">  <span class="attr">secret:</span> <span class="string">a</span> <span class="string">secret</span> <span class="string">something</span></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h2 id="增加上传功能"><a href="#增加上传功能" class="headerlink" title="增加上传功能"></a>增加上传功能</h2><p>在博客根目录下运行下列指令</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">echo</span> <span class="string">"hexo clean &amp;&amp; hexo g -d"</span><span class="string">&gt;hexo-deploy.bat</span> <span class="comment">#生成一个内容为"hexo clean &amp;&amp; hexo g -d"，名为"hexo-deploy"的bat文件。</span></span><br><span class="line"><span class="comment">#配置_config.yml文件，</span></span><br><span class="line"><span class="string">echo</span> <span class="string">admin:&gt;&gt;"_config.yml"</span></span><br><span class="line"><span class="string">echo</span> <span class="string">"  deployCommand: 'hexo-deploy.bat'"</span><span class="string">&gt;&gt;"_config.yml"</span></span><br><span class="line"><span class="comment">#开启hexo服务</span></span><br><span class="line"><span class="string">hexo</span> <span class="string">server</span> <span class="string">-d</span></span><br></pre></td></tr></tbody></table></figure><p>这个教程是对于github的部署的。如果想用来管理gitee的博客，建议修改成echo “hexo clean &amp;&amp; hexo g -d &amp;&amp; start <a href="https://gitee.com/%E7%94%A8%E6%88%B7%E5%90%8D/%E7%94%A8%E6%88%B7%E5%90%8D/pages&quot;>hexo-deploy.bat%EF%BC%8C%E8%BF%99%E6%A0%B7%E6%96%B9%E4%BE%BF%E5%9C%A8%E7%BD%91%E9%A1%B5%E7%AB%AF%E5%90%8C%E6%AD%A5%E6%9B%B4%E6%96%B0gitee">https://gitee.com/用户名/用户名/pages"&gt;hexo-deploy.bat，这样方便在网页端同步更新gitee</a> page。<br>在网页中编辑完，直接左上角Deploy，直接点deploy按钮，就可以完成博客的部署。</p><p>可能遇到的问题(每次都要输入密码)：查看一下你的_config.yml，将文档最后的deploy的repo从http改为git@github类型。</p><h1 id="图床"><a href="#图床" class="headerlink" title="图床"></a>图床</h1><h2 id="建议"><a href="#建议" class="headerlink" title="建议"></a>建议</h2><p>使用utool里的图床插件，picGo还要下载，而utool里还有其他有趣的插件</p><h2 id="使用-PicGo-GitHub图床"><a href="#使用-PicGo-GitHub图床" class="headerlink" title="使用 PicGo+GitHub图床"></a>使用 PicGo+GitHub图床</h2><p><a href="https://yafine-blog.cn/posts/eb3a.html">参考</a></p><h3 id="新建GitHub仓库"><a href="#新建GitHub仓库" class="headerlink" title="新建GitHub仓库"></a>新建GitHub仓库</h3><p>创建是记住分支名，默认是main </p><h3 id="生成一个Token"><a href="#生成一个Token" class="headerlink" title="生成一个Token"></a>生成一个Token</h3><p>在主页依次选择【Settings】-【Developer settings】-【Personal access tokens】-【Generate new token】，填写好描述，勾选【repo】，然后点击【Generate token】生成一个Token，注意这个Token只会显示一次，自己先保存下来，或者等后面配置好PicGo后再关闭此网页</p><p><img src="https://cdn.jsdelivr.net/gh/wenkexia/image/06.jpg"></p><h3 id="配置PicGo"><a href="#配置PicGo" class="headerlink" title="配置PicGo"></a>配置PicGo</h3><p>前往下载PicGo，安装好后开始配置图床<br>设定仓库名：按照【用户名/图床仓库名】的格式填写</p><p>设定分支名：【main】</p><p>设定Token：粘贴之前生成的【Token】</p><p>设定自定义域名：它的作用是，在图片上传后，PicGo 会按照【自定义域名+储存路径+上传的图片名】的方式生成访问链接，并放到粘贴板上，因为我们要使用 jsDelivr 加速访问，所以可以设置为【<a href="https://cdn.jsdelivr.net/gh/%E7%94%A8%E6%88%B7%E5%90%8D/%E5%9B%BE%E5%BA%8A%E4%BB%93%E5%BA%93%E5%90%8D">https://cdn.jsdelivr.net/gh/用户名/图床仓库名</a> 】</p><h2 id="使用-PicGo-Gitee-码云-搭建免费图床"><a href="#使用-PicGo-Gitee-码云-搭建免费图床" class="headerlink" title="使用 PicGo+Gitee (码云) 搭建免费图床"></a>使用 PicGo+Gitee (码云) 搭建免费图床</h2><p><a href="https://yafine-blog.cn/posts/15cb.html">参考</a><br>1.新建公开仓库<br>2.在主页的设置里生成私人令牌，这个密钥一定要保存好，之后就显示不了了<br><img src="https://gitee.com/wenkex/blogimage/raw/master/Quicker_20220105_232136.png"><br>3.下载安装PigGo软件，进去软件界面，搜索插件gitee-uploader下载安装，然后重启<br>配置图床<br><img src="https://gitee.com/wenkex/blogimage/raw/master/2a10a614199153b5b11e09398990b50e.png"></p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
